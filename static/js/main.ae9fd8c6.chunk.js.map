{"version":3,"sources":["components/footer.js","components/level.js","components/minigraph.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/timeseriesexplorer.js","constants.js","components/search.js","components/row.js","components/table.js","components/updates.js","components/home.js","components/navbar.js","utils/ScrollToTop.js","App.js","serviceWorker.js","index.js","utils/commonfunctions.js","components/tooltips.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","useState","data","setData","useEffectOnce","active","confirmed","recovered","deaths","deltaconfirmed","deltadeaths","deltarecovered","isNaN","formatNumber","timeseries","timeSeriesData","setTimeSeriesData","svgRef1","useRef","svgRef2","svgRef3","svgRef4","useEffect","slice","length","graphData","useCallback","margin","chartRight","chartBottom","svg1","d3","current","svg2","svg3","svg4","forEach","d","dailyconfirmed","dailyrecovered","dailydeceased","xScale","domain","date","range","svgArray","dataTypes","colors","dailyMin","dailyactive","dailyMax","Math","max","domainMinMax","yScale","svg","i","type","color","path","append","datum","attr","x","y","curve","totalLength","node","getTotalLength","transition","delay","duration","selectAll","enter","on","ref","width","height","viewBox","preserveAspectRatio","ramp","n","canvas","context","getContext","fillStyle","fillRect","legend","title","tickSize","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","ordinalWeights","tickAdjust","g","interpolate","min","copy","rangeRound","select","toDataURL","interpolator","Object","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","join","widthScale","reduce","a","b","xPos","w","acc","bandwidth","call","remove","text","ChoroplethMap","statistic","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapOption","choroplethMap","choroplethLegend","mapMeta","MAP_META","name","ready","geoData","topologyStates","mapType","MAP_TYPES","COUNTRY","topojson","objects","graphObjectStates","features","topologyDistricts","view","MAP_VIEWS","DISTRICTS","graphObjectDistricts","topology","STATES","projection","widthStyle","parseInt","fitWidth","heightStyle","fitSize","bBox","bounds","split","colorScale","svgLegend","widthLegend","heightLegend","stat","MAP_STATISTICS","ZONE","values","clamp","capitalizeAll","PER_MILLION","TOTAL","Number","isInteger","featureStates","f","state","properties","st_nm","obj","id","featureDistricts","district","onceTouchedRegion","regionSelection","sel","isHovered","this","classed","region","stopPropagation","STATE","parseFloat","total","toFixed","toString","parentNode","appendChild","meshStates","meshDistricts","geoDataFile","paths","nodes","highlightRegionInMap","Fragment","Unknown","position","colorInterpolationFilters","getRegionFromState","mapName","states","districts","zones","stateTestData","anchor","setAnchor","setMapOption","setCurrentMap","currentMapMeta","useMemo","currentMapData","dtype","keys","acc1","acc2","zone","typeCount","STATE_POPULATIONS","districtWiseData","districtData","Total","find","getRegionFromDistrict","hoveredRegion","panelRegion","hoveredRegionCount","hoveredRegionZone","switchMapToState","newMapMeta","topDistrict","filter","sort","ReactDOM","unstable_batchedUpdates","testObj","totaltested","display","window","innerWidth","onClick","parse","updatedon","Date","format","source","testedToolTip","lastupdatedtime","formatDate","formatDistance","to","STATE_CODES_REVERSE","prevProps","currProps","equal","timeseriesProp","chartType","mode","logMode","isTotal","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","index","setIndex","moving","setMoving","svgRef5","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","sliceTimeseriesFromEnd","T","yScales","svg5","dateMin","subDays","dateMax","addDays","numTicksX","xAxis","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","totalactive","totalrecovered","totaldeceased","uniformScaleMax","totalconfirmed","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","filteredTimeseries","reverse","p","getPointAtLength","repeat","mousemove","mouseout","xm","invert","bisectDate","left","j","dateStr","chartKey1","chartKey2","chartKey3","chartKey4","chartKey5","currentStatusCount","currentDiff","formatedDiff","aria-label","activeStateCode","onHighlightState","isIntersecting","useLocalStorage","setChartType","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","htmlFor","checked","onChange","event","disabled","value","selectedState","selectedOptions","getAttribute","JSON","s","statecode","key","statedata","stringify","STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","DISTRICT","India","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","stateCodes","reverseStateCodes","push","code","STATE_CODES_ARRAY","engine","Bloodhound","initialize","local","queryTokenizer","tokenizers","whitespace","datumTokenizer","districtEngine","limit","indexRemote","remote","url","transform","response","stateName","districtName","essentialsEngine","resources","focused","suggestions","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","handleSearch","search","datums","result","stateObj","route","districtObj","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","setNativeValue","element","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","useDebounce","targetInput","document","getElementById","loopThroughSuggestions","textContent","fillPlaceholder","cursorPosition","callback","placeholder","classList","setTimeout","clearPlaceholder","add","onFocus","onBlur","toLowerCase","match","onMouseDown","preventDefault","dispatchEvent","Event","bubbles","useBreakpoint","createBreakpoint","XL","L","S","StateCell","ArrowUp","classnames","DistrictHeaderCell","handleSort","sortData","breakpoint","capitalize","abbreviate","sortColumn","isAscending","DistrictCell","delta","DistrictRow","onHighlightDistrict","sortedDistricts","onMouseEnter","data-for","data-tip","notes","data-event","data-event-off","e","setSortedDistricts","showDistricts","setShowDistricts","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","_onHighlightState","doSort","sorted","district1","district2","localeCompare","newSortData","statenotes","colSpan","paddingBottom","align","place","effect","multiline","scrollHide","globalEventOff","StateHeaderCell","sortedStates","setSortedStates","FineprintTop","FineprintBottom","newSortedStates","newDate","currentDate","Updates","updates","setUpdates","axios","get","then","catch","err","console","log","useLayoutEffect","activity","update","replace","activityDate","timestamp","getDate","dangerouslySetInnerHTML","__html","Home","setStates","stateDistrictWiseData","setStateDistrictWiseData","districtZones","setDistrictZones","setStateTestData","lastUpdated","setLastUpdated","fetched","setFetched","showUpdates","setShowUpdates","isTimeseriesIntersecting","setIsTimeseriesIntersecting","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","Bell","BellOff","getStates","lastTimestamp","Promise","all","statesDailyResponse","zonesResponse","stateDistrictWiseResponse","statewise","parseDistrictZones","ts","parseStateTimeseries","preprocessTimeseries","cases_time_series","testTs","parseStateTestTimeseries","states_tested_data","parseTotalTestTimeseries","tested","tsMerged","mergeTimeseries","testData","totalTest","updatetimestamp","totalsamplestested","Helmet","content","formatDateAbsolute","summary","options","rootMargin","activeNavIcon","stroke","location","pathname","Expand","pages","expandElement","anime","targets","translateX","easing","onMouseLeave","page","showInNavbar","pageLink","animationDelayForNavbar","displayName","Navbar","darkMode","setDarkMode","setIsThemeSet","useLockBodyScroll","windowSize","useWindowSize","prevMode","strokeDashoffset","setDashoffset","el","direction","loop","ScrollToTop","useLocation","scrollTo","DeepDive","lazy","FAQ","PatientDB","Resources","State","schemaMarkup","alternateName","image","App","isThemeSet","matchMedia","matches","querySelector","fallback","render","exact","params","stateCode","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","unregister","reload","checkValidServiceWorker","months","getStateName","toUpperCase","getIndiaDay","startOfDay","utcToZonedTime","unformattedDate","day","month","year","time","every","dt","today","isBefore","validateCTS","days","numberFormatter","Intl","NumberFormat","states_daily","statewiseSeries","c","k","v","prev","testTimseries","ret","sc","dailytested","stateTs","differenceInDays","NaN","isSameDay","ts1","ts2","tsRet","hasOwnProperty","d1","d2","charAt","str"],"mappings":"8GAAA,iEAiEeA,QAAMC,MA7DrB,SAAgBC,GAAQ,IACfC,EAAKC,cAALD,EAEP,OACE,4BAAQE,UAAU,WAAWC,MAAO,CAACC,eAAgB,OACnD,4BAAKJ,EAAE,sDAEP,yBAAKE,UAAU,QACb,uBACEG,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAHN,iBASF,uBACEF,KAAK,qDACLH,UAAU,gBACVI,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,MACA,yDAGF,uBACEL,UAAU,eACVG,KAAK,oCACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,MACA,oEAGF,uBACEF,KAAK,sCACLC,OAAO,SACPC,IAAI,sBACJL,UAAU,iBACVC,MAAO,CAACK,eAAgB,WAExB,kBAAC,IAAD,MACA,0DAGF,uBACEH,KAAK,8BACLH,UAAU,kBACVI,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,MACA,qE,oFC8BOV,QAAMC,MAnFrB,SAAeC,GAAQ,IAAD,EACIU,mBAASV,EAAMW,MADnB,mBACbA,EADa,KACPC,EADO,KAEbX,EAAKC,cAALD,EAcP,OAZAY,aAAc,WACZD,EAAQ,CACNE,QAASd,EAAMW,KAAKG,OACpBC,WAAYf,EAAMW,KAAKI,UACvBC,WAAYhB,EAAMW,KAAKK,UACvBC,QAASjB,EAAMW,KAAKM,OACpBC,gBAAiBlB,EAAMW,KAAKO,eAC5BC,aAAcnB,EAAMW,KAAKQ,YACzBC,gBAAiBpB,EAAMW,KAAKS,oBAK9B,yBAAKjB,UAAU,SACb,yBACEA,UAAU,gCACVC,MAAO,CAACC,eAAgB,OAExB,4BAAKJ,EAAE,cACP,gCAEGoB,MAAMV,EAAKO,gBACR,GACAP,EAAKO,eAAiB,EACtB,IAAMI,YAAaX,EAAKO,gBACxB,KANN,KASA,4BAAKI,YAAaX,EAAKI,WAAvB,MAGF,yBACEZ,UAAU,8BACVC,MAAO,CAACC,eAAgB,SAExB,wBAAIF,UAAU,WAAWF,EAAE,WAC3B,oCACA,wBAAIE,UAAU,uBAAuBmB,YAAaX,EAAKG,UAGzD,yBACEX,UAAU,+BACVC,MAAO,CAACC,eAAgB,SAExB,wBAAIF,UAAU,WAAWF,EAAE,cAC3B,gCAEGoB,MAAMV,EAAKS,gBACR,GACAT,EAAKS,eAAiB,EACtB,IAAME,YAAaX,EAAKS,gBACxB,KANN,KASA,wBAAIjB,UAAU,0BACXmB,YAAaX,EAAKK,WAAY,MAInC,yBACEb,UAAU,8BACVC,MAAO,CAACC,eAAgB,SAExB,wBAAIF,UAAU,WAAWF,EAAE,aAC3B,gCAEGoB,MAAMV,EAAKQ,aACR,GACAR,EAAKQ,YAAc,EACnB,IAAMG,YAAaX,EAAKQ,aACxB,KANN,KASA,wBAAIhB,UAAU,uBAAuBmB,YAAaX,EAAKM,e,mECoFhDnB,QAAMC,MApKrB,YAAkC,IAAdwB,EAAa,EAAbA,WAAa,EACab,mBAAS,IADtB,mBACxBc,EADwB,KACRC,EADQ,KAEzBC,EAAUC,mBACVC,EAAUD,mBACVE,EAAUF,mBACVG,EAAUH,mBAEhBI,qBAAU,WACRN,EAAkBF,EAAWS,MAAMT,EAAWU,OAAS,OACtD,CAACV,IAEJ,IAAMW,EAAYC,uBAAY,SAACxB,GAC7B,GAAIA,EAAKsB,QAAU,EAAG,OAAO,EAE7B,IAAMG,EAAe,GAAfA,EAA+C,EAC/CC,EAAa,IADa,EAE1BC,EAAc,IAFuB,GAIrCC,EAAOC,IAAUd,EAAQe,SACzBC,EAAOF,IAAUZ,EAAQa,SACzBE,EAAOH,IAAUX,EAAQY,SACzBG,EAAOJ,IAAUV,EAAQW,SAE/B9B,EAAKkC,SAAQ,SAACC,GACZA,EAAC,YAAkBA,EAAEC,eAAiBD,EAAEE,eAAiBF,EAAEG,iBAG7D,IAAMC,EAASV,MAEZW,OAAOX,IAAU7B,GAAM,SAACmC,GAAD,OAAOA,EAAEM,SAChCC,MAAM,CAACjB,EAAaC,IAEjBiB,EAAW,CAACf,EAAMG,EAAMC,EAAMC,GAC9BW,EAAY,CAChB,iBACA,cACA,iBACA,iBAEIC,EAAS,CAAC,UAAW,UAAW,UAAW,WAE3CC,EAAWjB,IAAO7B,GAAM,SAACmC,GAAD,OAAOA,EAAEY,eACjCC,EAAWnB,IAAO7B,GAAM,SAACmC,GAAD,OAC5Bc,KAAKC,IAAIf,EAAEC,eAAgBD,EAAEE,eAAgBF,EAAEG,kBAE3Ca,EAAeF,KAAKC,KAAKJ,EAAUE,GAEnCI,EAASvB,MAEZW,OAAO,EAAEW,EAAcA,IACvBT,MAAM,CAACf,EAAaF,IAEvBkB,EAAST,SAAQ,SAACmB,EAAKC,GACrB,IAAMC,EAAOX,EAAUU,GACjBE,EAAQX,EAAOS,GAEfG,EAAOJ,EACVK,OAAO,QACPC,MAAM3D,GACN4D,KAAK,OAAQ,QACbA,KAAK,SAAUJ,EAAQ,MACvBI,KAAK,eAAgB,KACrBA,KAAK,SAAU,WACfA,KACC,IACA/B,MAEGgC,GAAE,SAAC1B,GAAD,OAAOI,EAAOJ,EAAEM,SAClBqB,GAAE,SAAC3B,GAAD,OAAOiB,EAAOjB,EAAEoB,OAClBQ,MAAMlC,MAGPmC,EAAcP,EAAKQ,OAAOC,iBAChCT,EACGG,KAAK,mBAAoBI,EAAc,IAAMA,GAC7CJ,KAAK,oBAAqBI,GAC1BG,aACAC,MAAM,KACNC,SAAS,MACTT,KAAK,oBAAqB,GAE7BP,EACGiB,UAAU,QACVtE,KAAKA,EAAKqB,MAAMrB,EAAKsB,OAAS,IAC9BiD,QACAb,OAAO,UACPE,KAAK,OAAQJ,GACbI,KAAK,SAAUJ,GACfI,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,MAAM,SAACzB,GAAD,OAAOiB,EAAOjB,EAAEoB,OAC3BiB,GAAG,aAAa,SAACrC,GAChBN,IAAUA,IAASjC,QAAQgE,KAAK,IAAK,QAEtCY,GAAG,YAAY,SAACrC,GACfN,IAAUA,IAASjC,QAAQgE,KAAK,IAAK,QAEtCnE,MAAM,UAAW,GACjB0E,aACAC,MAAM,KACNC,SAAS,MACT5E,MAAM,UAAW,QAErB,IAMH,OAJA2B,qBAAU,WACRG,EAAUV,KACT,CAACA,EAAgBU,IAGlB,yBAAK/B,UAAU,aACb,yBAAKA,UAAU,sBAAsBC,MAAO,CAACC,eAAgB,SAC3D,yBACE+E,IAAK1D,EACL2D,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,oBAAoB,mBAIxB,yBACErF,UAAU,8BACVC,MAAO,CAACC,eAAgB,SAExB,yBACE+E,IAAKxD,EACLyD,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,oBAAoB,mBAIxB,yBACErF,UAAU,+BACVC,MAAO,CAACC,eAAgB,SAExB,yBACE+E,IAAKvD,EACLwD,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,oBAAoB,mBAIxB,yBACErF,UAAU,8BACVC,MAAO,CAACC,eAAgB,SAExB,yBACE+E,IAAKtD,EACLuD,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,oBAAoB,wB,oFCyE9B,SAASC,EAAKtB,GAMZ,IAN6B,IAAVuB,EAAS,uDAAL,IAEjBC,EAASnD,IAAU,gBAAgBoC,OACnCgB,GAAYD,EAAON,MAAQK,EAAKC,EAAOL,OAAS,EAAIK,GAAQE,WAChE,MAEO5B,EAAI,EAAGA,EAAIyB,IAAKzB,EACvB2B,EAAQE,UAAY3B,EAAMF,GAAKyB,EAAI,IACnCE,EAAQG,SAAS9B,EAAG,EAAG,EAAG,GAE5B,OAAO0B,EAGMK,MAlPf,WAeS,IAAD,yDAAJ,GAdF7B,EAcM,EAdNA,MACA8B,EAaM,EAbNA,MAaM,IAZNC,gBAYM,MAZK,EAYL,MAXNb,aAWM,MAXE,IAWF,MAVNC,cAUM,MAVG,GAAKY,EAUR,MATNC,iBASM,MATM,GASN,MARNC,mBAQM,MARQ,EAQR,MAPNC,oBAOM,MAPS,GAAKH,EAOd,MANNI,kBAMM,MANO,EAMP,EALNtC,EAKM,EALNA,IAKM,IAJNuC,aAIM,MAJElB,EAAQ,GAIV,EAHNmB,EAGM,EAHNA,WACAC,EAEM,EAFNA,WACAC,EACM,EADNA,eAEK1C,IACHA,EAAMxB,IACI,OACP+B,KAAK,QAASc,GACdd,KAAK,SAAUe,GACff,KAAK,UAAW,CAAC,EAAG,EAAGc,EAAOC,IAC9BlF,MAAM,WAAY,WAClBA,MAAM,UAAW,UAEtB,IAOIoE,EAPEvE,EAAI+D,EAAIc,aAAaE,SAAS,KAEhC2B,EAAa,SAACC,GACFA,EAAE3B,UAAU,cACpBV,KAAK,KAAM4B,EAAYE,EAAef,IAM9C,GAAInB,EAAM0C,YAAa,CACrB,IAAMnB,EAAI9B,KAAKkD,IAAI3C,EAAMhB,SAASlB,OAAQkC,EAAMd,QAAQpB,QAExDuC,EAAIL,EACD4C,OACAC,WACCxE,IAAYA,IAAe8D,EAAYjB,EAAQe,GAAcV,IAGjE1B,EACGiD,OAAO,SACP1C,KAAK,QAAS,QACdA,KAAK,IAAK+B,GACV/B,KAAK,IAAK4B,GACV5B,KAAK,QAASc,EAAQiB,EAAaF,GACnC7B,KAAK,SAAUe,EAASa,EAAYE,GACpC9B,KAAK,sBAAuB,QAC5BA,KACC,aACAkB,EACEtB,EAAM4C,OAAO5D,OAAOX,IAAYA,IAAe,EAAG,GAAIkD,KACtDwB,kBAKH,GAAI/C,EAAMgD,cA2Bb,GA1BAnD,EAAIiB,UAAU,QAAQH,WAAW7E,GAAGsE,KAAK,UAAW,GAEpDC,EAAI4C,OAAOC,OACTlD,EACG4C,OACAI,aAAa3E,IAAoB8D,EAAYjB,EAAQe,IACxD,CACE/C,MADF,WAEI,MAAO,CAACiD,EAAYjB,EAAQe,MAKlCpC,EACGiD,OAAO,SACP1C,KAAK,QAAS,QACdA,KAAK,IAAK+B,GACV/B,KAAK,IAAK4B,GACV5B,KAAK,QAASc,EAAQiB,EAAaF,GACnC7B,KAAK,SAAUe,EAASa,EAAYE,GACpC9B,KAAK,sBAAuB,QAC5BA,KAAK,aAAckB,EAAKtB,EAAMgD,gBAAgBD,aAC9CpC,WAAW7E,GACXsE,KAAK,UAAW,IAGdC,EAAE+B,MAAO,CACZ,QAAmBe,IAAfb,EAA0B,CAC5B,IAAMf,EAAI9B,KAAK2D,MAAMhB,EAAQ,GAC7BE,EAAajE,IACJkD,GACN8B,KAAI,SAACvD,GAAD,OAAOzB,IAAY2B,EAAMhB,SAAUc,GAAKyB,EAAI,OAE3B,oBAAfc,IACTA,EAAahE,SAAyB8E,IAAfd,EAA2B,KAAOA,UAM1D,GAAIrC,EAAMsD,aAAc,CAC3B,IAAMC,EAAavD,EAAMuD,WACrBvD,EAAMuD,aACNvD,EAAMwD,UACNxD,EAAMwD,YACNxD,EAAMhB,SAEJyE,OACWN,IAAfd,EACI,SAAC1D,GAAD,OAAOA,GACe,kBAAf0D,EACPhE,IAAUgE,GACVA,EAENhC,EAAIhC,MAEDW,OAAO,EAAE,EAAGgB,EAAMd,QAAQpB,OAAS,IACnC+E,WAAW,CAACV,EAAYjB,EAAQe,IAEnCpC,EACGK,OAAO,KACPY,UAAU,QACVtE,KAAKwD,EAAMd,SACXwE,KAAK,QACLtD,KAAK,KAAK,SAACzB,EAAGmB,GAAJ,OAAUO,EAAEP,EAAI,MAC1BM,KAAK,IAAK4B,GACV5B,KAAK,SAAS,SAACzB,EAAGmB,GAAJ,OAAUO,EAAEP,GAAKO,EAAEP,EAAI,MACrCM,KAAK,SAAUe,EAASa,EAAYE,GACpC9B,KAAK,QAAQ,SAACzB,GAAD,OAAOA,KAEvB2D,EAAajE,KAAU,EAAGkF,EAAWzF,QACrCuE,EAAa,SAACvC,GACZ,OAAW,IAAPA,EAAiB2D,EAAgB,GAC5B3D,IAAMyD,EAAWzF,OAAS,EAC1BgC,IAAMyD,EAAWzF,OAAS,EAC1B2F,EAAgBF,EAAWzD,GAAK,IAAKA,GACvC2D,EAAgBF,EAAWzD,GAAIA,QAHjC,OAQJ,CAMH,GALAD,EACGiD,OAAO,SACPnC,WAAW7E,GACXsE,KAAK,UAAW,GAChBA,KAAK,aAAc,MACjBmC,EAcE,CACL,IAAMoB,EAAatF,MAEhBW,OAAO,CAAC,EAAGuD,EAAeqB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,OAC/CjB,WAAW,CAAC,EAAG3B,EAAQiB,EAAaF,IAEjC8B,EAAOxB,EAAec,KAAI,SAACW,EAAGlE,GAAJ,OAC9ByC,EACG1E,MAAM,EAAGiC,GACT8D,QAAO,SAACK,EAAKD,GAAN,OAAYC,EAAMN,EAAWK,KAAI7B,MAG7C9B,EAAIhC,MAAkBW,OAAOgB,EAAMhB,UAAUE,MAAM6E,GAEnDlE,EACGiB,UAAU,QACVtE,KAAKwD,EAAMhB,UACX0E,MAAK,SAAC3C,GAAD,OACJA,EACGb,OAAO,QACPE,KAAK,IAAKC,GACVD,KAAK,SAAS,SAACzB,EAAGmB,GAAJ,OAAU6D,EAAWpB,EAAezC,UAEtDM,KAAK,IAAK4B,GACV5B,KAAK,SAAUe,EAASa,EAAYE,GACpC9B,KAAK,OAAQJ,GACbW,WAAW7E,GACXsE,KAAK,IAAKC,GACVD,KAAK,SAAS,SAACzB,EAAGmB,GAAJ,OAAU6D,EAAWpB,EAAezC,OAClDM,KAAK,UAAW,QA1CnBC,EAAIhC,MAEDW,OAAOgB,EAAMhB,UACb6D,WAAW,CAACV,EAAYjB,EAAQe,IACnCpC,EACGiB,UAAU,QACVtE,KAAKwD,EAAMhB,UACX0E,KAAK,QACLtD,KAAK,IAAKC,GACVD,KAAK,IAAK4B,GACV5B,KAAK,QAASX,KAAKC,IAAI,EAAGW,EAAE6D,YAAc,IAC1C9D,KAAK,SAAUe,EAASa,EAAYE,GACpC9B,KAAK,OAAQJ,GAiClBwC,EAAa,aA+Bf,OA5BA3C,EACGiD,OAAO,SACP1C,KAAK,YAFR,sBAEoCe,EAASe,EAF7C,MAGGvB,WAAW7E,GACXsE,KAAK,QAAS,QACd+D,KACC9F,IACcgC,GACX+B,MAAMA,EAA6B,kBAAfC,EAA0BA,OAAac,GAC3Dd,WAAiC,oBAAfA,EAA4BA,OAAac,GAC3DpB,SAASA,GACTO,WAAWA,IAEftB,GAAG,SAAS,WACXnB,EAAIsE,KAAK3B,GAAY2B,MAAK,SAACtE,GAAD,OAASA,EAAIiD,OAAO,WAAWsB,eAE1DD,MAAK,SAAC1B,GAAD,OACJA,EACGK,OAAO,aACP1C,KAAK,QAAS,YACdA,KAAK,IAAK+B,GACV/B,KAAK,IAAK4B,EAAYE,EAAef,EAAS,GAC9Cf,KAAK,OAAQ,gBACbA,KAAK,cAAe,SACpBA,KAAK,cAAe,QACpBiE,KAAKvC,MAGLjC,EAAIY,Q,+CCgRE6D,MA5ef,YASI,IAAD,IARDC,EAQC,EARDA,UACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,WACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,UAEMC,EAAgBvH,iBAAO,MACvBwH,EAAmBxH,iBAAO,MAE1ByH,EAAUC,IAAST,EAAWU,MAE9BC,EAAQpH,uBACZ,SAACqH,GACC,IAyBIpF,EACAiB,EACAC,EA3BEtB,EAAMxB,IAAU0G,EAAczG,SAE9BgH,EACJL,EAAQM,UAAYC,IAAUC,QAC1BC,IACEL,EACAA,EAAQM,QAAQV,EAAQW,oBAE1B,CAACC,SAAU,IACXC,EACJrB,EAAWsB,OAASC,IAAUC,UAC1BP,IACEL,EACAA,EAAQM,QAAQV,EAAQiB,uBAE1B,CAACL,SAAU,IAEXM,EACJ1B,EAAWsB,OAASC,IAAUI,OAC1Bd,EACAQ,EAEAO,EAAahI,MAMnB,IAAKwB,EAAIO,KAAK,WAAY,CACxB,IAAMkG,EAAaC,SAAS1G,EAAI5D,MAAM,UACtC,GAAI4I,EAAiBwB,EAAWG,SAASF,EAAYH,OAChD,CACH,IAAMM,EAAcF,SAAS1G,EAAI5D,MAAM,WACvCoK,EAAWK,QAAQ,CAACJ,EAAYG,GAAcN,GAGhD,IAAMQ,GADN1G,EAAO5B,IAAWgI,IACAO,OAAOT,GACzBjF,GAASyF,EAAK,GAAG,GACjBxF,GAAUwF,EAAK,GAAG,GAClB9G,EAAIO,KAAK,UAAT,cAA2Bc,EAA3B,YAAoCC,IAEtC,IAAMwF,EAAO9G,EAAIO,KAAK,WAAWyG,MAAM,KACvC3F,GAASyF,EAAK,GACdxF,GAAUwF,EAAK,GACfN,EAAWK,QAAQ,CAACxF,EAAOC,GAASgF,GACpClG,EAAO5B,IAAWgI,GAGlB,IAMIS,EANEC,EAAY1I,IAAU2G,EAAiB1G,SACvC0I,EAAcT,SAASQ,EAAU9K,MAAM,UACvCgL,GAAgBF,EAAU3G,KAAK,UAKrC,GAJA2G,EAAU3G,KAAK,UAAf,cAAiC4G,EAAjC,YAAgDC,IAI5CxC,EAAWyC,OAASC,IAAeC,KACrCN,EAAazI,IACX,CAAC,MAAO,SAAU,SAClB,CAAC,UAAW,UAAW,YAGzB0I,EAAU5C,MAAK,kBACbtC,EAAO,CACL7B,MAAO8G,EACP5F,MAAO8F,EACP7F,OAAQ8F,EACR3E,WAAY,GACZH,WAAY,EACZF,YAAa,GACbpC,IAAKkH,EACLxE,eAAgBU,OAAOoE,OAAO9C,YAG7B,CAeLuC,EAAazI,IAET,CAAC,EAAGoB,KAAKC,IAAI,EAAG6E,EAAUO,GAAWpF,OAhBf,SAAC5D,GACzB,OAAQgJ,GACN,IAAK,YACH,OAAOzG,IAAuB,IAAJvC,GAC5B,IAAK,SACH,OAAOuC,IAAwB,IAAJvC,GAC7B,IAAK,YACH,OAAOuC,IAAyB,IAAJvC,GAC9B,IAAK,WACH,OAAOuC,IAAwB,IAAJvC,GAC7B,QACE,WAQHwL,OAAM,GACTP,EAAU5C,MAAK,kBACbtC,EAAO,CACL7B,MAAO8G,EACPhF,MACEyF,YAAczC,IACbL,EAAWyC,OAASC,IAAeK,YAChC,qBACA,UACNtG,MAAO8F,EACP7F,OAAQ8F,EACR7E,MAAO,EACPC,WAAY,SAAU1D,EAAGmB,EAAGyB,GAC1B,GACEkD,EAAWyC,OAASC,IAAeM,OAClCC,OAAOC,UAAUhJ,GAGpB,OAAImB,IAAMyB,EAAEzD,OAAS,EAAUX,YAAawB,GAAK,IAC1CxB,YAAawB,IAEtBwD,WAAY,EACZF,YAAa,GACbpC,IAAKkH,OAIXA,EAAU3G,KACR,QACAqE,EAAWyC,OAASC,IAAeC,KAAO,OAAS,IAIrD,IAAMQ,EAAgBtC,EAAeO,SAASxC,KAAI,SAACwE,GACjD,IAAMC,EAAQD,EAAEE,WAAWC,MACrBC,EAAMhF,OAAOC,OAAO,GAAI2E,GAE9B,OADAI,EAAIC,GAAJ,UAAYjD,EAAQW,kBAApB,YAAyCkC,GAClCG,KAIHE,EAAmBrC,EAAkBD,SAASxC,KAAI,SAACwE,GACvD,IAAMO,EAAWP,EAAEE,WAAWK,SACxBN,EAAQD,EAAEE,WAAWC,MACrBC,EAAMhF,OAAOC,OAAO,GAAI2E,GAE9B,OADAI,EAAIC,GAAJ,UAAYjD,EAAQiB,qBAApB,YAA4C4B,GAA5C,OAAoDM,GAC7CH,KAIHnM,EAAI+D,EAAIc,aAAaE,SAAS,KAChCwH,EAAoB,KAClBC,EAAkBzI,EACrBiD,OAAO2B,EAAWsB,OAASC,IAAUI,OAAS,UAAY,cAC1DtF,UAAU,QACVtE,KACCiI,EAAWsB,OAASC,IAAUI,OAC1BwB,EACAO,GACJ,SAACxJ,GAAD,OAAOA,EAAEuJ,MAEVxE,MAAK,SAAC3C,GACL,IAAMwH,EAAMxH,EAAMb,OAAO,QAAQE,KAAK,IAAKH,GAE3C,OADAsI,EAAIrI,OAAO,SACJqI,KAERnI,KAAK,SAAS,SAAUzB,GACvB,IAAM6J,EAAYnK,IAAUoK,MAAMC,QAAQ,aAC1C,MAAM,eAAN,OAAsB5D,EAAtB,YAAmC0D,EAAY,YAAc,OAE9DvM,MAAM,SAAU,WAChB+E,GAAG,cAAc,SAAUrC,GAC1B,IAAMgK,EAAS,CAACb,MAAOnJ,EAAEoJ,WAAWC,OAChCrJ,EAAEoJ,WAAWK,WAAUO,EAAOP,SAAWzJ,EAAEoJ,WAAWK,UAC1DxD,EAAqB+D,MAEtB3H,GAAG,cAAc,SAACrC,GACb0J,IAAsB1J,IAAG0J,EAAoB,SAElDrH,GAAG,cAAc,SAACrC,GACY0J,EAAzBA,IAAsB1J,EAAuB,KACxBA,KAE1BqC,GAAG,SA8KN,SAAqBrC,GAEnB,GADAN,IAASuK,kBACLP,GAAqBpD,EAAQM,UAAYC,IAAUqD,MAAO,OAE9DhJ,EAAIO,KAAK,iBAAkB,QAC3BP,EAAIiB,UAAU,gBAAgBV,KAAK,iBAAkB,QAErDsE,EAAU/F,EAAEoJ,WAAWC,UApLtB5H,KAAK,iBAAkB,QAE1BkI,EAAgBxF,OAAO,SAASuB,MAAK,SAAU1F,GAC7C,GAAI8F,EAAWyC,OAASC,IAAeM,MAAO,CAC5C,IAEIlG,EAFEuG,EAAQnJ,EAAEoJ,WAAWC,MACrBI,EAAWzJ,EAAEoJ,WAAWK,SAQ9B,OALE7G,EADE6G,EAEA5D,EAAQsD,IAAUtD,EAAQsD,GAAOM,GAC7B5D,EAAQsD,GAAOM,GAAUtD,GACzB,EACCN,EAAQsD,GAAStD,EAAQsD,GAAOhD,GAAa,EAEpD4C,OACEoB,WACSvH,GAAKgD,EAAUO,GAAWiE,OAAS,MAA1C,KACAC,QAAQ,IACVC,WACF,UACA1B,YAAca,GAAsBN,OAK1CQ,EACG3H,WAAW7E,GACXsE,KAAK,QAAQ,SAAUzB,GACtB,IAAI4C,EACJ,GAAIkD,EAAWyC,OAASC,IAAeC,KAAM,CAC3C,IAAMU,EAAQnJ,EAAEoJ,WAAWC,MACrBI,EAAWzJ,EAAEoJ,WAAWK,SAC9B7G,EACEiD,EAAQsD,IAAUtD,EAAQsD,GAAOM,GAC7B5D,EAAQsD,GAAOM,GACf,MACD,CACL,IAAMN,EAAQnJ,EAAEoJ,WAAWC,MACrBI,EAAWzJ,EAAEoJ,WAAWK,SAE5B7G,EADE6G,EAEA5D,EAAQsD,IAAUtD,EAAQsD,GAAOM,GAC7B5D,EAAQsD,GAAOM,GAAUtD,GACzB,EACCN,EAAQsD,GAAStD,EAAQsD,GAAOhD,GAAa,EAGxD,OADoB,IAANvD,EAAU,YAAcuF,EAAWvF,MAGlDnB,KAAK,UAAU,WACd,IAAMoI,EAAYnK,IAAUoK,MAAMC,QAAQ,aAE1C,OADIF,GAAWC,KAAKS,WAAWC,YAAYV,MACvChE,EAAWyC,OAASC,IAAeC,KAC9BoB,EAAY,UAAY,KAExBA,EAAS,UAEI,cAAd1D,EACI,UACc,WAAdA,EACA,UACc,cAAdA,EACA,UACc,aAAdA,EACA,UACA,IAEN,QAGPnE,aACAP,KAAK,iBAAkB,OAE1BP,EACGc,aACAE,SAASoE,EAAQM,UAAYC,IAAUqD,MAAQ,IAAM,GACrD7H,GAAG,OAAO,kBACTnB,EAAIO,KACF,QACAqE,EAAWyC,OAASC,IAAeC,KAAO,OAAS,OAIzD,IAAIgC,EAAa,GACbnE,EAAQM,UAAYC,IAAUC,WAChC2D,EAAa,CACX1D,IAAcL,EAASA,EAAQM,QAAQV,EAAQW,sBAEtC,GAAGsC,GAAKjD,EAAQW,mBAE7B,IAAIyD,EAAgB,GAChB5E,EAAWsB,OAASC,IAAUC,aAEhCoD,EAAgB,CACd3D,IAAcL,EAASA,EAAQM,QAAQV,EAAQiB,yBAEnC,GAAGgC,GAAKjD,EAAQiB,sBAEhCrG,EACGiD,OACC2B,EAAWsB,OAASC,IAAUI,OAC1B,iBACA,qBAELtF,UAAU,QACVtE,KACCiI,EAAWsB,OAASC,IAAUI,OAASgD,EAAaC,GACpD,SAAC1K,GAAD,OAAOA,EAAEuJ,MAEVxE,MAAK,SAAC3C,GAAD,OACJA,EACGb,OAAO,QACPE,KAAK,IAAKH,GACVG,KAAK,eAAgBc,EAAQ,QAEjCd,KAAK,OAAQ,QACbO,WAAW7E,GACXsE,KAAK,gBAAgB,WACpB,OAAO6E,EAAQM,UAAYC,IAAUC,SACnChB,EAAWsB,OAASC,IAAUC,UAC5B,EACA/E,EAAQ,OAEbd,KAAK,UAAU,WACd,OAAIqE,EAAWyC,OAASC,IAAeC,KAC9B,YAED,GAAN,OACgB,cAAdtC,EACI,YACc,WAAdA,EACA,YACc,cAAdA,EACA,YACc,aAAdA,EACA,YACA,OAKZjF,EACGiD,OAAO2B,EAAWsB,OAASC,IAAUI,OAAS,aAAe,WAC7DtF,UAAU,QACVtE,KACCiI,EAAWsB,OAASC,IAAUI,OAC1B+B,EACAP,GACJ,SAACjJ,GAAD,OAAOA,EAAEuJ,MAEVxE,MAAK,SAAC3C,GAAD,OAAWA,EAAMb,OAAO,QAAQE,KAAK,IAAKH,MAC/CG,KAAK,QAAS,eACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,QAE1BP,EACGiD,OACC2B,EAAWsB,OAASC,IAAUI,OAC1B,oBACA,kBAELtF,UAAU,QACVtE,KACCiI,EAAWsB,OAASC,IAAUI,OAASiD,EAAgBD,GACvD,SAACzK,GAAD,OAAOA,EAAEuJ,MAEVxE,MAAK,SAAC3C,GAAD,OAAWA,EAAMb,OAAO,QAAQE,KAAK,IAAKH,MAC/CG,KAAK,OAAQ,QACbO,WAAW7E,GACXsE,KAAK,eAAgBc,EAAQ,KAC7Bd,KAAK,SAAU,aAalBP,EAAIO,KAAK,iBAAkB,QAAQY,GAAG,SAAS,WACzCiE,EAAQM,UAAYC,IAAUqD,OAChCjE,EAAqB,CACnBkD,MAAO,eAKf,CACE7C,EACAR,EAAWyC,KACXzC,EAAWsB,KACXxB,EACAO,EACAD,EACAL,EACAI,EACAF,IA2CJ,OAvCA9G,qBAAU,WACR,sBAAC,4BAAAiG,EAAA,sEACoBxF,IAAQ4G,EAAQqE,aADpC,OACO9M,EADP,OAEK+H,GAAaQ,EAAczG,SAC7B8G,EAAM5I,GAHT,0CAAD,KAMC,CAACyI,EAASV,EAAWa,IAExBxH,qBAAU,YACqB,SAAC+K,GAC5B,IAAMY,EAAQlL,IAAa,gBAC3BkL,EAAMnJ,KAAK,SAAU,MACrBmJ,EAAMb,QAAQ,aAAa,SAAC/J,EAAGmB,EAAG0J,GAAW,IAAD,EAC1C,OACEb,EAAOP,YAAP,UAAoBzJ,EAAEoJ,kBAAtB,aAAoB,EAAcK,WAClCO,EAAOb,QAAUnJ,EAAEoJ,WAAWC,QAE9BwB,EAAM1J,GAAGoJ,WAAWC,YAAYK,EAAM1J,IACtCzB,IAAUmL,EAAM1J,IAAIM,KAAK,UAAU,SAAUzB,GAC3C,OAAI8F,EAAWyC,OAASC,IAAeC,KAAa,UAC7C/I,IAAUoK,MAAMC,QAAQ,aAC3B,UACArK,IAAUoK,MAAMC,QAAQ,UACxB,UACArK,IAAUoK,MAAMC,QAAQ,aACxB,UACArK,IAAUoK,MAAMC,QAAQ,YACxB,UACA,SAEC,MAKbe,CAAqB9E,KACpB,CAACA,EAAmBF,EAAWyC,OAGhC,kBAAC,IAAMwC,SAAP,KACE,yBAAK1N,UAAU,sBAAsBC,MAAO,CAACC,eAAgB,SAC3D,yBAAKgM,GAAG,QAAQ7G,oBAAoB,gBAAgBJ,IAAK8D,GACvD,uBAAG/I,UAAU,WACb,uBAAGA,UAAU,cACb,uBAAGA,UAAU,kBACb,uBAAGA,UAAU,sBAEdiJ,EAAQM,UAAYC,IAAUqD,QAA9B,UACDrE,EAAQC,EAAWU,aADlB,aACD,EAA0BwE,WADzB,UAEDnF,EAAQC,EAAWU,aAFlB,aAED,EAA0BwE,QAAQ7E,IAChC,yBAAK9I,UAAU,cACb,kBAAC,IAAD,MADF,wBAEoB8I,EAFpB,sCAKA,IAGJ,yBACE9I,UAAU,6BACVC,MAAO,CAACC,eAAgB,SAExB,yBACEgM,GAAG,SACH/G,OAAO,KACPE,oBAAoB,gBACpBJ,IAAK+D,GAEL,2BAAOhJ,UAAU,SACjB,uBAAGA,UAAU,QACX,0BAAMA,UAAU,eAGpB,4BACEA,UAAU,cACVC,MAAO,CAAC2N,SAAU,WAAYzI,OAAQ,MAG1C,yBAAKlF,MAAO,CAAC2N,SAAU,WAAYzI,OAAQ,IACzC,8BACE,4BAAQ+G,GAAG,gBAAgB2B,0BAA0B,QACnD,mCACE9J,KAAK,SACLsH,OAAO,yG,gHC3cfyC,EAAqB,SAAChC,GAC1B,GAAKA,EAEL,OADY,eAAOA,IAqjBNnM,QAAMC,MA3iBrB,YAaI,IAAD,EAZDmO,EAYC,EAZDA,QACAC,EAWC,EAXDA,OACAC,EAUC,EAVDA,UACAC,EASC,EATDA,MACAC,EAQC,EARDA,cACAxF,EAOC,EAPDA,kBACAC,EAMC,EANDA,qBACAwF,EAKC,EALDA,OACAC,EAIC,EAJDA,UACAvF,EAGC,EAHDA,UACAwF,EAEC,EAFDA,aAEC,IADDzF,uBACC,SACM/I,EAAKC,cAALD,EADN,EAEmCS,mBAAS,CAC3C4I,KAAM4E,EACN7C,KAAMC,IAAeM,MACrB1B,KACEb,IAAS6E,GAASxE,UAAYC,IAAUC,QACpCO,IAAUI,OACVJ,IAAUC,YARjB,mBAEMxB,EAFN,KAEkB8F,EAFlB,KAUKC,EAAiBtF,IAAST,EAAWU,MAV1C,EAYmCsF,mBAAQ,WAC1C,IAAIC,EAAiB,GACjBnG,EAAY,GAChB,GAAIE,EAAWyC,OAASC,IAAeC,KAAM,CAM3C,GAJA7C,EADkB,CAAC,MAAO,SAAU,SACdX,QAAO,SAACK,EAAK0G,GAEjC,OADA1G,EAAI0G,GAAS,EACN1G,IACN,IACCuG,EAAejF,UAAYC,IAAUC,QACvCiF,EAAiBzH,OAAO2H,KAAKV,GAAOtG,QAAO,SAACiH,EAAM/C,GAShD,OARA+C,EAAK/C,GAAS7E,OAAO2H,KAAKV,EAAMpC,IAAQlE,QAAO,SAACkH,EAAM1C,GACpD,IAAM2C,EAAOb,EAAMpC,GAAOM,GAAU2C,KAKpC,OAJIA,IACFD,EAAK1C,GAAY2C,EACjBxG,EAAUwG,IAAS,GAEdD,IACN,IACID,IACN,SACE,GAAIL,EAAejF,UAAYC,IAAUqD,MAAO,CACrD,IAAMf,EAAQrD,EAAWU,KACzBuF,EAAe5C,GAAS7E,OAAO2H,KAAKV,EAAMpC,IAAQlE,QAChD,SAACK,EAAKmE,GACJ,IAAM2C,EAAOb,EAAMpC,GAAOM,GAAU2C,KAKpC,OAJIA,IACF9G,EAAImE,GAAY2C,EAChBxG,EAAUwG,IAAS,GAEd9G,IAET,SAGC,CACL,IAAM7E,EAAY,CAAC,YAAa,SAAU,YAAa,YAKvD,GAJAmF,EAAYnF,EAAUwE,QAAO,SAACK,EAAK0G,GAEjC,OADA1G,EAAI0G,GAAS,CAAC5B,MAAO,EAAGrJ,IAAK,GACtBuE,IACN,IACCuG,EAAejF,UAAYC,IAAUC,QACvCiF,EAAiBV,EAAOpG,QAAO,SAACK,EAAK6D,GAgBnC,OAfA7D,EAAI6D,EAAMA,OAAS,GACnB1I,EAAUV,SAAQ,SAACiM,GACjB,IAAIK,EAAYzE,SACduB,EAAgB,aAAV6C,EAAuBA,EAAQ,WAEnClG,EAAWyC,OAASC,IAAeK,cACrCwD,EAAa,IAAMA,EAAaC,IAAkBnD,EAAMA,QACtC,UAAhBA,EAAMA,QACRvD,EAAUoG,GAAO5B,OAASiC,EACtBA,EAAYzG,EAAUoG,GAAOjL,MAC/B6E,EAAUoG,GAAOjL,IAAMsL,IAG3B/G,EAAI6D,EAAMA,OAAO6C,GAASK,KAErB/G,IACN,SACE,GAAIuG,EAAejF,UAAYC,IAAUqD,MAAO,CACrD,IAAMqC,GACJjB,EAAUxF,EAAWU,OAAS,CAACgG,aAAc,KAC7CA,aACFT,EAAejG,EAAWU,MAAQlC,OAAO2H,KAAKM,GAAkBtH,QAC9D,SAACK,EAAKmE,GAUJ,OATAnE,EAAImE,GAAY,GAChBhJ,EAAUV,SAAQ,SAACiM,GACjB,IAAMK,EAAYzE,SAAS2E,EAAiB9C,GAAUuC,IACtDpG,EAAUoG,GAAO5B,OAASiC,EACtBA,EAAYzG,EAAUoG,GAAOjL,MAC/B6E,EAAUoG,GAAOjL,IAAMsL,GAEzB/G,EAAImE,GAAUuC,GAASK,KAElB/G,IAET,IAEFyG,EAAejG,EAAWU,MAAMiG,MAAQpB,EAAOqB,MAC7C,SAACvD,GAAD,OAAWrD,EAAWU,OAAS2C,EAAMA,UAI3C,MAAO,CAACvD,EAAWmG,KAClB,CACDjG,EAAWU,KACXV,EAAWyC,KACXsD,EAAejF,QACf0E,EACAC,EACAF,IAvGD,mBAYMzF,EAZN,KAYiBmG,EAZjB,OA0GoCD,mBAAQ,WAC3C,GAAK9F,EAAkByD,SAKhB,CACL,IAWMA,EA/IkB,SAAC+C,EAAchG,GAC3C,GAAKgG,EAEL,OADY,eAAOA,GA6IEG,EAXQrB,EAAUtF,EAAkBmD,QAAU,CAC7DqD,aAAc,KAEsBA,aACpCxG,EAAkByD,WACf,CACHxL,UAAW,EACXD,OAAQ,EACRE,UAAW,EACXC,OAAQ,GAIR6H,EAAkByD,UAEhBN,EAAQgC,EACVE,EAAOqB,MAAK,SAACvD,GAAD,OAAWA,EAAMA,QAAUnD,EAAkBmD,UAM3D,OAJAM,EAASA,SAAWzD,EAAkByD,SACtCA,EAASN,MAAQA,EAAMA,MACnB0C,EAAejF,UAAYC,IAAUC,UACvCqC,EAAQkC,EAAOqB,MAAK,SAACvD,GAAD,MAA2B,UAAhBA,EAAMA,UAChC,CAACM,EAAUN,GA3BlB,IAAMA,EAAQgC,EACZE,EAAOqB,MAAK,SAACvD,GAAD,OAAWnD,EAAkBmD,QAAUA,EAAMA,UAE3D,MAAO,CAACA,EAAOA,KA0BhB,CAACkC,EAAQC,EAAWO,EAAejF,QAASZ,IAzI9C,mBA0GM4G,EA1GN,KA0GqBC,EA1GrB,KA2ID5N,qBAAU,WACR,QAA0BuF,IAAtBwB,GAAyD,OAAtBA,EAEvC,GAAI,aAAcA,GAChB,GACEF,EAAWU,OAASR,EAAkBmD,QAEpC0C,EAAejF,UAAYC,IAAUC,SACrChB,EAAWsB,OAASC,IAAUC,WAEhC,CACA,IAAM6B,EAAQnD,EAAkBmD,MAEhC,IADmB5C,IAAS4C,GAE1B,OAEFyC,EAAc,CACZpF,KAAM2C,EACN/B,KAAMC,IAAUC,UAChBiB,KACEzC,EAAWyC,OAASC,IAAeK,YAC/BL,IAAeM,MACfhD,EAAWyC,aAGZrC,GAAmB2F,EAAejF,UAAYC,IAAUqD,OACjE0B,EAAc,CACZpF,KAAM,QACNY,KACEtB,EAAWyC,OAASC,IAAeC,KAC/BpB,IAAUC,UACVD,IAAUI,OAChBc,KAAMzC,EAAWyC,SAGpB,CAACrC,EAAiBF,EAAmBF,EAAY+F,EAAejF,UAEnE,IAwDIkG,EACAC,EAzDEC,EAAmB3N,uBACvB,SAAC8J,GACC,IAAM8D,EAAa1G,IAAS4C,GAC5B,GAAK8D,EAGL,GAAIA,EAAWrG,UAAYC,IAAUqD,MAAO,CAAC,IACpCsC,GAAgBlB,EAAUnC,IAAU,CACzCqD,aAAc,KADTA,aAGDU,EAAc5I,OAAO2H,KAAKO,GAC7BW,QAAO,SAAChE,GAAD,MAAqB,YAAVA,KAClBiE,MAAK,SAAClI,EAAGC,GACR,OAAOqH,EAAarH,GAAGlH,UAAYuO,EAAatH,GAAGjH,aAClD,GACLoP,IAASC,yBAAwB,WAC/BrH,EAAqB,CACnBwD,SAAUyD,EACV/D,MAAOA,IAETyC,EAAc,CACZpF,KAAM2C,EACN/B,KAAMC,IAAUC,UAChBiB,KACEzC,EAAWyC,OAASC,IAAeK,YAC/BL,IAAeM,MACfhD,EAAWyC,eAIrB8E,IAASC,yBAAwB,WAC/B1B,EAAc,CACZpF,KAAM,QACNY,KACEtB,EAAWyC,OAASC,IAAeC,KAC/BpB,IAAUC,UACVD,IAAUI,OAChBc,KAAMzC,EAAWyC,OAEnBtC,EAAqB,CACnBkD,MAAO,eAKf,CAACrD,EAAWyC,KAAM+C,EAAWrF,IAGzBsH,EAAUzB,mBACd,kBACEN,EAAckB,MACZ,SAACpD,GAAD,OAASA,EAAIH,QAAU0D,EAAY1D,OAA6B,KAApBG,EAAIkE,iBAEpD,CAAChC,EAAeqB,IAKlB,GAAI/G,EAAWyC,OAASC,IAAeC,KAAM,CAC3C,IAAM5K,EACJ+O,EAAcnD,UAAYsC,EAAea,EAAczD,OACnD4C,EAAea,EAAczD,OAAOyD,EAAcnD,UAClDmD,EAAczD,QAAUrD,EAAWU,KACnCuF,EAAea,EAAczD,OAC7B4C,EAAea,EAAczD,OAAOsD,MAC1CK,EAAqBjP,EACjBiI,EAAWyC,OAASC,IAAeK,YACjCE,OAAOoB,WAAWtM,EAAKsI,IAAYkE,QAAQ,IAC3CxM,EAAKsI,GACP,OAEJ4G,EACExB,EAAMqB,EAAczD,QACpBoC,EAAMqB,EAAczD,OAAOyD,EAAcnD,UACrC8B,EAAMqB,EAAczD,OAAOyD,EAAcnD,UAAU2C,KACnD,GAGR,OACE,yBACE/O,UAAS,+BACI,gBAAXoO,EAA2B,WAAa,IAE1CnO,MAAO,CACLC,eAAgB,OAChBkQ,QAAoB,eAAXhC,EAA0B,OAAS,KAG7CiC,OAAOC,WAAa,KACnB,yBACEtQ,UAAS,iBAAuB,gBAAXoO,EAA2B,WAAa,IAC7DmC,QAAS,WACPlC,EAAqB,gBAAXD,EAA2B,KAAO,iBAG9C,kBAAC,IAAD,OAGJ,yBAAKpO,UAAU,UACb,4BACGF,EAAE2I,EAAWU,MADhB,IACwBrJ,EAAE,QAE1B,4BACGuQ,OAAOC,YAAc,IAAMxQ,EAAE,OAASA,EAAE,SAD3C,UAC4D,IACzD0O,EAAejF,UAAYC,IAAUC,QAClC3J,EAAE,YACFA,EAAE,YAAa,IAClBA,EAAE,sBAIP,yBAAKE,UAAU,aACb,yBACEA,UAAS,yBACO,cAAd8I,EAA4B,UAAY,IAE1C7I,MAAO,CAACC,eAAgB,MACxBqQ,QAAS,kBAAMjC,EAAa,eAE5B,4BAAK+B,OAAOC,YAAc,IAAMxQ,EAAE,SAAWA,EAAE,cAC/C,yBAAKE,UAAU,gBACb,4BAAKmB,YAAaqO,EAAY5O,YAC9B,uCAASO,YAAaqO,EAAYzO,oBAItC,yBACEf,UAAS,iCACO,WAAd8I,EAAyB,UAAY,IAEvC7I,MAAO,CAACC,eAAgB,QACxBqQ,QAAS,kBAAMjC,EAAa,YAE5B,4BAAK+B,OAAOC,YAAc,IAAMxQ,EAAE,QAAUA,EAAE,WAC9C,yBAAKE,UAAU,gBACb,4BAAKmB,YAAaqO,EAAY7O,SAC9B,mCAIJ,yBACEX,UAAS,kCACO,cAAd8I,EAA4B,UAAY,IAE1C7I,MAAO,CAACC,eAAgB,QACxBqQ,QAAS,kBAAMjC,EAAa,eAE5B,4BAAK+B,OAAOC,YAAc,IAAMxQ,EAAE,SAAWA,EAAE,cAC/C,yBAAKE,UAAU,gBACb,4BAAKmB,YAAaqO,EAAY3O,YAC9B,uCAASM,YAAaqO,EAAYvO,oBAItC,yBACEjB,UAAS,iCACO,aAAd8I,EAA2B,UAAY,IAEzC7I,MAAO,CAACC,eAAgB,QACxBqQ,QAAS,kBAAMjC,EAAa,cAE5B,4BAAK+B,OAAOC,YAAc,IAAMxQ,EAAE,QAAUA,EAAE,aAC9C,yBAAKE,UAAU,gBACb,4BAAKmB,YAAaqO,EAAY1O,SAC9B,uCAASK,YAAaqO,EAAYxO,iBAItC,yBACEhB,UAAU,kCACVC,MAAO,CAACC,eAAgB,SAExB,4BAAKJ,EAAE,WACP,yBAAKE,UAAU,gBACb,4BAAKmB,YAAY,OAAC+O,QAAD,IAACA,OAAD,EAACA,EAASC,eAE7B,wBAAInQ,UAAU,aACVkB,MAAMsP,YAAK,OAACN,QAAD,IAACA,OAAD,EAACA,EAASO,UAAW,aAAc,IAAIC,OAKhD,GALH,UACM5Q,EAAE,SADR,YACoB6Q,YACfH,YAAK,OAACN,QAAD,IAACA,OAAD,EAACA,EAASO,UAAW,aAAc,IAAIC,MAC5C,aAIA,OAAPR,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBrO,QAAS,GAC9B,uBAAG3B,KAAM+P,EAAQU,OAAQxQ,OAAO,YAC9B,kBAAC,IAAD,OAGmB,UAAtBoP,EAAY1D,MAAoB+E,IAAgB,KAIrD,yBAAK7Q,UAAU,gBAAgBC,MAAO,CAACC,eAAgB,SACrD,wBACEF,UAAS,UACPyI,EAAWyC,OAASC,IAAeC,KACjB,cAAdtC,EACEA,EACA,GACF4G,IAGLH,EAAcnD,SACXtM,EAAEyP,EAAcnD,UAChBtM,EAAEyP,EAAczD,QAGrB0C,EAAejF,UAAYC,IAAUqD,OACpC2C,EAAYsB,iBACV,yBAAK9Q,UAAU,eACb,4BAAKF,EAAE,iBACP,4BACGoB,MAAMwP,KAAKF,MAAMO,YAAWvB,EAAYsB,mBACrC,GACAE,YACE,IAAIN,KAAKK,YAAWvB,EAAYsB,kBAChC,IAAIJ,MAEN,IACA5Q,EAAE,SAKb0O,EAAejF,UAAYC,IAAUqD,MACpC,kBAAC,IAAD,CAAMoE,GAAE,gBAAWC,IAAoB1B,EAAY1D,SACjD,yBAAK9L,UAAU,4BACb,8BAAOF,EAAE,qBACT,kBAAC,IAAD,QAGF,KAEH2I,EAAWyC,OAASC,IAAeC,OACnCoD,EAAejF,UAAYC,IAAUqD,OACnC2B,EAAejF,UAAYC,IAAUC,SACpChB,EAAWyC,OAASC,IAAeM,OACrC,wBACEzL,UAAS,mBAA4B,cAAd8I,EAA4BA,EAAY,KAE9D2G,EACD,6BACA,8BACG3G,EAAW,IACXL,EAAWyC,OAASC,IAAeK,YAAnC,WACO1L,EAAE,gBACN,KAGN,KAEH0O,EAAejF,UAAYC,IAAUqD,MACpC,yBACE7M,UAAU,qBACVuQ,QAAS,kBAAMZ,EAAiB,WAFlC,QAME,KAEHnB,EAAejF,UAAYC,IAAUqD,OACtC6B,EAAef,SACfe,EAAef,QAAQ7E,GAAa,EAClC,wBAAI9I,UAAU,WACXF,EAAE,yBADL,IACgC4O,EAAef,QAAQ7E,GAAY,IAChEhJ,EAAE,WAEH,MAGN,6BACGgJ,GACC,kBAAC,EAAD,CACEP,UAAWA,EACXE,WAAYA,EACZD,QAASkG,EACT/F,kBAAmBA,EACnBC,qBAAsBA,EACtBF,UAAWiH,EACX9G,gBAAiBA,EACjBC,UAAWA,KAKjB,yBAAK9I,UAAU,YACb,yBACEA,UAAS,cACPyI,EAAWyC,OAASC,IAAeM,MAAQ,UAAY,IAEzD8E,QAAS,WACPhC,EAAc,CACZpF,KAAMV,EAAWU,KACjBY,KACEyE,EAAejF,UAAYC,IAAUC,QACjCO,IAAUI,OACVJ,IAAUC,UAChBiB,KAAMC,IAAeM,QAEnB+C,EAAejF,UAAYC,IAAUC,SACvCb,EAAqB,CACnBkD,MAAOnD,EAAkBmD,UAI/B,4BAAKhM,EAAE,iBAER+I,GACC,yBACE7I,UAAS,cACPyI,EAAWyC,OAASC,IAAeK,YAAc,UAAY,IAE/D+E,QAAS,WACH/B,EAAejF,UAAYC,IAAUqD,QACzC0B,EAAc,CACZpF,KAAMV,EAAWU,KACjBY,KAAMC,IAAUI,OAChBc,KAAMC,IAAeK,cAEvB5C,EAAqB,CACnBkD,MAAOnD,EAAkBmD,WAI7B,4BACGhM,EAAE,qBACH,yCAIN,yBACEE,UAAS,cACPyI,EAAWyC,OAASC,IAAeC,KAAO,UAAY,IAExDmF,QAAS,WACPhC,EAAc,CACZpF,KAAMV,EAAWU,KACjBY,KAAMC,IAAUC,UAChBiB,KAAMC,IAAeC,OAEnBoD,EAAejF,UAAYC,IAAUC,SACvCb,EAAqB,CACnBkD,MAAO,YAIb,uCAIJ,wBAAI9L,UAAU,4BAAd,UACYF,EAAE,8CAAgD,IAC5D,uBACEK,KAAK,4EACLC,OAAO,WACPH,MAAO,CAAC+D,MAAO,YAEdlE,EAAE,WAPP,SArjBU,SAACqR,EAAWC,GAC1B,QAAKC,IAAMF,EAAUxI,kBAAmByI,EAAUzI,uBAG7C0I,IAAMF,EAAUrI,UAAWsI,EAAUtI,cAGrCuI,IAAMF,EAAU/C,OAAQgD,EAAUhD,a,gJC8f1BzO,UAAMC,MA/gBrB,YAA0E,IAArD0R,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QACtD5R,EAAKC,cAALD,EADgE,EAE7BS,mBACxC8P,OAAOC,WAAa,IAAMqB,IAAW,IAHgC,mBAEhEC,EAFgE,KAEjDC,EAFiD,OAKnCtR,mBAAS,IAL0B,mBAKhEa,EALgE,KAKpD0Q,EALoD,OAMrCvR,mBAAS,IAN4B,mBAMhEwR,EANgE,KAMrDC,EANqD,OAO7CzR,mBAAS,GAPoC,mBAOhE0R,EAPgE,KAOzDC,EAPyD,OAQ3C3R,oBAAS,GARkC,mBAQhE4R,EARgE,KAQxDC,EARwD,KAUjE7Q,EAAUC,mBACVC,EAAUD,mBACVE,EAAUF,mBACVG,EAAUH,mBACV6Q,EAAU7Q,mBAEV8Q,EAAa9Q,mBACb+Q,ECzByB,SAACtN,GAAS,IAAD,EACJ1E,mBAAS,MADL,mBACjCgS,EADiC,KACrBC,EADqB,KAcxC,OAZA5Q,qBAAU,WACR,IAAM6Q,EAAgBxN,EAAI3C,QACpBoQ,EAAiB,IAAIC,KAAe,SAACC,EAASC,GAClDD,EAAQlQ,SAAQ,SAACoQ,EAAOb,GACtBO,EAAcM,EAAMC,mBAIxB,OADAL,EAAeM,QAAQP,GAChB,WACLC,EAAeO,UAAUR,MAE1B,CAACxN,IACGsN,EDWYW,CAAkBZ,GAE/Ba,EAAsBnR,uBAC1B,SAACZ,GACC,GAAIA,EAAWU,OAAS,EAAG,CACzB,IAAMsR,EAAmBC,YACvBjS,EACAwQ,GAEFM,EAASkB,EAAiBtR,OAAS,GACnCgQ,EAAcsB,MAGlB,CAACxB,IAGHhQ,qBAAU,WACRuR,EAAoB7B,KACnB,CAACM,EAAeN,EAAgB6B,IAEnC,IAAMpR,EAAYC,uBAChB,SAACZ,GACC,GAAKmR,EAAL,CACA,IAAMrN,EAAQqN,EAAWrN,MACnBC,EAASoN,EAAWpN,OAGpBlD,EAAe,GAAfA,EAAgD,GAChDC,EAAagD,EADa,GAE1B/C,EAAcgD,EAFwB,GAItCmO,EAAIlS,EAAWU,OAIrBkQ,EAAa5Q,EAAWkS,EAAI,IAC5BpB,EAASoB,EAAI,GAEb,IAyDIC,EAzDEnR,EAAOC,IAAUd,EAAQe,SACzBC,EAAOF,IAAUZ,EAAQa,SACzBE,EAAOH,IAAUX,EAAQY,SACzBG,EAAOJ,IAAUV,EAAQW,SACzBkR,EAAOnR,IAAUgQ,EAAQ/P,SAEzBmR,EAAUC,YAAQtS,EAAW,GAAG6B,KAAM,GACtC0Q,EAAUC,YAAQxS,EAAWkS,EAAI,GAAGrQ,KAAM,GAE1CF,EAASV,MAEZiJ,OAAM,GACNtI,OAAO,CAACyQ,EAASE,IACjBzQ,MAAM,CAACjB,EAAaC,IAGjB2R,EAAY3O,EAAQ,IAAM,EAAI,EAE9B4O,EAAQ,SAACrN,GAAD,OACZA,EAAErC,KAAK,QAAS,UAAU+D,KAAK9F,IAAcU,GAAQqD,MAAMyN,KAEvDE,EAAS,SAACtN,EAAG7C,GACjB6C,EAAErC,KAAK,QAAS,WACb+D,KAAK9F,IAAcU,GAAQuD,WAAW,IAAIP,SAAS,IACnDe,OAAO,WACP7G,MAAM,YAHT,qBAGoC2D,EAAO,GAH3C,QAKIA,EAAO,KAAOzB,EAAasE,EAAEK,OAAO,WAAW1C,KAAK,UAAW,IAC9DqC,EAAEK,OAAO,WAAW1C,KAAK,UAAW,IAGrC4P,EAAQ,SAACvN,EAAG7C,GAAJ,OACZ6C,EACGrC,KAAK,QAAS,UACd+D,KAAK9F,IAAauB,GAAQwC,MAAM,EAAG,OAAO6N,YAAY,KAGrDC,EAA0B,IAAd3C,EACZ4C,EAAiB,CACrB,iBACA,cACA,iBACA,gBACA,eAEIC,EAAiB,CACrB,iBACA,cACA,iBACA,gBACA,eAGI/Q,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAEtDF,EAAW,CAACf,EAAMG,EAAMC,EAAMC,EAAM+Q,GAG1C,GAAIU,EAAW,CACb,IAAMG,EAAkBhS,IAAOjB,GAAY,SAACuB,GAAD,OACzCc,KAAKkD,IAAIhE,EAAE2R,YAAa3R,EAAE4R,eAAgB5R,EAAE6R,kBAExCC,EAAkBpS,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAE+R,kBAC9CC,EAAsBtS,MAEzBiJ,OAAM,GACNtI,OAAO,CAACqR,EAAiB5Q,KAAKC,IAAI,EAxEpB,IAwEoC+Q,KAClDG,OACA1R,MAAM,CAACf,EAAaF,IAEjB4S,EAAmBxS,MAEtBiJ,OAAM,GACNtI,OAAO,CACNS,KAAKC,IAAI,EAAG2Q,GACZ5Q,KAAKC,IAAI,GAjFI,IAiFa+Q,KAE3BG,OACA1R,MAAM,CAACf,EAAaF,IAEvBsR,EAAUY,EAAe9M,KAAI,SAACtD,GAC5B,IAAM+Q,EAAezS,MAElBiJ,OAAM,GACNtI,OAAO,CACNX,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,MAC5BN,KAAKC,IAAI,EA5FE,IA4FcrB,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,SAEtD6Q,OACA1R,MAAM,CAACf,EAAaF,IACjB8S,EAAY1S,MAEfiJ,OAAM,GACNtI,OAAO,CACNS,KAAKC,IACH,EACArB,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,OAE9BN,KAAKC,IAAI,GAxGE,IAwGerB,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,SAEvD6Q,OACA1R,MAAM,CAACf,EAAaF,IACvB,OAAIuP,GAAiB,gBAATzN,EACH0N,EAAUoD,EAAmBF,EAC1BlD,EAAUsD,EAAYD,SAE/B,CACL,IAAME,EAAqB3S,MAExBiJ,OAAM,GACNtI,OAAO,CAnHU,IAqHdS,KAAKkD,IACH,EACAtE,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEY,gBAEhCE,KAAKC,IACH,EA3HW,IA6HTrB,IAAOjB,GAAY,SAACuB,GAAD,OACjBc,KAAKC,IAAIf,EAAEC,eAAgBD,EAAEE,eAAgBF,EAAEG,qBAItD8R,OACA1R,MAAM,CAACf,EAAaF,IAEvBsR,EAAUa,EAAe/M,KAAI,SAACtD,GAC5B,OAAIyN,GAAiB,gBAATzN,EAA+BiR,EACtB3S,MAElBiJ,OAAM,GACNtI,OAAO,CAzIQ,IA2IZS,KAAKkD,IACH,EACAtE,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,OAEhCN,KAAKC,IAAI,EAhJE,IAgJcrB,IAAOjB,GAAY,SAACuB,GAAD,OAAOA,EAAEoB,SAEtD6Q,OACA1R,MAAM,CAACf,EAAaF,OAM3B,IAAMgT,EAAQ9R,EAASkE,KAAI,SAACxD,EAAKC,GAC/B,OAAOD,EACJiB,UAAU,UACVtE,KAAK,CAACY,EAAWkS,EAAI,KAAK,SAAC3Q,GAAD,OAAOA,EAAEM,QACnCyE,MAAK,SAAC3C,GAAD,OACJA,EAAMb,OAAO,UAAUE,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,YAEnDmB,KAAK,QAAS,SACdA,KAAK,OAAQf,EAAOS,IACpBM,KAAK,SAAUf,EAAOS,IACtBM,KAAK,IAAK,MA0CfjB,EAAST,SAAQ,SAACmB,EAAKC,GAErB,IAAMhE,EAAI+D,EAAIc,aAAaE,SAAS,KAC9BqQ,EAAYf,EAAerQ,GAC3BqR,EAAYf,EAAetQ,GAC3BC,EAAOmQ,EAAYgB,EAAYC,EAE/BC,EAAqBhU,EAAW0O,QAAO,SAACnN,GAAD,OAAQzB,MAAMyB,EAAEoB,OACvDC,EAAQX,EAAOS,GACfF,EAAS2P,EAAQzP,GA0CvB,GAvCAD,EACGiD,OAAO,WACP7G,MAAM,YAFT,qBAEoCkC,EAFpC,QAGGwC,WAAW7E,GACXqI,KAAK2L,GACRjQ,EAAIiD,OAAO,YAAYnC,WAAW7E,GAAGqI,KAAK4L,EAAQnQ,GAElDC,EACGiD,OAAO,WACP7G,MAAM,YAFT,qBAEoCiC,EAFpC,QAGGyC,WAAW7E,GACXqI,KAAK6L,EAAOpQ,GAGfC,EACGiB,UAAU,QACVtE,KAAK4U,GAAoB,SAACzS,GAAD,OAAOA,EAAEM,QAClCyE,MAAK,SAAC3C,GAAD,OACJA,EACGb,OAAO,UACPE,KAAK,KAAMjC,GACXiC,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,YAE/BmB,KAAK,QAAS,OACdA,KAAK,OAAQJ,GACbI,KAAK,SAAUJ,GACfI,KAAK,IAAK,GACVO,WAAW7E,GACXsE,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,MAAM,SAACzB,GAAD,OAAOiB,EAAOjB,EAAEoB,OAEzB7C,MAAME,EAAWkS,EAAI,GAAGvP,IAMxBkR,EAAMnR,GAAGa,WAAW7E,GAAGsE,KAAK,UAAW,GAL1C6Q,EAAMnR,GACHa,WAAW7E,GACXsE,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,MAAM,SAACzB,GAAD,OAAOiB,EAAOjB,EAAEoB,OAC3BK,KAAK,UAAW,GAGjB8P,EAAW,CAEbrQ,EAAIiB,UAAU,SAASsD,SACvB,IAAMnE,EAAOJ,EACViB,UAAU,UACVtE,KAAK,CAAC,YAAI4U,GAAoBC,YAC9B3N,KAAK,QACLtD,KAAK,QAAS,SACdA,KAAK,OAAQ,QACbA,KAAK,SAAUJ,EAAQ,MACvBI,KAAK,eAAgB,GAMxB,GAAIH,EAAKG,KAAK,KAAM,CAClB,IAAMmB,EAAItB,EAAKQ,OAAOC,iBAChB4Q,EAAIrR,EAAKQ,OAAO8Q,iBAAiBhQ,GAEvCtB,EAAKG,KACH,KACA,kBAAMH,EAAKG,KAAK,KAAO,WAAIkR,EAAEjR,EAAN,YAAWiR,EAAEhR,GAAIkR,OAAO,EAAIlC,MAGvDrP,EACGU,WAAW7E,GACXsE,KAAK,UAAW8P,EAAY,EAAI,GAChC9P,KACC,IACA/B,MAEGgC,GAAE,SAAC1B,GAAD,OAAOI,EAAOJ,EAAEM,SAClBqB,GAAE,SAAC3B,GAAD,OAAOiB,EAAOjB,EAAEuS,OAClB3Q,MAAMlC,WAUbwB,EAAIiB,UAAU,UAAUsD,SACxBvE,EACGiB,UAAU,SACVtE,KAAK4U,GAAoB,SAACzS,GAAD,OAAOA,EAAEM,QAClCyE,MAAK,SAAC3C,GAAD,OACJA,EACGb,OAAO,QACPE,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,KAAMjC,GACXiC,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,KAAMjC,MAEfiC,KAAK,QAAS,QACdnE,MAAM,SAAU+D,EAAQ,MACxB/D,MAAM,eAAgB,GACtB0E,WAAW7E,GACXsE,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,KAAMR,EAAO,IAClBQ,KAAK,MAAM,SAACzB,GAAD,OAAOI,EAAOJ,EAAEM,SAC3BmB,KAAK,MAAM,SAACzB,GAAD,OAAOiB,EAAOjB,EAAEwS,OAGhCtR,EACGmB,GAAG,YAAayQ,GAChBzQ,GAAG,YAAayQ,GAChBzQ,GAAG,WAAY0Q,GACf1Q,GAAG,WAAY0Q,MAhKpB,SAASD,IACP,IAAME,EAAKtT,IAASoK,MAAM,GACpBxJ,EAAOF,EAAO6S,OAAOD,GAEvB7R,GAAI+R,EADWxT,KAAY,SAACM,GAAD,OAAOA,EAAEM,QAAM6S,MAC3B1U,EAAY6B,EAAM,GACrC,GAAI,GAAKa,GAAKA,EAAIwP,EAAG,CACfrQ,EAAO7B,EAAW0C,EAAI,GAAGb,KAAO7B,EAAW0C,GAAGb,KAAOA,KAAQa,EACjEkO,EAAa5Q,EAAW0C,IACxBoO,EAASpO,GACTsO,GAAU,GACV,IAAMzP,EAAIvB,EAAW0C,GACrBmR,EAAMvS,SAAQ,SAACmJ,EAAGkK,GAChB,IAAMnS,EAAS2P,EAAQwC,GACjBhS,EAAOmQ,EAAYC,EAAe4B,GAAK3B,EAAe2B,GACvD7U,MAAMyB,EAAEoB,IAIR8H,EAAEzH,KAAK,UAAW,GAHrByH,EAAEzH,KAAK,KAAMrB,EAAOJ,EAAEM,OACnBmB,KAAK,KAAMR,EAAOjB,EAAEoB,KACpBK,KAAK,UAAW,OAM3B,SAASsR,IACP1D,EAAa5Q,EAAWkS,EAAI,IAC5BpB,EAASoB,EAAI,GACblB,GAAU,GACV6C,EAAMvS,SAAQ,SAACmJ,EAAGkK,GAChB,IAAMnS,EAAS2P,EAAQwC,GACjBhS,EAAOmQ,EAAYC,EAAe4B,GAAK3B,EAAe2B,GACvD7U,MAAME,EAAWkS,EAAI,GAAGvP,IAIxB8H,EAAEzH,KAAK,UAAW,GAHrByH,EAAEzH,KAAK,KAAMrB,EAAO3B,EAAWkS,EAAI,GAAGrQ,OACnCmB,KAAK,KAAMR,EAAOxC,EAAWkS,EAAI,GAAGvP,KACpCK,KAAK,UAAW,SAkI3B,CAACmN,EAAWgB,EAAYd,EAASD,IAGnC5P,qBAAU,WACJR,EAAWU,OAAS,GACtBC,EAAUX,KAEX,CAACA,EAAYW,IAEhB,IAAMiU,EAAUjE,EAAU9O,KAAO0N,YAAOoB,EAAU9O,KAAM,WAAa,GAE/DgT,EAA0B,IAAd1E,EAAkB,iBAAmB,iBACjD2E,EAA0B,IAAd3E,EAAkB,cAAgB,cAC9C4E,EAA0B,IAAd5E,EAAkB,iBAAmB,iBACjD6E,EAA0B,IAAd7E,EAAkB,gBAAkB,gBAChD8E,GAA0B,IAAd9E,EAAkB,cAAgB,cAG9C+E,GAAqB,SAAC/E,GAC1B,GAAInQ,EAAWU,QAAU,GAAKmQ,GAAS,GAAKA,GAAS7Q,EAAWU,OAC9D,MAAO,GACT,IAAMyU,EACJnV,EAAW6Q,GAAOV,GAAanQ,EAAW6Q,EAAQ,GAAGV,GACjDiF,EAAerV,YAAaoV,GAClC,OAAOA,GAAe,EAAf,WAAuBC,GAAiBA,GAGjD,OACE,kBAAC,IAAM9I,SAAP,KACE,yBAAK1N,UAAU,sBAAsBC,MAAO,CAACC,eAAgB,SAC3D,yBAAKF,UAAU,aAAaiF,IAAKqN,GAC/B,yBAAKtS,UAAU,SACb,wBAAIA,UAAS,UAAMmS,EAAmB,GAAV,UAAiBrS,EAAE,cAC/C,wBAAIE,UAAS,UAAKmS,EAAS,QAAU,KAArC,UAA+C6D,IAC/C,yBAAKhW,UAAU,gBACb,4BAAKmB,YAAa4Q,EAAUkE,KAC5B,4BAAKK,GAAmBL,MAG5B,yBAAKhR,IAAK1D,EAAS8D,oBAAoB,iBACrC,uBAAGrF,UAAU,WACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMmS,EAAmB,GAAV,UAAiBrS,EAAE,WAC/C,wBAAIE,UAAS,UAAKmS,EAAS,QAAU,KAArC,UAA+C6D,IAC/C,yBAAKhW,UAAU,gBACb,4BAAKmB,YAAa4Q,EAAUmE,KAC5B,4BAAKI,GAAmBJ,MAG5B,yBAAKjR,IAAKxD,EAAS4D,oBAAoB,iBACrC,uBAAGrF,UAAU,WACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAMmS,EAAmB,GAAV,UAAiBrS,EAAE,cAC/C,wBAAIE,UAAS,UAAKmS,EAAS,QAAU,KAArC,UAA+C6D,IAC/C,yBAAKhW,UAAU,gBACb,4BAAKmB,YAAa4Q,EAAUoE,KAC5B,4BAAKG,GAAmBH,MAG5B,yBAAKlR,IAAKvD,EAAS2D,oBAAoB,iBACrC,uBAAGrF,UAAU,WACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMmS,EAAmB,GAAV,UAAiBrS,EAAE,aAC/C,wBAAIE,UAAS,UAAKmS,EAAS,QAAU,KAArC,UAA+C6D,IAC/C,yBAAKhW,UAAU,gBACb,4BAAKmB,YAAa4Q,EAAUqE,KAC5B,4BAAKE,GAAmBF,MAG5B,yBAAKnR,IAAKtD,EAAS0D,oBAAoB,iBACrC,uBAAGrF,UAAU,WACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAS,UAAMmS,EAAmB,GAAV,UACzBrS,EAAE,UADL,IACiB4R,EAAUb,IAAgB,IAE3C,wBAAI7Q,UAAS,UAAKmS,EAAS,QAAU,KAArC,UAA+C6D,IAC/C,yBAAKhW,UAAU,gBACb,4BAAKmB,YAAa4Q,EAAUsE,MAC5B,4BAAKC,GAAmBD,OAG5B,yBAAKpR,IAAKoN,EAAShN,oBAAoB,iBACrC,uBAAGrF,UAAU,WACb,uBAAGA,UAAU,YACb,uBAAGA,UAAU,cAKnB,yBAAKA,UAAU,SACb,4BACE+D,KAAK,SACLwM,QAAS,kBAAMsB,EAAiBF,MAChC3R,UAAW4R,IAAkBD,IAAW,WAAa,IAEpD7R,EAAE,cAEL,4BACEiE,KAAK,SACLwM,QAAS,kBAAMsB,EAAiB,KAChC7R,UAA6B,KAAlB4R,EAAuB,WAAa,GAC/C6E,aAAW,WAJb,YAMQ3W,EAAE,WAEV,4BACEiE,KAAK,SACLwM,QAAS,kBAAMsB,EAAiB,KAChC7R,UAA6B,KAAlB4R,EAAuB,WAAa,GAC/C6E,aAAW,WAJb,YAMQ3W,EAAE,YAIZ,yBAAKE,UAAU,SACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,eACZF,EAAE,wD,mCEtXEH,QAAMC,MAzIrB,YAQI,IAPFwB,EAOC,EAPDA,WACAsV,EAMC,EANDA,gBACAC,EAKC,EALDA,iBACA3I,EAIC,EAJDA,OACAI,EAGC,EAHDA,OACAC,EAEC,EAFDA,UAEC,KADDuI,eAEkCC,YAAgB,sBAAuB,IADxE,mBACMtF,EADN,KACiBuF,EADjB,OAG2CD,YAC1C,kBACA,GALD,mBAGME,EAHN,KAGsBC,EAHtB,OAOiDH,YAChD,qBACA,GATD,mBAOMI,EAPN,KAOyBC,EAPzB,KAWMpX,EAAKC,cAALD,EAEP,OACE,yBACEE,UAAS,6BACI,eAAXoO,EAA0B,WAAa,IAEzCnO,MAAO,CAACmQ,QAAoB,gBAAXhC,EAA2B,OAAS,KAErD,yBACEpO,UAAU,6BACVC,MAAO,CAACC,eAAgB,SAEvBmQ,OAAOC,WAAa,UAAkBnJ,IAAXiH,GAC1B,yBACEpO,UAAS,iBAAuB,eAAXoO,EAA0B,WAAa,IAC5DmC,QAAS,WACPlC,EAAqB,eAAXD,EAA0B,KAAO,gBAG7C,kBAAC,IAAD,OAIJ,4BAAKtO,EAAE,kBACP,yBAAKE,UAAU,QACb,yBACEA,UAAS,cAAuB,IAAduR,EAAkB,UAAY,IAChDhB,QAAS,WACPuG,EAAa,KAGf,4BAAKhX,EAAE,gBAET,yBACEE,UAAS,cAAuB,IAAduR,EAAkB,UAAY,IAChDhB,QAAS,WACPuG,EAAa,KAGf,4BAAKhX,EAAE,YAIX,yBAAKE,UAAU,eACb,2BAAOA,UAAU,QAAQF,EAAE,gBAC3B,yBAAKE,UAAU,mBACb,2BAAOmX,QAAQ,mBAAmBrX,EAAE,YACpC,2BACEoM,GAAG,kBACHnI,KAAK,WACLqT,QAASL,EACT/W,UAAU,SACVyW,aAAY3W,EAAE,0CACduX,SAAU,SAACC,GACTN,GAAmBD,OAIzB,yBACE/W,UAAS,6BACO,IAAduR,EAAkB,WAAa,KAGjC,2BAAO4F,QAAQ,sBAAsBrX,EAAE,gBACvC,2BACEoM,GAAG,qBACHnI,KAAK,WACLqT,QAAuB,IAAd7F,GAAmB0F,EAC5BjX,UAAU,SACVuX,SAAwB,IAAdhG,EACV8F,SAAU,SAACC,GACTJ,GAAsBD,QAM7BjJ,GACC,yBAAKhO,UAAU,qBACb,4BACEwX,MAAOd,EACPW,SAAU,YAAe,IACjBI,EADgB,EAAZrX,OACmBsX,gBAAgB,GAAGC,aAC9C,aAEFhB,EAAiBiB,KAAKpH,MAAMiH,MAG7BzJ,EAAO3G,KAAI,SAACwQ,GACX,OACE,4BACEL,MAAOK,EAAEC,UACTC,IAAKF,EAAEC,UACPE,UAAWJ,KAAKK,UAAUJ,IAET,OAAhBA,EAAEC,UAAqBhY,EAAE,cAAgBA,EAAE+X,EAAE/L,cAS3D1K,GACC,kBAAC,EAAD,CACEkQ,eAAgBlQ,EAChBmQ,UAAWA,EACXC,KAAMuF,EACNtF,QAASwF,EACTvF,QAA6B,OAApBgF,QA9IH,SAACvF,EAAWC,GAC1B,OAAKA,EAAUwF,kBACVzF,EAAUyF,mBACVvF,IAAMD,EAAUsF,gBAAiBvF,EAAUuF,oBAG3CrF,IAAMD,EAAUhD,OAAQ+C,EAAU/C,a,+BCdzC,oVAAO,IAAM8J,EAAuB,CAClC,YACA,SACA,YACA,UAEWC,EAA0B,CACrC,YACA,SACA,YACA,YAGW3O,EAAY,CACvBC,QAAS,UACToD,MAAO,QACPuL,SAAU,YAGCjN,EAAiB,CAC5BM,MAAO,EACPD,YAAa,EACbJ,KAAM,GAGKpB,EAAY,CACvBI,OAAQ,EACRH,UAAW,GAKAf,EAAW,CACtBmP,MAAO,CACL/K,YAAY,GAAD,OAJS,QAIT,eACX/D,QAASC,EAAUC,QACnBG,kBAAmB,eACnBM,qBAAsB,4BAExB,8BAA+B,CAC7BoD,YAAY,GAAD,OAVS,QAUT,+BACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,kCAExB,oBAAqB,CACnBoD,YAAY,GAAD,OAfS,QAeT,0BACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,6BAExB,iBAAkB,CAChBoD,YAAY,GAAD,OApBS,QAoBT,uBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,0BAExBoO,MAAO,CACLhL,YAAY,GAAD,OAzBS,QAyBT,eACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,kBAExBqO,MAAO,CACLpP,KAAM,QACNmE,YAAY,GAAD,OA/BS,QA+BT,eACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,kBAExBsO,WAAY,CACVrP,KAAM,aACNmE,YAAY,GAAD,OArCS,QAqCT,oBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,uBAExBuO,aAAc,CACZtP,KAAM,eACNmE,YAAY,GAAD,OA3CS,QA2CT,sBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,yBAExB,2CAA4C,CAC1CoD,YAAY,GAAD,OAhDS,QAgDT,oBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,cAExBwO,MAAO,CACLpL,YAAY,GAAD,OArDS,QAqDT,eACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,kBAExByO,UAAW,CACTrL,YAAY,GAAD,OA1DS,QA0DT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExB0O,OAAQ,CACNtL,YAAY,GAAD,OA/DS,QA+DT,gBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,mBAExB2O,IAAK,CACHvL,YAAY,GAAD,OApES,QAoET,aACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,gBAExB4O,QAAS,CACPxL,YAAY,GAAD,OAzES,QAyET,iBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,oBAExB6O,QAAS,CACPzL,YAAY,GAAD,OA9ES,QA8ET,iBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,oBAExB,mBAAoB,CAClBoD,YAAY,GAAD,OAnFS,QAmFT,yBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,4BAExB,oBAAqB,CACnBoD,YAAY,GAAD,OAxFS,QAwFT,sBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,yBAExB8O,UAAW,CACT1L,YAAY,GAAD,OA7FS,QA6FT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExB+O,OAAQ,CACN3L,YAAY,GAAD,OAlGS,QAkGT,gBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,mBAExBgP,YAAa,CACX5L,YAAY,GAAD,OAvGS,QAuGT,qBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,wBAExB,iBAAkB,CAChBoD,YAAY,GAAD,OA5GS,QA4GT,uBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,0BAExBiP,YAAa,CACX7L,YAAY,GAAD,OAjHS,QAiHT,qBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,wBAExBkP,QAAS,CACP9L,YAAY,GAAD,OAtHS,QAsHT,iBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,oBAExBmP,UAAW,CACT/L,YAAY,GAAD,OA3HS,QA2HT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExBoP,QAAS,CACPhM,YAAY,GAAD,OAhIS,QAgIT,iBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,oBAExBqP,SAAU,CACRjM,YAAY,GAAD,OArIS,QAqIT,kBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,qBAExBsP,OAAQ,CACNlM,YAAY,GAAD,OA1IS,QA0IT,gBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,mBAExBuP,WAAY,CACVnM,YAAY,GAAD,OA/IS,QA+IT,oBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,uBAExBwP,OAAQ,CACNpM,YAAY,GAAD,OApJS,QAoJT,gBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,mBAExByP,UAAW,CACTrM,YAAY,GAAD,OAzJS,QAyJT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExB0P,OAAQ,CACNtM,YAAY,GAAD,OA9JS,QA8JT,gBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,mBAExB,aAAc,CACZoD,YAAY,GAAD,OAnKS,QAmKT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExB2P,UAAW,CACTvM,YAAY,GAAD,OAxKS,QAwKT,mBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,sBAExB4P,QAAS,CACPxM,YAAY,GAAD,OA7KS,QA6KT,iBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,oBAExB6P,YAAa,CACXzM,YAAY,GAAD,OAlLS,QAkLT,qBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,wBAExB,gBAAiB,CACfoD,YAAY,GAAD,OAvLS,QAuLT,sBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,yBAGxB,cAAe,CACboD,YAAY,GAAD,OA7LS,QA6LT,oBACX/D,QAASC,EAAUqD,MACnB3C,qBAAsB,wBAIb8P,EAAc,CACzBC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,eACJC,GAAI,MACJC,GAAI,UACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,cACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,8BACJC,GAAI,aACJC,GAAI,2CACJC,GAAI,QACJC,GAAI,oBACJC,GAAI,SACJC,GAAI,cACJC,GAAI,cAGAC,EAAa,GACbC,EAAoB,GAC1BrV,OAAO2H,KAAKoL,GAAa3S,KAAI,SAAC0Q,EAAK9F,GAGjC,OAFAqK,EAAkBtC,EAAYjC,IAAQA,EACtCsE,EAAWE,KAAK,CAACC,KAAMzE,EAAK5O,KAAM6Q,EAAYjC,KACvC,QAEF,IAAM7G,EAAsBoL,EACtBG,EAAoBJ,EAMpBpN,EAAoB,CAC/B,8BAA+B,MAC/B,iBAAkB,QAClB,oBAAqB,OACrBqJ,MAAO,QACPC,MAAO,QACPC,WAAY,OACZC,aAAc,QACd,2CAA4C,MAC5CC,MAAO,QACPG,IAAK,MACLC,QAAS,QACTC,QAAS,QACT,mBAAoB,KACpB,oBAAqB,QACrBC,UAAW,QACXL,UAAW,QACXC,OAAQ,QACRK,OAAQ,MACRC,YAAa,KACb,iBAAkB,QAClBC,YAAa,SACbC,QAAS,OACTC,UAAW,OACXC,QAAS,OACTC,SAAU,MACVC,OAAQ,QACRC,WAAY,OACZC,OAAQ,QACRC,UAAW,QACXC,OAAQ,MACR,aAAc,QACdC,UAAW,OACXC,QAAS,OACT,gBAAiB,SACjBC,YAAa,QACb,cAAe,QACf3K,MAAO,U,0RClTHsN,EAAS,IAAIC,IAAW,CAC5BC,YAAY,EACZC,MAAOJ,IACPK,eAAgBH,IAAWI,WAAWC,WACtCC,eAAgBN,IAAWI,WAAW9Q,IAAI+Q,WAAW,UAGjDE,EAAiB,IAAIP,IAAW,CACpCC,YAAY,EACZO,MAAO,EACPL,eAAgBH,IAAWI,WAAWC,WACtCC,eAAgBN,IAAWI,WAAW9Q,IAAI+Q,WAAW,YACrDI,aAAa,EACbC,OAAQ,CACNC,IAAK,wDACLC,UAAW,SAAUC,GACnB,IAAMvP,EAAY,GAQlB,OAPAhH,OAAO2H,KAAK4O,GAAUnW,KAAI,SAACoW,GACzB,IAAMtO,EAAeqO,EAASC,GAAWtO,aAIzC,OAHAlI,OAAO2H,KAAKO,GAAc9H,KAAI,SAACqW,GAC7B,OAAOzP,EAAUsO,KAAK,CAACnQ,SAAUsR,EAAc5R,MAAO2R,OAEjD,QAEFxP,MAKP0P,EAAmB,IAAIhB,IAAW,CACtCC,YAAY,EACZO,MAAO,EACPL,eAAgBH,IAAWI,WAAWC,WACtCC,eAAgBN,IAAWI,WAAW9Q,IAAI+Q,WACxC,WACA,OACA,UACA,kCACA,wBACA,SAEFI,aAAa,EACbC,OAAQ,CACNC,IAAK,wDACLC,UAAW,SAAUC,GACnB,OAAOA,EAASI,cAKlBC,GAAU,EACRC,EAAc,CAClB,YACA,cACA,eACA,iBACA,UACA,gBAmYane,UAAMC,MAhYrB,SAAgBC,GAAQ,IAAD,EACiBU,mBAAS,IAD1B,mBACdwd,EADc,KACDC,EADC,OAEOzd,oBAAS,GAFhB,mBAEd0d,EAFc,KAENC,EAFM,OAGS3d,mBAAS,IAHlB,mBAGd4d,EAHc,KAGLC,EAHK,KAIfC,EAAc7c,iBAAO,MACpB1B,EAAKC,cAALD,EAEDwe,EAAetc,uBAAY,SAACqc,GAChC,IAAMF,EAAU,GA4ChBzB,EAAO6B,OAAOF,GA1CD,SAACG,GACZA,EAAOnX,KAAI,SAACoX,EAAQxM,GAClB,IAAMyM,EAAW,CACfvV,KAAMsV,EAAOtV,KACbpF,KAAM,QACN4a,MAAOF,EAAOjC,MAGhB,OADA2B,EAAQ5B,KAAKmC,GACN,WAmCXxB,EAAeqB,OAAOF,GA/BD,SAACG,GACpBA,EAAO3c,MAAM,EAAG,GAAGwF,KAAI,SAACoX,EAAQxM,GAC9B,IAAM2M,EAAc,CAClBzV,KAAMsV,EAAOrS,SAAW,KAAOqS,EAAO3S,MACtC/H,KAAM,QACN4a,MAAOzN,IAAoBuN,EAAO3S,QAGpC,OADAqS,EAAQ5B,KAAKqC,GACN,WAwBXjB,EAAiBY,OAAOF,GApBD,SAACG,GACtBA,EAAO3c,MAAM,EAAG,GAAGwF,KAAI,SAACoX,EAAQxM,GAC9B,IAAM4M,EAAgB,CACpB1V,KAAMsV,EAAOK,sBACb/a,KAAM,aACNgb,SAAUN,EAAOM,SACjBC,QAASP,EAAOQ,QAChBC,YAAaT,EAAOU,gCACpBC,KAAMX,EAAOW,KACbtT,MAAO2S,EAAO3S,MACdmT,QAASR,EAAOY,aAGlB,OADAlB,EAAQ5B,KAAKsC,GACN,QAETT,EAAW,GAAD,OAAKD,SAMhB,IAcH,SAASmB,EAAeC,EAAS/H,GAC/B,IAAMgI,EAAcvY,OAAOwY,yBAAyBF,EAAS,SAASG,IAChEC,EAAY1Y,OAAO2Y,eAAeL,GAClCM,EAAuB5Y,OAAOwY,yBAClCE,EACA,SACAD,IAEEF,GAAeA,IAAgBK,EACjCA,EAAqB1X,KAAKoX,EAAS/H,GAEnCgI,EAAYrX,KAAKoX,EAAS/H,GAvB9BsI,aACE,WACM/B,EACFO,EAAaP,GAEbK,EAAW,MAGf,IACA,CAACL,IA+DH,IAAMgC,EAAcC,SAASC,eAAe,sBAG5C,OAFIF,GAfJ,SAASG,EAAuB9f,EAAQ6R,GACtC,GAAI4L,EAEF,OADAzd,EAAO+f,YAAc,IACd,GAlCX,SAASC,EAAgBhgB,EAAQ6R,EAAOoO,EAAgBC,GACtD,GAAIzC,EAEF,OADAzd,EAAO+f,YAAc,IACd,EAET,IAAM9X,EAAOyV,EAAY7L,GACnBsO,EAAcngB,EAAO+f,YAG3B,GAFA/f,EAAOogB,UAAUpY,OAAO,aACxBhI,EAAO+f,YAAcI,EAAclY,EAAKgY,GACpCA,EAAiBhY,EAAKvG,OAAS,EAIjC,OAHA2e,YAAW,WACTL,EAAgBhgB,EAAQ6R,EAAOoO,EAAiB,EAAGC,KAClD,MACI,EAETA,IAqBAF,CAAgBhgB,EAAQ6R,EAAO,GAAG,WAChCwO,YAAW,YAnBf,SAASC,EAAiBtgB,EAAQkgB,GAChC,IAAMC,EAAcngB,EAAO+f,YAE3B,GADA/f,EAAOogB,UAAUG,IAAI,aACjBJ,EAAYze,OAAS,EAKvB,OAJA2e,YAAW,WACTrgB,EAAO+f,YAAc,GACrBO,EAAiBtgB,EAAQkgB,KACxB,MACI,EAETA,IAUII,CAAiBtgB,GAAQ,WACvB8f,EAAuB9f,GAAS6R,EAAQ,GAAK6L,EAAYhc,aAE1D,QAKUoe,CAAuBH,EAAa,GAGnD,yBAAK/f,UAAU,UACb,+BAAQF,EAAE,qCACV,yBAAKE,UAAU,SAEf,2BACE+D,KAAK,OACLyT,MAAOuG,EACP9Y,IAAKoZ,EACLuC,QAAS,SAACtJ,GACRuG,GAAU,EACVK,GAAU,IAEZ2C,OAAQ,WACN3C,GAAU,IAEZ7G,SAAU,SAACC,GACT0G,EAAe1G,EAAMlX,OAAOoX,UAGhC,0BAAMtL,GAAG,qBAAqBlM,UAAU,uBAExC,yBAAKA,UAAS,iBACZ,kBAAC,IAAD,OAGD+d,EAAYjc,OAAS,GACpB,yBACE9B,UAAS,eACTuQ,QAAS,WACPyN,EAAe,IACfI,EAAW,MAGb,kBAAC,IAAD,OAIHD,EAAQrc,OAAS,GAChB,yBAAK9B,UAAU,WACZme,EAAQ9W,KAAI,SAACoX,EAAQxM,GACU,IAAD,EAA7B,MAAoB,UAAhBwM,EAAO1a,KAEP,kBAAC,IAAD,CAAMgU,IAAK9F,EAAOhB,GAAE,gBAAWwN,EAAOE,QACpC,yBAAK3e,UAAU,UACb,yBAAKA,UAAU,eAAeye,EAAOtV,MACrC,yBAAKnJ,UAAU,eAAf,gBACSye,QADT,IACSA,GADT,UACSA,EAAQ1a,YADjB,aACS,EAAc+c,cADvB,WAQJ,uBACE/I,IAAK9F,EACL9R,KAAMse,EAAOO,QACb5e,OAAO,WACPJ,UAAU,oBAEV,yBAAKA,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eAAeye,EAAOtV,MACrC,yBAAKnJ,UAAU,mBACZye,EAAOW,KADV,KACkBX,EAAO3S,QAG3B,yBAAK9L,UAAU,mBACb,6BACGye,EAAOM,SAASgC,MAAM,YACnB,gBACAtC,EAAOM,UAEb,kBAAC,IAAD,QAGJ,yBAAK/e,UAAU,sBAAsBye,EAAOS,aAC5C,yBAAKlf,UAAU,kBACb,kBAAC,IAAD,MACA,6BAAMye,EAAOQ,eAS1BhB,GACC,yBAAKje,UAAU,YACb,yBAAKA,UAAU,iBACb,4BAAKF,EAAE,eACP,yBAAKE,UAAU,eACb,yBAAKA,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,gBACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,kBAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,iBACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,mBAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EACEjB,EAAY/b,QACZ,+BAEF+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,iCAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,qBACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,uBAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EACEjB,EAAY/b,QACZ,oCAEF+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,wCAKX,yBAAKE,UAAU,kBACb,4BAAKF,EAAE,cACP,yBAAKE,UAAU,eACb,yBAAKA,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,aACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,eAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,aACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,eAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,WACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,aAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,aACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,eAGP,yBAAKE,UAAU,cACb,kCACA,wBACEghB,YAAa,SAAC1J,GACZA,EAAM2J,iBACN3B,EAAejB,EAAY/b,QAAS,aACpC+b,EAAY/b,QAAQ4e,cAClB,IAAIC,MAAM,QAAS,CAACC,SAAS,OAIhCthB,EAAE,sB,wICxafuhB,EAAgBC,YAAiB,CAACC,GAAI,KAAMC,EAAG,IAAKC,EAAG,MAE7D,SAASC,EAAT,GAAwC,IAApB5V,EAAmB,EAAnBA,MAAOvD,EAAY,EAAZA,UACnBoZ,EAAUlT,mBAAQ,kBAAM,kBAAC,IAAD,QAAkB,IAEhD,OACE,4BACE,0BAAMzO,UAAW4hB,IAAW,QAAD,aAAgBrZ,KACxCuD,EAAM,QAAD,OAASvD,IAAe,GAAKoZ,EAClC7V,EAAM,QAAD,OAASvD,IAAe,GAAKuD,EAAM,QAAD,OAASvD,KAEnD,0BAAMvI,UAAU,SACQ,IAArB8L,EAAMvD,GAAmB,IAAMpH,YAAa2K,EAAMvD,MAM3D,SAASsZ,EAAT,GAAgE,IAAnCC,EAAkC,EAAlCA,WAAYvZ,EAAsB,EAAtBA,UAAWwZ,EAAW,EAAXA,SAC5CC,EAAaX,IACZvhB,EAAKC,cAALD,EAEP,OACE,wBAAIyQ,QAAS,kBAAMuR,EAAWvZ,KAC5B,yBAAKvI,UAAU,mBACb,0BACEA,UAAW4hB,IAAW,4BAAQrZ,GAA6B,MAAfyZ,IAC5Clc,MAAOyC,GAES,MAAfyZ,EACGzZ,EAAU1G,MAAM,GACD,MAAfmgB,EACAC,YACEC,YAAyB,WAAd3Z,EAAyB,WAAaA,IAEnDzI,EAAEmiB,YAAyB,WAAd1Z,EAAyB,WAAaA,KAEzD,yBACEtI,MAAO,CACLmQ,QAAS2R,EAASI,aAAe5Z,EAAY,UAAY,SAG1DwZ,EAASK,YACR,yBAAKpiB,UAAU,aAEf,yBAAKA,UAAU,kBAoB3B,IAAMqiB,EAAe1iB,IAAMC,MAZ3B,YAAkD,IAAvBwM,EAAsB,EAAtBA,SAAU7D,EAAY,EAAZA,UACnC,OACE,4BACE,0BAAMvI,UAAW4hB,IAAW,QAAD,aAAgBrZ,KACxC6D,EAASkW,MAAM/Z,GAAa,GAAK,kBAAC,IAAD,MACjC6D,EAASkW,MAAM/Z,GAAa,GAAK6D,EAASkW,MAAM/Z,IAEnD,0BAAMvI,UAAU,SAASmB,YAAaiL,EAAS7D,SAgErD,IAAMga,EAAc5iB,IAAMC,MA/C1B,YAQI,IAPF+I,EAOC,EAPDA,kBACAyD,EAMC,EANDA,SACAN,EAKC,EALDA,MACAiD,EAIC,EAJDA,KACAyT,EAGC,EAHDA,oBACAC,EAEC,EAFDA,gBACAxU,EACC,EADDA,UAEOnO,EAAKC,cAALD,EAEP,OACE,wBACEiY,IAAK3L,EAASA,SACdpM,UAAW4hB,IAAW,WAAY,CAChC,kBAAmC,OAAjBjZ,QAAiB,IAAjBA,OAAA,EAAAA,EAAmByD,YAAaA,IAEpDsW,aAAc,kBAAMF,EAAoBpW,EAAUN,KAElD,wBAAI9L,UAAW4hB,IAAW,MAAD,cAAO7S,QAAP,IAAOA,OAAP,EAAOA,EAAMA,QACpC,yBAAK/O,UAAU,iBACb,0BAAMA,UAAU,cACbF,EAAEsM,GACH,0BACEuW,WAAS,WACTC,WAAU,CAAC,CAACH,EAAgBrW,GAAUyW,QACtCC,aAAW,uBACXC,iBAAe,aACfxS,QAAS,SAACyS,GAAD,OAAOA,EAAEpW,oBAEjB6V,EAAgBrW,GAAUyW,OAAS,kBAAC,IAAD,UAM3C1K,IAAwB9Q,KAAI,SAACkB,GAAD,OAC3B,kBAAC8Z,EAAD,CACEtK,IAAKxP,EACL6D,SAAU6B,EAAU7B,GACpB7D,UAAWA,WAlDM,SAAC4I,EAAWC,GAAe,IAAD,IACnD,OAAIC,IAAK,UAACF,EAAUxI,yBAAX,aAAC,EAA6ByD,SAAU+E,EAAU/E,YAGvDiF,IAAK,UAACD,EAAUzI,yBAAX,aAAC,EAA6ByD,SAAUgF,EAAUhF,aAgT9CzM,UAAMC,MAlOrB,YAQI,IAPFqS,EAOC,EAPDA,MACAnG,EAMC,EANDA,MACAmC,EAKC,EALDA,UACAC,EAIC,EAJDA,MACAvF,EAGC,EAHDA,kBACAgO,EAEC,EAFDA,iBACA6L,EACC,EADDA,oBACC,EAC6CjiB,mBAAS0N,GADtD,mBACMwU,EADN,KACuBQ,EADvB,OAEyC1iB,oBAAS,GAFlD,mBAEM2iB,EAFN,KAEqBC,EAFrB,OAG+BtM,YAAgB,mBAAoB,CAClEsL,WAAY,YACZC,aAAa,IALd,mBAGML,EAHN,KAGgBqB,EAHhB,KAQKC,EAAUC,cACTxjB,EAAKC,cAALD,EAEDyjB,EAAU9U,mBACd,kBACE,0BACEzO,UAAW4hB,IACT,WACA,CAAC4B,gBAAiBN,GAClB,CAACO,iBAAkBP,KAGrB,kBAAC,IAAD,SAGJ,CAACA,IAGGQ,EAAoB1hB,uBACxB,SAAC8J,GACMuF,IAAMvF,EAAMA,MAAP,OAAcnD,QAAd,IAAcA,OAAd,EAAcA,EAAmBmD,QACzC6K,EAAiB7K,KAGrB,CAAC6K,EAAkBhO,IAGfgb,EAAS3hB,uBACb,SAAC+f,GACC,IAAM6B,EAAS,GACf3c,OAAO2H,KAAK6T,GACT1S,MAAK,SAAC8T,EAAWC,GAChB,MAA4B,aAAxB/B,EAASI,WACJJ,EAASK,YACZ7X,SAASkY,EAAgBoB,GAAW9B,EAASI,aAC3C5X,SAASkY,EAAgBqB,GAAW/B,EAASI,aAC/C5X,SAASkY,EAAgBqB,GAAW/B,EAASI,aAC3C5X,SAASkY,EAAgBoB,GAAW9B,EAASI,aAE5CJ,EAASK,YACZyB,EAAUE,cAAcD,GACxBA,EAAUC,cAAcF,MAG/BnhB,SAAQ,SAACqV,GACR6L,EAAO7L,GAAO0K,EAAgB1K,MAElCkL,EAAmBW,KAErB,CAACnB,IAGGX,EAAa9f,uBACjB,SAACuG,GACC,IAAMyb,EAAc,CAClB5B,aAAcL,EAASK,YACvBD,WAAY5Z,GAEdob,EAAOK,GACPZ,EAAYnc,OAAOC,OAAO,GAAI6a,EAAUiC,MAE1C,CAACL,EAAQP,EAAarB,IAOxB,OAJArhB,aAAc,WACY,OAApBoL,EAAMgM,WAAoB6L,EAAO5B,MAIrC,kBAAC,IAAMrU,SAAP,KACE,wBACE1N,UAAW4hB,IACT,QACA,CAAC,WAAgC,OAApB9V,EAAMgM,WACnB,CAAC,kBAAmC,OAAjBnP,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBmD,SAAUA,EAAMA,OACtD,CAAC,SAAUmG,EAAQ,IAAM,IAE3ByQ,aAAc,kBAAMgB,EAAkB5X,IACtCyE,QACsB,OAApBzE,EAAMgM,UACF,WACEqL,GAAkBD,IAEpB,MAGN,4BACE,yBAAKljB,UAAU,iBACQ,OAApB8L,EAAMgM,WAAsByL,EAC7B,0BAAMvjB,UAAU,cACbF,EAAEgM,EAAMA,OAET,0BACE8W,WAAU,CAAC9iB,EAAE,GAAD,OAAIgM,EAAMmY,cACtBnB,aAAW,uBACXC,iBAAe,aACfxS,QAAS,SAACyS,GAAD,OAAOA,EAAEpW,oBAEjBd,EAAMmY,YAAc,kBAAC,IAAD,UAM5B/L,IAAqB7Q,KAAI,SAACkB,EAAW0J,GAAZ,OACxB,kBAACyP,EAAD,CAAW3J,IAAK9F,EAAOnG,MAAOA,EAAOvD,UAAWA,QAInD2a,GACC,kBAAC,IAAMxV,SAAP,KACE,wBAAI1N,UAAU,aACZ,wBAAIkkB,QAAS,GACX,8BAIJ,wBAAIlkB,UAAW,qBACb,wBAAIkkB,QAAS,EAAGjkB,MAAO,CAACkkB,cAAe,IACrC,uBAAGnkB,UAAU,WACb,2BACGkB,MAAMwP,KAAKF,MAAMO,YAAWjF,EAAMgF,mBAC/B,GADH,UAEMhR,EAAE,gBAFR,YAE2BkR,YACtB,IAAIN,KAAKK,YAAWjF,EAAMgF,kBAC1B,IAAIJ,MAJT,YAKQ5Q,EAAE,UAEG,OAAf2iB,QAAe,IAAfA,OAAA,EAAAA,EAAiB9U,UAChB,yBAAK3N,UAAU,cACb,kBAAC,IAAD,MACCF,EAAE,oDAIT,wBACEskB,MAAM,SACNpkB,UAAU,kBACVkkB,QAAS,EACT3T,QAAS,WACP8S,EAAQ9G,KAAR,gBAAsBzQ,EAAMgM,cALhC,eAOUhY,EAAEgM,EAAMA,OAPlB,aAUF,wBAAI9L,UAAW4hB,IAAW,qBACxB,wBAAIrR,QAAS,kBAAMuR,EAAW,cAC5B,yBAAK9hB,UAAU,mBACb,0BAAM8F,MAAM,YAAYhG,EAAE,aAC1B,yBACEG,MAAO,CACLmQ,QAC0B,aAAxB2R,EAASI,WAA4B,UAAY,SAGpDJ,EAASK,YACR,yBAAKpiB,UAAU,aAEf,yBAAKA,UAAU,kBAMtBmY,IAAwB9Q,KAAI,SAACkB,EAAW0J,GAAZ,OAC3B,kBAAC4P,EAAD,CACE9J,IAAK9F,EACL6P,WAAYA,EACZvZ,UAAWA,EACXwZ,SAAUA,SAOnBmB,GACCjc,OAAO2H,KAAK6T,GAAiBpb,KAAI,SAAC+E,EAAU6F,GAAX,OAC/B,kBAACsQ,EAAD,CACExK,IAAK3L,EACLN,MAAOA,EACPM,SAAUA,EACV6B,UAAWA,EACXc,KAAMb,EAAM9B,GACZqW,gBAAiBA,EACjB9Z,kBAAmBA,EACnB6Z,oBAAqBA,OAI1BU,GACC,wBAAIljB,UAAU,aACZ,wBAAIkkB,QAAS,GACX,4BACA,kBAAC,IAAD,CACEhY,GAAG,WACHmY,MAAM,QACNtgB,KAAK,OACLugB,OAAO,QACPC,WAAW,EACXC,YAAY,EACZC,eAAe,gBAhPb,SAACtT,EAAWC,GAAe,IAAD,QACxC,QAAKC,IAAMF,EAAUrF,MAAMA,MAAOsF,EAAUtF,MAAMA,WAI/CuF,IAAK,UACJF,EAAUxI,yBADN,aACJ,EAA6BmD,MADzB,UAEJsF,EAAUzI,yBAFN,aAEJ,EAA6BmD,UAM9BuF,IAAK,UACJF,EAAUxI,yBADN,aACJ,EAA6ByD,SADzB,UAEJgF,EAAUzI,yBAFN,aAEJ,EAA6ByD,cClJ7BiV,EAAgBC,YAAiB,CAACC,GAAI,KAAMC,EAAG,IAAKC,EAAG,MAE7D,SAASiD,EAAT,GAA6D,IAAnC5C,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAUxZ,EAAY,EAAZA,UACxCyZ,EAAaX,IACZvhB,EAAKC,cAALD,EAEP,OACE,wBAAIyQ,QAAS,kBAAMuR,EAAWvZ,KAC5B,yBAAKvI,UAAU,mBACb,0BACEA,UAAW4hB,IAAW,4BAAQrZ,GAA6B,MAAfyZ,IAC5Clc,MAAOyC,GAES,MAAfyZ,EACGzZ,EAAU1G,MAAM,GACD,MAAfmgB,EACAC,YACEC,YAAyB,WAAd3Z,EAAyB,WAAaA,IAEnDzI,EAAEmiB,YAAyB,WAAd1Z,EAAyB,WAAaA,KAEzD,yBACEtI,MAAO,CACLmQ,QAAS2R,EAASI,aAAe5Z,EAAY,UAAY,SAG3D,yBACEvI,UAAW4hB,IACT,CAAC,WAAYG,EAASK,aACtB,CAAC,cAAeL,EAASK,mBAkMxBziB,WAAMC,MArLrB,YAOI,IANFoO,EAMC,EANDA,OACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,MACAvF,EAGC,EAHDA,kBACAgO,EAEC,EAFDA,iBACA6L,EACC,EADDA,oBACC,EAC+B3L,YAAgB,WAAY,CAC1DsL,WAAY,YACZC,aAAa,IAHd,mBACML,EADN,KACgBqB,EADhB,KAKMtjB,EAAKC,cAALD,EALN,EAOuCS,mBACtCyN,EAAO8B,QAAO,SAAChE,GAAD,MAA+B,OAApBA,EAAMgM,cARhC,mBAOM6M,EAPN,KAOoBC,EAPpB,KAWKC,EAAepW,mBACnB,kBACE,kBAAC,IAAMf,SAAP,KACE,wBACE1N,UAAU,2BACVC,MAAO,CAACC,eAAgB,SAEvBJ,EAAE,qCAJL,IAI4C,IAC1C,kBAAC,IAAD,CAAMmR,GAAG,SAAShR,MAAO,CAAC+D,MAAO,YAC9BlE,EAAE,aADL,MAIF,wBACEE,UAAU,2BACVC,MAAO,CAACC,eAAgB,SAF1B,wCAIwC,IACtC,uBACEC,KAAK,mGACLF,MAAO,CAAC+D,MAAO,YAFjB,cASN,CAAClE,IAGGglB,EAAkBrW,mBACtB,kBACE,wBAAIzO,UAAU,2BAA2BC,MAAO,CAACC,eAAgB,OAC9D8N,EAAOnM,MAAM,GAAGiO,QAAO,SAAC+H,GAAD,OAAOA,GAAKA,EAAEjX,UAAY,KAAGkB,OADvD,0BAKF,CAACkM,IAGG2V,EAAS3hB,uBACb,SAAC+f,GACC,IAAMgD,EAAkB,YAAIJ,GAAc5U,MAAK,SAAC1L,EAAGC,GACjD,MAA4B,UAAxByd,EAASI,WACJJ,EAASK,YACZ7X,SAASlG,EAAE0d,EAASI,aAClB5X,SAASjG,EAAEyd,EAASI,aACtB5X,SAASjG,EAAEyd,EAASI,aAClB5X,SAASlG,EAAE0d,EAASI,aAEnBJ,EAASK,YACZ/d,EAAE0d,EAASI,YAAY4B,cAAczf,EAAEyd,EAASI,aAChD7d,EAAEyd,EAASI,YAAY4B,cAAc1f,EAAE0d,EAASI,gBAGxDyC,EAAgBG,KAElB,CAACJ,IAGG7C,EAAa9f,uBACjB,SAACuG,GACC,IAAMyb,EAAc,CAClB5B,aAAcL,EAASK,YACvBD,WAAY5Z,GAEdob,EAAOK,GACPZ,EAAYnc,OAAOC,OAAO,GAAI6a,EAAUiC,MAE1C,CAACL,EAAQP,EAAarB,IAOxB,OAJArhB,aAAc,WACZijB,EAAO5B,MAGL/T,EAAOlM,OAAS,EAEhB,kBAAC,IAAM4L,SAAP,KACE,kBAAC,IAAD,CACE2W,MAAM,QACNtgB,KAAK,OACLugB,OAAO,QACPC,WAAW,EACXE,eAAe,UAGhBI,EAED,2BAAO7kB,UAAU,iBAAiBC,MAAO,CAACC,eAAgB,SACxD,+BACE,4BACE,wBAAIF,UAAU,gBAAgBuQ,QAAS,kBAAMuR,EAAW,WACtD,yBAAK9hB,UAAU,mBACb,0BAAM8F,MAAM,SAAShG,EAAE,aACvB,yBACEG,MAAO,CACLmQ,QAC0B,UAAxB2R,EAASI,WAAyB,UAAY,SAGlD,yBACEniB,UAAW4hB,IACT,CAAC,WAAYG,EAASK,aACtB,CAAC,cAAeL,EAASK,mBAMlClK,IAAqB7Q,KAAI,SAACkB,EAAW0J,GAAZ,OACxB,kBAACyS,EAAD,CACE3M,IAAK9F,EACL6P,WAAYA,EACZC,SAAUA,EACVxZ,UAAWA,SAMlByF,GACC,+BACG2W,EAAatd,KAAI,SAACyE,EAAOmG,GAC8B,IAAD,EAArD,OAAInG,EAAMlL,UAAY,GAAyB,OAApBkL,EAAMgM,UAE7B,kBAAC,EAAD,CACEC,IAAKjM,EAAMgM,UACXhM,MAAOA,EACPmC,UAAS,UAAEA,EAAUnC,EAAMA,cAAlB,aAAE,EAAwBqD,aACnCjB,MAAOA,EAAMpC,EAAMA,OACnBnD,kBACE0I,IAAK,OAAC1I,QAAD,IAACA,OAAD,EAACA,EAAmBmD,MAAOA,EAAMA,OAClCnD,EACA,KAENgO,iBAAkBA,EAClB6L,oBAAqBA,IAIpB,SAKZxU,GACC,+BACE,kBAAC,EAAD,CACE+J,IAAK,EACLjM,MAAOkC,EAAO,GACd2I,iBAAkBA,MAKzB3I,GAAU8W,GAIR,yBAAK7kB,MAAO,CAACkF,OAAQ,cArLhB,SAACgM,EAAWC,GAC1B,OAAOC,IAAMF,EAAUxI,kBAAmByI,EAAUzI,sB,wCC/ChDqc,GAAU,IAAItU,KAChBuU,GAAcD,GAmFHE,OAjFf,SAAiBrlB,GAAQ,IAAD,EACQU,mBAAS,IADjB,mBACf4kB,EADe,KACNC,EADM,KAoBtB,OAjBA1kB,aAAc,WACZ2kB,KACGC,IAAI,mDACJC,MAAK,SAAC/H,GACL4H,EAAW5H,EAAShd,SAErBglB,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAMlBG,2BAAgB,WACdX,GAAcD,MAId,yBAAKhlB,UAAU,WACb,yBAAKA,UAAU,UACb,oCACA,+DAGF,yBAAKA,UAAU,kBACb,4BAAK2Q,aAAOsU,GAAa,WAG1BE,EACEtjB,OAAO,GACPwT,UACAhO,KAAI,SAAUwe,EAAU5T,GACvB4T,EAASC,OAASD,EAASC,OAAOC,QAAQ,KAAM,SAChD,IAAMC,EAAe,IAAItV,KAA0B,IAArBmV,EAASI,WAoBvC,OACE,kBAAC,IAAMvY,SAAP,CAAgBqK,IAAK9F,GAClB+T,EAAaE,YAAcjB,GAAYiB,WApB1CjB,GAAce,EAGZ,kBAAC,IAAMtY,SAAP,KACa,IAAVuE,EACC,yBAAKjS,UAAU,UACb,gDAGF,GAEF,yBAAKA,UAAU,kBACb,4BAAK2Q,aAAOqV,EAAc,aAU1B,IACJ,yBAAKjO,IAAK9F,EAAOjS,UAAU,UACzB,4BACGgR,YACC,IAAIN,KAA0B,IAArBmV,EAASI,WAClB,IAAIvV,MACF,QAEN,wBACEyV,wBAAyB,CACvBC,OAAQP,EAASC,iB,gDC6LtBO,OA5Of,SAAcxmB,GAAQ,IAAD,EACSU,mBAAS,MADlB,mBACZyN,EADY,KACJsY,EADI,OAEuC/lB,mBAAS,MAFhD,mBAEZgmB,EAFY,KAEWC,EAFX,OAGuBjmB,mBAAS,MAHhC,mBAGZkmB,EAHY,KAGGC,EAHH,OAIuBnmB,mBAAS,MAJhC,mBAIZ4N,EAJY,KAIGwY,EAJH,OAKmBpmB,mBAAS,IAL5B,mBAKZqmB,EALY,KAKCC,EALD,OAMiBtmB,mBAAS,MAN1B,mBAMZa,EANY,KAMA0Q,EANA,OAOWvR,oBAAS,GAPpB,mBAOZumB,EAPY,KAOHC,EAPG,OAQ+BxmB,mBAAS,CACzDuL,MAAO,UATU,mBAQZnD,EARY,KAQOC,EARP,OAWmBrI,oBAAS,GAX5B,mBAWZymB,EAXY,KAWCC,EAXD,OAYS1mB,mBAAS,MAZlB,mBAYZ6N,GAZY,KAYJC,GAZI,QAae9N,mBAAS,aAbxB,qBAaZuI,GAbY,MAaDwF,GAbC,SAc6C/N,oBAC9D,GAfiB,qBAcZ2mB,GAdY,MAccC,GAdd,SAkBuBtQ,YACxC,gBACA,MApBiB,qBAkBZuQ,GAlBY,MAkBGC,GAlBH,SAsBexQ,YAAgB,aAAa,GAtB5C,qBAsBZyQ,GAtBY,MAsBDC,GAtBC,MAwBbC,GAAO/Y,mBACX,kBACE,kBAAC,KAAD,CACE8B,QAAS,WACP0W,GAAgBD,GAChBO,IAAa,QAInB,CAACA,GAAcP,IAGXS,GAAUhZ,mBACd,kBACE,kBAAC,KAAD,CACE8B,QAAS,WACP0W,GAAgBD,QAItB,CAACA,IAGHtmB,aAAc,WACZgnB,QAGFhnB,aAAc,WACZ2kB,KACGC,IAAI,mDACJC,MAAK,SAAC/H,GACL,IAAMmK,EAAgBnK,EAAShd,KAC5BqB,QACAwT,UAAU,GACV4Q,UAAUhZ,WACT0a,IAAkBP,KACpBG,IAAa,GACbF,GAAiBM,OAGpBnC,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAIlB,IAAMiC,GAAS,uCAAG,sDAAA7f,EAAA,+EAKJ+f,QAAQC,IAAI,CACpBxC,KAAMC,IAAI,kDACVD,KAAMC,IAAI,6CAPE,0CAGLwC,EAHK,KAGXtnB,KACMunB,EAJK,KAIXvnB,KAJW,SAcJonB,QAAQC,IAAI,CACpBxC,KAAMC,IAAI,0CACVD,KAAMC,IAAI,yDACVD,KAAMC,IAAI,uDAjBE,mCAWX9kB,EAXW,KAWXA,KACMwnB,EAZK,KAYXxnB,KACM2N,EAbK,KAaX3N,KAOH8lB,EAAU9lB,EAAKynB,WACfvB,EAAiBwB,YAAmBH,EAAc7Z,SAE5Cia,EAAKC,YAAqBN,IAC9B,GAASO,YAAqB7nB,EAAK8nB,oBAE/BC,EAASC,YAAyBra,EAAcsa,qBAChD,GAASC,YAAyBloB,EAAKmoB,QAEvCC,EAAWC,YAAgBV,EAAII,GACrCzW,EAAc8W,GAEd/B,EAAermB,EAAKynB,UAAU,GAAGnX,iBAE3BgY,EAAW,YAAI3a,EAAcsa,oBAAoBpT,UACjD0T,EAAYvoB,EAAKmoB,OAAOnoB,EAAKmoB,OAAO7mB,OAAS,GACnDgnB,EAASvM,KAAK,CACZ9L,UAAWsY,EAAUC,gBAAgBne,MAAM,KAAK,GAChDsF,YAAa4Y,EAAUE,mBACvBrY,OAAQmY,EAAUnY,OAClB9E,MAAO,UAET6a,EAAiBmC,GAEjBtC,EAAyBwB,GACzBjB,GAAW,GA7CG,kDA+CdrB,QAAQC,IAAR,MA/Cc,0DAAH,qDAmDThP,GAAmB3U,uBAAY,SAAC8J,GACpC,IAAKA,EAAO,OAAOlD,EAAqB,MACxCA,EAAqB,CAACkD,MAAOA,EAAMA,UAClC,IAEG0W,GAAsBxgB,uBAAY,SAACoK,EAAUN,GACjD,IAAKA,IAAUM,EAAU,OAAOxD,EAAqB,MACrDA,EAAqB,CAACwD,WAAUN,MAAOA,EAAMA,UAC5C,IAMH,OACE,kBAAC,IAAM4B,SAAP,KACE,yBAAK1N,UAAU,QACb,kBAACkpB,GAAA,EAAD,KACE,mFACA,0BACE/f,KAAK,QACLggB,QAAQ,8DAIZ,yBAAKnpB,UAAU,aACb,yBAAKA,UAAU,kBAAkBC,MAAO,CAACC,eAAgB,OAEtD4mB,GAAW,kBAAC,EAAD,MAEZ,yBAAK9mB,UAAU,WACb,4BACGkB,MAAMwP,KAAKF,MAAMO,YAAW6V,KACzB,GACAwC,YAAmBxC,IAExBE,IAAYE,GACX,yBAAKhnB,UAAU,aACZ8mB,GAAWU,GACXF,IAAa,yBAAKtnB,UAAU,eAGhC8mB,GAAWE,GAAeS,KAI9BT,GAAe,kBAAC,GAAD,MAEfhZ,GAAU,kBAAC,IAAD,CAAOxN,KAAMwN,EAAO,KAC9B5M,GAAc,kBAAC,IAAD,CAAWA,WAAYA,EAAU,KAC/CmlB,GACC,kBAAC,GAAD,CACEvY,OAAQA,EACRqb,SAAS,EACTpb,UAAWsY,EACXrY,MAAOuY,EACP9d,kBAAmBA,EACnBC,qBAAsBA,EACtB+N,iBAAkBA,GAClB6L,oBAAqBA,MAK3B,yBAAKxiB,UAAU,cACb,kBAAC,IAAM0N,SAAP,KACGoZ,GACC,kBAAC,IAAD,CACE/Y,QAAS,QACTC,OAAQA,EACRC,UAAWsY,EACXrY,MAAOuY,EACPtY,cAAeA,EACfxF,kBAAmBA,EACnBC,qBAAsBA,EACtBwF,OAAQA,GACRC,UAAWA,GACXvF,UAAWA,GACXwF,aAAcA,KAIlB,kBAAC,KAAD,CACEgb,QAzEI,CACdC,WAAY,mBAyEFlS,SAAU,gBAAET,EAAF,EAAEA,eAAF,OACRuQ,GAA4BvQ,KAG9B,6BACGxV,GACC,kBAAC,KAAD,CACEA,WACEA,EACE8P,IAAmB,OAACvI,QAAD,IAACA,OAAD,EAACA,EAAmBmD,QAAU,MAGrD4K,gBACExF,IAAmB,OAACvI,QAAD,IAACA,OAAD,EAACA,EAAmBmD,QAAU,KAEnD6K,iBAAkBA,GAClB3I,OAAQA,EACRI,OAAQA,GACRC,UAAWA,GACXuI,eAAgBsQ,UAQ7BJ,GAAW,kBAAC,IAAD,Q,mGCnPZ0C,GAAgB,SAACvlB,GAAD,MAAW,CAC/BhE,MAAO,CACLwpB,OAAQpZ,OAAOqZ,SAASC,WAAa1lB,EAAO,UAAY,MA6F5D,SAAS2lB,GAAT,GAA4C,EAA3B3L,OAA4B,IAApB4L,EAAmB,EAAnBA,MAAO3L,EAAY,EAAZA,UACxB4L,EAAgBtoB,iBAAO,MACtB1B,EAAKC,cAALD,EAWP,OATAY,aAAc,WACZqpB,aAAM,CACJC,QAASF,EAAcxnB,QACvB2nB,WAAY,QACZC,OAAQ,cACRrlB,SAAU,SAKZ,yBACE7E,UAAU,SACViF,IAAK6kB,EACLK,aAAc,WACZjM,GAAU,KAGX2L,EAAMxiB,KAAI,SAAC+iB,EAAMtmB,GAChB,OAA0B,IAAtBsmB,EAAKC,aAEL,kBAAC,IAAD,CACEpZ,GAAImZ,EAAKE,SACTvS,IAAKjU,EACLyM,QAAS,WACP2N,GAAU,KAGZ,0BArIQja,EAsIWmmB,EAAKE,SAtIVpqB,EAsIoBkqB,EAAKG,wBAtIL,CAC9CvqB,UAAU,YAAD,OAAcqQ,OAAOqZ,SAASC,WAAa1lB,EAAO,UAAY,IACvEhE,MAAO,CACLC,eAAe,GAAD,OAAKA,EAAL,QAqIDJ,EAAEsqB,EAAKI,eAKT,KA7IM,IAACvmB,EAAM/D,KAgJtB,yBAAKF,UAAU,yBAAyBC,MAAO,CAACC,eAAgB,OAC9D,4BAAKJ,EAAE,iCAMA2qB,OA1If,YAAiD,IAAhCZ,EAA+B,EAA/BA,MAAOa,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAAc,EAClBpqB,oBAAS,GADS,mBACvC0d,EADuC,KAC/BC,EAD+B,OAGVrH,YAAgB,cAAc,GAHpB,mBAG3B+T,GAH2B,WAK9CC,aAAkB5M,GAClB,IAAM6M,EAAaC,eAEnB,OACE,yBAAK/qB,UAAU,UACb,yBACEA,UAAU,cACVuQ,QAAS,WACPoa,GAAY,SAACK,GAAD,OAAeA,KAC3BJ,GAAc,KAGfF,EAAW,kBAAC,KAAD,CAAU1mB,MAAO,YAAgB,kBAAC,KAAD,OAE/C,yBAAKhE,UAAU,iBACb,kBAAC,IAAD,CACEiR,GAAG,IACHV,QAAS,WACP2N,GAAU,KAHd,UAMS,yCAIX,yBACEle,UAAU,eACVuQ,QAAS,WACP2N,GAAWD,IAEbyE,aAAc,WACRrS,OAAOC,WAAa,MACtB4N,GAAU,GACV6L,aAAM,CACJC,QAAS,qBACTiB,iBAAkB,CAAClB,KAAMmB,cAAe,GACxChB,OAAQ,gBACRrlB,SAAU,IACVD,MAAO,SAAUumB,EAAIrnB,GACnB,OAAW,IAAJA,GAETsnB,UAAW,YACXC,MAAM,OAKXP,EAAW5lB,MAAQ,KAAO,8BAAO+Y,EAAS,QAAU,QACpD6M,EAAW5lB,MAAQ,KAClB,kBAAC,IAAMwI,SAAP,KACE,8BACE,kBAAC,IAAD,CAAMuD,GAAG,KACP,kBAAC,KAAcuY,GAAc,QAGjC,8BACE,kBAAC,IAAD,CAAMvY,GAAG,iBACP,kBAAC,KAAeuY,GAAc,oBAGlC,8BACE,kBAAC,IAAD,CAAMvY,GAAG,aACP,kBAAC,KAAmBuY,GAAc,gBAGtC,8BACE,kBAAC,IAAD,CAAMvY,GAAG,eACP,kBAAC,KAAiBuY,GAAc,kBAGpC,8BACE,kBAAC,IAAD,CAAMvY,GAAG,UACP,kBAAC,KAAoBuY,GAAc,eAO5CvL,GAAU,kBAAC2L,GAAD,CAAQ3L,OAAQA,EAAQ4L,MAAOA,EAAO3L,UAAWA,MC1GnD,SAASoN,KAAe,IAC9B3B,EAAY4B,cAAZ5B,SAMP,OAJA/nB,qBAAU,WACRyO,OAAOmb,SAAS,EAAG,KAClB,CAAC7B,IAEG,K,WCOH8B,GAAWC,gBAAK,kBAAM,uDACtBC,GAAMD,gBAAK,kBAAM,iCACjBE,GAAYF,gBAAK,kBAAM,uDACvBG,GAAYH,gBAAK,kBAAM,wDACvBI,GAAQJ,gBAAK,kBAAM,wDAEnBK,GAAe,CACnB,WAAY,qBACZ,QAAS,MACT5iB,KAAM,2DACN6iB,cAAe,mBACf1O,IAAK,gCACL2O,MAAO,8CAyHMC,OAtHf,WAAgB,IACPpsB,EAAKC,cAALD,EAED+pB,EAAQ,CACZ,CACES,SAAU,IACVvgB,KAAMsc,GACNmE,YAAa,OACbD,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,gBACVvgB,KAAM6hB,GACNpB,YAAa1qB,EAAE,gBACfyqB,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,YACVvgB,KAAM0hB,GACNjB,YAAa1qB,EAAE,aACfyqB,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,cACVvgB,KAAM8hB,GACNrB,YAAa1qB,EAAE,cACfyqB,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,SACVvgB,KAAM4hB,GACNnB,YAAa1qB,EAAE,SACfyqB,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,oBACVvgB,KAAM+hB,GACNtB,YAAa1qB,EAAE,SACfyqB,wBAAyB,GACzBF,cAAc,IA5CL,EAgDmBxT,YAAgB,YAAY,GAhD/C,mBAgDN6T,EAhDM,KAgDIC,EAhDJ,OAiDQ9T,YAAgB,cAAc,GAA5CsV,EAjDM,oBA2Eb,OAxBAzrB,aAAc,WAEV2P,OAAO+b,YACP/b,OAAO+b,WAAW,gCAAgCC,UACjDF,EAEDxB,GAAY,IAEZta,OAAO+b,YACN/b,OAAO+b,WAAW,gCAAgCC,SAClDF,GAEDxB,GAAY,MAIhBhrB,IAAMiC,WAAU,WACV8oB,EACF1K,SAASsM,cAAc,QAAQ9L,UAAUG,IAAI,aAE7CX,SAASsM,cAAc,QAAQ9L,UAAUpY,OAAO,eAEjD,CAACsiB,IAGF,yBAAK1qB,UAAU,OACb,kBAACkpB,GAAA,EAAD,KACE,4BAAQnlB,KAAK,uBACV6T,KAAKK,UAAU8T,MAIpB,kBAAC,IAAD,KACE,kBAACT,GAAD,MACA,kBAAC,WAAD,CAAUiB,SAAU,yBAAKvsB,UAAU,UACjC,kBAAC,IAAD,CACEwsB,OAAQ,gBAAE9C,EAAF,EAAEA,SAAF,OACN,yBAAK1pB,UAAU,mBACb,kBAAC,GAAD,CACE6pB,MAAOA,EACPa,SAAUA,EACVC,YAAaA,IAEf,kBAAC,IAAD,CAAQjB,SAAUA,GACfG,EAAMxiB,KAAI,SAAC+iB,EAAMnY,GAChB,OACE,kBAAC,IAAD,CACEwa,OAAK,EACLxoB,KAAMmmB,EAAKE,SACXkC,OAAQ,gBAAEzL,EAAF,EAAEA,MAAF,OACN,kBAACqJ,EAAKrgB,KAAN,CAAWgO,IAAKgJ,EAAM2L,OAAOC,WAAa1a,KAE5C8F,IAAK9F,OAIX,kBAAC,IAAD,CAAUhB,GAAG,eC/HzB2b,GAAcC,QACW,cAA7Bxc,OAAOqZ,SAASoD,UAEe,UAA7Bzc,OAAOqZ,SAASoD,UAEhBzc,OAAOqZ,SAASoD,SAAS/L,MACvB,2DAsCN,SAASgM,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzH,MAAK,SAAA8H,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzhB,QACfohB,UAAUC,cAAcO,YAI1BhI,QAAQC,IACN,iHAKEsH,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB3H,QAAQC,IAAI,sCAGRsH,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B7H,OAAM,SAAAqI,GACLnI,QAAQmI,MAAM,4CAA6CA,M,qBCzFjE7d,EAASwc,OACP,kBAAC,WAAD,CAAUD,SAAU,IAClB,kBAAC,GAAD,OAEFvM,SAASC,eAAe,SDWnB,SAAkBgN,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIY,IAAIC,sBAAwB1d,OAAOqZ,SAASvpB,MACpD6tB,SAAW3d,OAAOqZ,SAASsE,OAIvC,OAGF3d,OAAO4d,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,sBAAN,sBAEPnB,KAgEV,SAAiCI,EAAOC,GAEtCiB,MAAMlB,EAAO,CACXmB,QAAS,CAAE,iBAAkB,YAE5B5I,MAAK,SAAA/H,GAEJ,IAAM4Q,EAAc5Q,EAAS2Q,QAAQ7I,IAAI,gBAEnB,MAApB9H,EAAS6Q,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CpB,UAAUC,cAAc/jB,MAAMmc,MAAK,SAAA8H,GACjCA,EAAakB,aAAahJ,MAAK,WAC7BlV,OAAOqZ,SAAS8E,eAKpBzB,GAAgBC,EAAOC,MAG1BzH,OAAM,WACLE,QAAQC,IACN,oEAvFA8I,CAAwBzB,EAAOC,GAI/BC,UAAUC,cAAc/jB,MAAMmc,MAAK,WACjCG,QAAQC,IACN,iHAMJoH,GAAgBC,EAAOC,OCjC/BE,I,glBCNMuB,EAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,OASKC,EAAe,SAACnS,GAC3B,OAAOxC,IAAYwC,EAAKoS,gBAGbC,EAAc,WACzB,OAAOC,YAAWC,YAAe,IAAIre,KAAQ,kBAGlCK,EAAa,SAACie,GACzB,IAAMC,EAAMD,EAAgBntB,MAAM,EAAG,GAC/BqtB,EAAQF,EAAgBntB,MAAM,EAAG,GACjCstB,EAAOH,EAAgBntB,MAAM,EAAG,IAChCutB,EAAOJ,EAAgBntB,MAAM,IACnC,MAAM,GAAN,OAAUstB,EAAV,YAAkBD,EAAlB,YAA2BD,EAA3B,YAAkCG,EAAlC,WAGWhG,EAAqB,SAAC4F,GACjC,IAAMC,EAAMD,EAAgBntB,MAAM,EAAG,GAC/BqtB,EAAQF,EAAgBntB,MAAM,EAAG,GACjCutB,EAAOJ,EAAgBntB,MAAM,IACnC,MAAM,GAAN,OAAUotB,EAAV,YAAiBP,EAAOQ,GAAxB,aAAmCE,EAAKvtB,MAAM,EAAG,GAAjD,SAuBWwmB,EAAuB,SAACjnB,GACnC,OArBkB,WAAgB,IAAfZ,EAAc,uDAAP,GACpB4C,EAAY,CAChB,iBACA,gBACA,iBACA,iBACA,gBACA,kBAEF,OAAO5C,EACJsP,QAAO,SAACnN,GAAD,OAAOS,EAAUisB,OAAM,SAACC,GAAD,OAAQ3sB,EAAE2sB,OAAQ3sB,EAAEM,QAClD6M,QAAO,SAACnN,GAAD,OAAOS,EAAUisB,OAAM,SAACC,GAAD,OAAQ5jB,OAAO/I,EAAE2sB,KAAQ,QACvDxf,QAAO,SAACnN,GAEP,IAAM4sB,EAAQV,IACR5rB,EAAOuN,YAAM7N,EAAEM,KAAM,UAAW,IAAIyN,KAAK,KAAM,EAAG,IACxD,OAAO8e,YAASvsB,EAAMssB,MAKnBE,CAAYruB,GAAYiG,KAAI,SAAC6D,EAAM+G,GAAP,MAAkB,CACnDhP,KAAMuN,YAAMtF,EAAKjI,KAAM,UAAW,IAAIyN,KAAK,KAAM,EAAG,IACpDgE,gBAAiBxJ,EAAKwJ,eACtBH,gBAAiBrJ,EAAKqJ,eACtBC,eAAgBtJ,EAAKsJ,cACrB5R,gBAAiBsI,EAAKtI,eACtBC,gBAAiBqI,EAAKrI,eACtBC,eAAgBoI,EAAKpI,cAErBwR,aACGpJ,EAAKwJ,gBAAkBxJ,EAAKqJ,gBAAkBrJ,EAAKsJ,cACtDjR,aACG2H,EAAKtI,gBAAkBsI,EAAKrI,gBAAkBqI,EAAKpI,mBAWnD,SAASuQ,EAAuBjS,EAAYsuB,GACjD,OAAOtuB,EAAWS,OAAO6tB,GAGpB,IAAMvuB,EAAe,SAACqW,GAC3B,IAAMmY,EAAkB,IAAIC,KAAKC,aAAa,SAC9C,OAAO3uB,MAAMsW,GAAS,IAAMmY,EAAgBhf,OAAO6G,IAGxC4Q,EAAuB,SAAC,GAOnC,IAP6D,IAAX5nB,EAAU,EAAxBsvB,aAC9BC,EAAkB9oB,OAAO2H,KAAKoL,KAAapS,QAAO,SAACC,EAAGmoB,GAE1D,OADAnoB,EAAEmoB,GAAK,GACAnoB,IACN,IAEG0nB,EAAQV,IAN8C,WAOnD/qB,GACP,IAAMb,EAAOuN,YAAMhQ,EAAKsD,GAAGb,KAAM,YAAa,IAAIyN,MAE9C8e,YAASvsB,EAAMssB,IACjBtoB,OAAO2L,QAAQmd,GAAiBrtB,SAAQ,YAAa,IAAD,mBAAVutB,EAAU,KAAPC,EAAO,KAC5CvD,EAAYsD,EAAEnP,cACdqP,EAAOD,EAAEA,EAAEpuB,OAAS,IAAM,GAE1Bc,GAAkBpC,EAAKsD,GAAG6oB,IAAc,EACxC9pB,GAAkBrC,EAAKsD,EAAI,GAAG6oB,IAAc,EAC5C7pB,GAAiBtC,EAAKsD,EAAI,GAAG6oB,IAAc,EAC3CjY,GAAkBlU,EAAKsD,GAAG6oB,IAAcwD,EAAKzb,gBAAkB,GAC/DH,GACH/T,EAAKsD,EAAI,GAAG6oB,IAAcwD,EAAK5b,gBAAkB,GAC9CC,GACHhU,EAAKsD,EAAI,GAAG6oB,IAAcwD,EAAK3b,eAAiB,GAEnD0b,EAAE3T,KAAK,CACLtZ,KAAMA,EACNL,eAAgBA,EAChBC,eAAgBA,EAChBC,cAAeA,EACf4R,eAAgBA,EAChBH,eAAgBA,EAChBC,cAAeA,EAEfF,YAAaI,EAAiBH,EAAiBC,EAC/CjR,YAAaX,EAAiBC,EAAiBC,QA3B9CgB,EAAI,EAAGA,EAAItD,EAAKsB,OAAQgC,GAAK,EAAI,EAAjCA,GAiCT,OAAOisB,GAGIvH,EAA2B,SAAChoB,GACvC,IAAM4vB,EAAgBnpB,OAAO2H,KAAKoL,KAAapS,QAAO,SAACyoB,EAAKC,GAE1D,OADAD,EAAIC,GAAM,GACHD,IACN,IAEGd,EAAQV,IAsBd,OArBAruB,EAAKkC,SAAQ,SAACC,GACZ,IAAMM,EAAOuN,YAAM7N,EAAE8N,UAAW,aAAc,IAAIC,MAC5CP,GAAexN,EAAEwN,YACjBwc,EAAYzb,IAAoBvO,EAAEmJ,OACxC,GAAI6gB,GAAa6C,YAASvsB,EAAMssB,IAAUpf,EAAa,CACrD,IACIogB,EADEC,EAAUJ,EAAczD,GAE9B,GAAI6D,EAAQ1uB,OAAQ,CAClB,IAAMquB,EAAOK,EAAQA,EAAQ1uB,OAAS,GACtCyuB,EACwC,IAAtCE,YAAiBxtB,EAAMktB,EAAKltB,MACxBkN,EAAcggB,EAAKhgB,YACnBugB,SACDH,EAAcG,IACrBF,EAAQjU,KAAK,CACXtZ,KAAMA,EACNkN,YAAaA,EACbogB,YAAaA,QAIZH,GAGI1H,EAA2B,SAACloB,GACvC,IAAM4vB,EAAgB,GAChBb,EAAQV,IA4Bd,OA3BAruB,EAAKkC,SAAQ,SAACC,GACZ,IAAMM,EAAOuN,YACX7N,EAAEqmB,gBAAgBne,MAAM,KAAK,GAC7B,aACA,IAAI6F,MAEAP,GAAexN,EAAEsmB,mBACvB,GAAIuG,YAASvsB,EAAMssB,IAAUpf,EAAa,CACxC,IAAIogB,EACJ,GAAIH,EAActuB,OAAQ,CACxB,IAAMquB,EAAOC,EAAcA,EAActuB,OAAS,GAC9C6uB,YAAU1tB,EAAMktB,EAAKltB,OACvBktB,EAAKI,aAAepgB,EAAcggB,EAAKhgB,YACvCggB,EAAKhgB,YAAcA,GAGjBogB,EADwC,IAAtCE,YAAiBxtB,EAAMktB,EAAKltB,MAChBkN,EAAcggB,EAAKhgB,YAChBugB,SAEhBH,EAAcG,IACrBN,EAAc7T,KAAK,CACjBtZ,KAAMA,EACNkN,YAAaA,EACbogB,YAAaA,QAIZH,GAGIvH,EAAkB,SAAC+H,EAAKC,GACnC,IAAMC,EAAQ7pB,OAAOC,OAAO,GAAI0pB,GADW,WAEhC9kB,GACL8kB,EAAIG,eAAejlB,KACrBglB,EAAMhlB,GAAS8kB,EAAI9kB,GAAOzE,KAAI,SAAC2pB,GAC7B,IAAMlI,EAAW+H,EAAI/kB,GAAOuD,MAAK,SAAC4hB,GAAD,OAAQN,YAAUK,EAAG/tB,KAAMguB,EAAGhuB,SAC/D,OAAO,aACLkN,YAAW,OAAE2Y,QAAF,IAAEA,OAAF,EAAEA,EAAU3Y,YACvBogB,YAAW,OAAEzH,QAAF,IAAEA,OAAF,EAAEA,EAAUyH,aACpBS,QAPX,IAAK,IAAMllB,KAAS8kB,EAAM,EAAf9kB,GAYX,OAAOglB,GAGI7O,EAAa,SAACpK,GACzB,MAAiB,kBAANA,EAAuB,GAC3BA,EAAEqZ,OAAO,GAAGtC,cAAgB/W,EAAEhW,MAAM,IAGhC0J,EAAgB,SAACsM,GAC5B,GAAiB,kBAANA,EAAgB,MAAO,GAElC,IADA,IAAMsZ,EAAMtZ,EAAEiJ,cAAcjW,MAAM,KACzB/G,EAAI,EAAGA,EAAIqtB,EAAIrvB,OAAQgC,IAC9BqtB,EAAIrtB,GAAKme,EAAWkP,EAAIrtB,IAE1B,OAAOqtB,EAAIzpB,KAAK,MAGLwa,EAAa,SAACrK,GACzB,OAAOA,EAAEhW,MAAM,EAAG,GAAKgW,EAAEhW,MAAM,GAAGkkB,QAAQ,YAAa,KAG5CmC,EAAqB,SAAC1nB,EAAMsL,GACvC,IAAMoC,EAAQ1N,EAAKoH,QAAO,SAACyoB,EAAK1tB,GAG9B,OAFA0tB,EAAI1tB,EAAEmJ,OAASukB,EAAI1tB,EAAEmJ,QAAU,GAC/BukB,EAAI1tB,EAAEmJ,OAAOnJ,EAAEyJ,UAAYzJ,EACpB0tB,IACN,IAIH,OAHAppB,OAAOoE,OAAO2O,KAAatX,SAAQ,SAACoJ,GAC7BoC,EAAMpC,KAAQoC,EAAMpC,GAAS,OAE7BA,EAAK,eAAKA,EAAQoC,EAAMpC,IAAUoC,I,gCCnQ3C,uEAIa2C,EACX,0BAAM7Q,UAAU,iBAAiBuQ,QAAS,SAACyS,GAAD,OAAOA,EAAEpW,oBACjD,kBAAC,IAAD,CACE+V,WAAS,SACTC,WAAS,gDACTE,aAAW,uBACXC,iBAAe,eAEjB,kBAAC,IAAD,CACE7W,GAAG,SACHmY,MAAM,MACNtgB,KAAK,OACLugB,OAAO,QACPC,WAAW,EACXC,YAAY,EACZC,eAAe,a","file":"static/js/main.ae9fd8c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nfunction Footer(props) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\r\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\r\n\r\n      <div className=\"link\">\r\n        <a\r\n          href=\"https://github.com/covid19india\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          covid19india\r\n        </a>\r\n      </div>\r\n\r\n      <a\r\n        href=\"https://github.com/covid19india/covid19india-react\"\r\n        className=\"button github\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <Icon.GitHub />\r\n        <span>Open Sourced on GitHub</span>\r\n      </a>\r\n\r\n      <a\r\n        className=\"button excel\"\r\n        href=\"http://patientdb.covid19india.org\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <Icon.Database />\r\n        <span>Crowdsourced Patient Database&nbsp;</span>\r\n      </a>\r\n\r\n      <a\r\n        href=\"https://twitter.com/covid19indiaorg\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"button twitter\"\r\n        style={{justifyContent: 'center'}}\r\n      >\r\n        <Icon.Twitter />\r\n        <span>View updates on Twitter</span>\r\n      </a>\r\n\r\n      <a\r\n        href=\"https://bit.ly/covid19crowd\"\r\n        className=\"button telegram\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <Icon.MessageCircle />\r\n        <span>Join Telegram to Collaborate!</span>\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default React.memo(Footer);\r\n","import {formatNumber} from '../utils/commonfunctions';\r\n\r\nimport React, {useState} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nfunction Level(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const {t} = useTranslation();\r\n\r\n  useEffectOnce(() => {\r\n    setData({\r\n      active: +props.data.active,\r\n      confirmed: +props.data.confirmed,\r\n      recovered: +props.data.recovered,\r\n      deaths: +props.data.deaths,\r\n      deltaconfirmed: +props.data.deltaconfirmed,\r\n      deltadeaths: +props.data.deltadeaths,\r\n      deltarecovered: +props.data.deltarecovered,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"Level\">\r\n      <div\r\n        className=\"level-item is-cherry fadeInUp\"\r\n        style={{animationDelay: '1s'}}\r\n      >\r\n        <h5>{t('Confirmed')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltaconfirmed)\r\n            ? ''\r\n            : data.deltaconfirmed > 0\r\n            ? '+' + formatNumber(data.deltaconfirmed)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1>{formatNumber(data.confirmed)} </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-blue fadeInUp\"\r\n        style={{animationDelay: '1.1s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Active')}</h5>\r\n        <h4>&nbsp;</h4>\r\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-green fadeInUp\"\r\n        style={{animationDelay: '1.2s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Recovered')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltarecovered)\r\n            ? ''\r\n            : data.deltarecovered > 0\r\n            ? '+' + formatNumber(data.deltarecovered)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-success\">\r\n          {formatNumber(data.recovered)}{' '}\r\n        </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-gray fadeInUp\"\r\n        style={{animationDelay: '1.3s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Deceased')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltadeaths)\r\n            ? ''\r\n            : data.deltadeaths > 0\r\n            ? '+' + formatNumber(data.deltadeaths)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Level);\r\n","import * as d3 from 'd3';\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\n\r\nfunction Minigraph({timeseries}) {\r\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n  const svgRef4 = useRef();\r\n\r\n  useEffect(() => {\r\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\r\n  }, [timeseries]);\r\n\r\n  const graphData = useCallback((data) => {\r\n    if (data.length <= 1) return 0;\r\n\r\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\r\n    const chartRight = 100 - margin.right;\r\n    const chartBottom = 100 - margin.bottom;\r\n\r\n    const svg1 = d3.select(svgRef1.current);\r\n    const svg2 = d3.select(svgRef2.current);\r\n    const svg3 = d3.select(svgRef3.current);\r\n    const svg4 = d3.select(svgRef4.current);\r\n\r\n    data.forEach((d) => {\r\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\r\n    });\r\n\r\n    const xScale = d3\r\n      .scaleTime()\r\n      .domain(d3.extent(data, (d) => d.date))\r\n      .range([margin.left, chartRight]);\r\n\r\n    const svgArray = [svg1, svg2, svg3, svg4];\r\n    const dataTypes = [\r\n      'dailyconfirmed',\r\n      'dailyactive',\r\n      'dailyrecovered',\r\n      'dailydeceased',\r\n    ];\r\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\r\n\r\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\r\n    const dailyMax = d3.max(data, (d) =>\r\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\r\n    );\r\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([-domainMinMax, domainMinMax])\r\n      .range([chartBottom, margin.top]);\r\n\r\n    svgArray.forEach((svg, i) => {\r\n      const type = dataTypes[i];\r\n      const color = colors[i];\r\n\r\n      const path = svg\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', color + '99')\r\n        .attr('stroke-width', 2.5)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => xScale(d.date))\r\n            .y((d) => yScale(d[type]))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength = path.node().getTotalLength();\r\n      path\r\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\r\n        .attr('stroke-dashoffset', totalLength)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', color)\r\n        .attr('stroke', color)\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => xScale(d.date))\r\n        .attr('cy', (d) => yScale(d[type]))\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphData(timeSeriesData);\r\n  }, [timeSeriesData, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\r\n        <svg\r\n          ref={svgRef1}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{animationDelay: '1.5s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef2}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-green fadeInUp\"\r\n        style={{animationDelay: '1.6s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef3}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-gray fadeInUp\"\r\n        style={{animationDelay: '1.7s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef4}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Minigraph);\r\n","/* Source: https://observablehq.com/@d3/color-legend */\r\n\r\nimport * as d3 from 'd3';\r\n\r\nfunction legend({\r\n  color,\r\n  title,\r\n  tickSize = 6,\r\n  width = 320,\r\n  height = 44 + tickSize,\r\n  marginTop = 18,\r\n  marginRight = 0,\r\n  marginBottom = 16 + tickSize,\r\n  marginLeft = 0,\r\n  svg,\r\n  ticks = width / 64,\r\n  tickFormat,\r\n  tickValues,\r\n  ordinalWeights,\r\n} = {}) {\r\n  if (!svg)\r\n    svg = d3\r\n      .create('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .attr('viewBox', [0, 0, width, height])\r\n      .style('overflow', 'visible')\r\n      .style('display', 'block');\r\n\r\n  const t = svg.transition().duration(500);\r\n\r\n  let tickAdjust = (g) => {\r\n    const ticks = g.selectAll('.tick line');\r\n    ticks.attr('y1', marginTop + marginBottom - height);\r\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\r\n  };\r\n  let x;\r\n\r\n  // Continuous\r\n  if (color.interpolate) {\r\n    const n = Math.min(color.domain().length, color.range().length);\r\n\r\n    x = color\r\n      .copy()\r\n      .rangeRound(\r\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\r\n      );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr(\r\n        'xlink:href',\r\n        ramp(\r\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\r\n        ).toDataURL()\r\n      );\r\n  }\r\n\r\n  // Sequential\r\n  else if (color.interpolator) {\r\n    svg.selectAll('rect').transition(t).attr('opacity', 0);\r\n\r\n    x = Object.assign(\r\n      color\r\n        .copy()\r\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\r\n      {\r\n        range() {\r\n          return [marginLeft, width - marginRight];\r\n        },\r\n      }\r\n    );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\r\n      .transition(t)\r\n      .attr('opacity', 1);\r\n\r\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\r\n    if (!x.ticks) {\r\n      if (tickValues === undefined) {\r\n        const n = Math.round(ticks + 1);\r\n        tickValues = d3\r\n          .range(n)\r\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\r\n      }\r\n      if (typeof tickFormat !== 'function') {\r\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Threshold\r\n  else if (color.invertExtent) {\r\n    const thresholds = color.thresholds\r\n      ? color.thresholds() // scaleQuantize\r\n      : color.quantiles\r\n      ? color.quantiles() // scaleQuantile\r\n      : color.domain(); // scaleThreshold\r\n\r\n    const thresholdFormat =\r\n      tickFormat === undefined\r\n        ? (d) => d\r\n        : typeof tickFormat === 'string'\r\n        ? d3.format(tickFormat)\r\n        : tickFormat;\r\n\r\n    x = d3\r\n      .scaleLinear()\r\n      .domain([-1, color.range().length - 1])\r\n      .rangeRound([marginLeft, width - marginRight]);\r\n\r\n    svg\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data(color.range())\r\n      .join('rect')\r\n      .attr('x', (d, i) => x(i - 1))\r\n      .attr('y', marginTop)\r\n      .attr('width', (d, i) => x(i) - x(i - 1))\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('fill', (d) => d);\r\n\r\n    tickValues = d3.range(-1, thresholds.length);\r\n    tickFormat = (i) => {\r\n      if (i === -1) return thresholdFormat(1);\r\n      else if (i === thresholds.length - 1) return;\r\n      else if (i === thresholds.length - 2)\r\n        return thresholdFormat(thresholds[i] + '+', i);\r\n      return thresholdFormat(thresholds[i], i);\r\n    };\r\n  }\r\n\r\n  // Ordinal\r\n  else {\r\n    svg\r\n      .select('.ramp')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .attr('xlink:href', null);\r\n    if (!ordinalWeights) {\r\n      x = d3\r\n        .scaleBand()\r\n        .domain(color.domain())\r\n        .rangeRound([marginLeft, width - marginRight]);\r\n      svg\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join('rect')\r\n        .attr('x', x)\r\n        .attr('y', marginTop)\r\n        .attr('width', Math.max(0, x.bandwidth() - 1))\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color);\r\n    } else {\r\n      const widthScale = d3\r\n        .scaleLinear()\r\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\r\n        .rangeRound([0, width - marginLeft - marginRight]);\r\n\r\n      const xPos = ordinalWeights.map((w, i) =>\r\n        ordinalWeights\r\n          .slice(0, i)\r\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\r\n      );\r\n\r\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\r\n\r\n      svg\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join((enter) =>\r\n          enter\r\n            .append('rect')\r\n            .attr('x', x)\r\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        )\r\n        .attr('y', marginTop)\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color)\r\n        .transition(t)\r\n        .attr('x', x)\r\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        .attr('opacity', 1);\r\n    }\r\n\r\n    tickAdjust = () => {};\r\n  }\r\n\r\n  svg\r\n    .select('.axis')\r\n    .attr('transform', `translate(0,${height - marginBottom})`)\r\n    .transition(t)\r\n    .attr('class', 'axis')\r\n    .call(\r\n      d3\r\n        .axisBottom(x)\r\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\r\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\r\n        .tickSize(tickSize)\r\n        .tickValues(tickValues)\r\n    )\r\n    .on('start', () => {\r\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\r\n    })\r\n    .call((g) =>\r\n      g\r\n        .select('.axistext')\r\n        .attr('class', 'axistext')\r\n        .attr('x', marginLeft)\r\n        .attr('y', marginTop + marginBottom - height - 6)\r\n        .attr('fill', 'currentColor')\r\n        .attr('text-anchor', 'start')\r\n        .attr('font-weight', 'bold')\r\n        .text(title)\r\n    );\r\n\r\n  return svg.node();\r\n}\r\n\r\nfunction ramp(color, n = 256) {\r\n  // const canvas = document.createElement('canvas');\r\n  const canvas = d3.select('.color-scale').node();\r\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\r\n    '2d'\r\n  );\r\n  for (let i = 0; i < n; ++i) {\r\n    context.fillStyle = color(i / (n - 1));\r\n    context.fillRect(i, 0, 1, 1);\r\n  }\r\n  return canvas;\r\n}\r\n\r\nexport default legend;\r\n","import legend from './legend';\r\n\r\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\r\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\r\n\r\nimport * as d3 from 'd3';\r\nimport React, {useCallback, useEffect, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport * as topojson from 'topojson';\r\n\r\nfunction ChoroplethMap({\r\n  statistic,\r\n  mapData,\r\n  currentMap,\r\n  changeMap,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  isCountryLoaded,\r\n  mapOption,\r\n}) {\r\n  const choroplethMap = useRef(null);\r\n  const choroplethLegend = useRef(null);\r\n\r\n  const mapMeta = MAP_META[currentMap.name];\r\n\r\n  const ready = useCallback(\r\n    (geoData) => {\r\n      const svg = d3.select(choroplethMap.current);\r\n\r\n      const topologyStates =\r\n        mapMeta.mapType === MAP_TYPES.COUNTRY\r\n          ? topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectStates]\r\n            )\r\n          : {features: []};\r\n      const topologyDistricts =\r\n        currentMap.view === MAP_VIEWS.DISTRICTS\r\n          ? topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectDistricts]\r\n            )\r\n          : {features: []};\r\n\r\n      const topology =\r\n        currentMap.view === MAP_VIEWS.STATES\r\n          ? topologyStates\r\n          : topologyDistricts;\r\n\r\n      const projection = d3.geoMercator();\r\n\r\n      // Set size of the map\r\n      let path;\r\n      let width;\r\n      let height;\r\n      if (!svg.attr('viewBox')) {\r\n        const widthStyle = parseInt(svg.style('width'));\r\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\r\n        else {\r\n          const heightStyle = parseInt(svg.style('height'));\r\n          projection.fitSize([widthStyle, heightStyle], topology);\r\n        }\r\n        path = d3.geoPath(projection);\r\n        const bBox = path.bounds(topology);\r\n        width = +bBox[1][0];\r\n        height = +bBox[1][1];\r\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\r\n      }\r\n      const bBox = svg.attr('viewBox').split(' ');\r\n      width = +bBox[2];\r\n      height = +bBox[3];\r\n      projection.fitSize([width, height], topology);\r\n      path = d3.geoPath(projection);\r\n\r\n      /* Legend */\r\n      const svgLegend = d3.select(choroplethLegend.current);\r\n      const widthLegend = parseInt(svgLegend.style('width'));\r\n      const heightLegend = +svgLegend.attr('height');\r\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\r\n\r\n      // Colorbar\r\n      let colorScale;\r\n      if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n        colorScale = d3.scaleOrdinal(\r\n          ['Red', 'Orange', 'Green'],\r\n          ['#d73027', '#fee08b', '#66bd63']\r\n        );\r\n\r\n        svgLegend.call(() =>\r\n          legend({\r\n            color: colorScale,\r\n            width: widthLegend,\r\n            height: heightLegend,\r\n            tickValues: [],\r\n            marginLeft: 2,\r\n            marginRight: 20,\r\n            svg: svgLegend,\r\n            ordinalWeights: Object.values(statistic),\r\n          })\r\n        );\r\n      } else {\r\n        const colorInterpolator = (t) => {\r\n          switch (mapOption) {\r\n            case 'confirmed':\r\n              return d3.interpolateReds(t * 0.85);\r\n            case 'active':\r\n              return d3.interpolateBlues(t * 0.85);\r\n            case 'recovered':\r\n              return d3.interpolateGreens(t * 0.85);\r\n            case 'deceased':\r\n              return d3.interpolateGreys(t * 0.85);\r\n            default:\r\n              return;\r\n          }\r\n        };\r\n        colorScale = d3\r\n          .scaleSequential(\r\n            [0, Math.max(1, statistic[mapOption].max)],\r\n            colorInterpolator\r\n          )\r\n          .clamp(true);\r\n        svgLegend.call(() =>\r\n          legend({\r\n            color: colorScale,\r\n            title:\r\n              capitalizeAll(mapOption) +\r\n              (currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? ' cases per million'\r\n                : ' cases'),\r\n            width: widthLegend,\r\n            height: heightLegend,\r\n            ticks: 6,\r\n            tickFormat: function (d, i, n) {\r\n              if (\r\n                currentMap.stat === MAP_STATISTICS.TOTAL &&\r\n                !Number.isInteger(d)\r\n              )\r\n                return;\r\n              if (i === n.length - 1) return formatNumber(d) + '+';\r\n              return formatNumber(d);\r\n            },\r\n            marginLeft: 2,\r\n            marginRight: 20,\r\n            svg: svgLegend,\r\n          })\r\n        );\r\n      }\r\n      svgLegend.attr(\r\n        'class',\r\n        currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\r\n      );\r\n\r\n      // Add id to each feature\r\n      const featureStates = topologyStates.features.map((f) => {\r\n        const state = f.properties.st_nm;\r\n        const obj = Object.assign({}, f);\r\n        obj.id = `${mapMeta.graphObjectStates}-${state}`;\r\n        return obj;\r\n      });\r\n\r\n      // Add id to each feature\r\n      const featureDistricts = topologyDistricts.features.map((f) => {\r\n        const district = f.properties.district;\r\n        const state = f.properties.st_nm;\r\n        const obj = Object.assign({}, f);\r\n        obj.id = `${mapMeta.graphObjectDistricts}-${state}${district}`;\r\n        return obj;\r\n      });\r\n\r\n      /* Draw map */\r\n      const t = svg.transition().duration(500);\r\n      let onceTouchedRegion = null;\r\n      const regionSelection = svg\r\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.states' : '.districts')\r\n        .selectAll('path')\r\n        .data(\r\n          currentMap.view === MAP_VIEWS.STATES\r\n            ? featureStates\r\n            : featureDistricts,\r\n          (d) => d.id\r\n        )\r\n        .join((enter) => {\r\n          const sel = enter.append('path').attr('d', path);\r\n          sel.append('title');\r\n          return sel;\r\n        })\r\n        .attr('class', function (d) {\r\n          const isHovered = d3.select(this).classed('map-hover');\r\n          return `path-region ${mapOption} ${isHovered ? 'map-hover' : ''}`;\r\n        })\r\n        .style('cursor', 'pointer')\r\n        .on('mouseenter', function (d) {\r\n          const region = {state: d.properties.st_nm};\r\n          if (d.properties.district) region.district = d.properties.district;\r\n          setRegionHighlighted(region);\r\n        })\r\n        .on('mouseleave', (d) => {\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n        })\r\n        .on('touchstart', (d) => {\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n          else onceTouchedRegion = d;\r\n        })\r\n        .on('click', handleClick)\r\n        .attr('pointer-events', 'none');\r\n\r\n      regionSelection.select('title').text(function (d) {\r\n        if (currentMap.stat === MAP_STATISTICS.TOTAL) {\r\n          const state = d.properties.st_nm;\r\n          const district = d.properties.district;\r\n          let n;\r\n          if (district)\r\n            n =\r\n              mapData[state] && mapData[state][district]\r\n                ? mapData[state][district][mapOption]\r\n                : 0;\r\n          else n = mapData[state] ? mapData[state][mapOption] : 0;\r\n          return (\r\n            Number(\r\n              parseFloat(\r\n                100 * (n / (statistic[mapOption].total || 0.001))\r\n              ).toFixed(2)\r\n            ).toString() +\r\n            '% from ' +\r\n            capitalizeAll(district ? district : state)\r\n          );\r\n        }\r\n      });\r\n\r\n      regionSelection\r\n        .transition(t)\r\n        .attr('fill', function (d) {\r\n          let n;\r\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n            const state = d.properties.st_nm;\r\n            const district = d.properties.district;\r\n            n =\r\n              mapData[state] && mapData[state][district]\r\n                ? mapData[state][district]\r\n                : 0;\r\n          } else {\r\n            const state = d.properties.st_nm;\r\n            const district = d.properties.district;\r\n            if (district)\r\n              n =\r\n                mapData[state] && mapData[state][district]\r\n                  ? mapData[state][district][mapOption]\r\n                  : 0;\r\n            else n = mapData[state] ? mapData[state][mapOption] : 0;\r\n          }\r\n          const color = n === 0 ? '#ffffff00' : colorScale(n);\r\n          return color;\r\n        })\r\n        .attr('stroke', function () {\r\n          const isHovered = d3.select(this).classed('map-hover');\r\n          if (isHovered) this.parentNode.appendChild(this);\r\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n            return isHovered ? '#343a40' : null;\r\n          } else {\r\n            return isHovered\r\n              ? `${\r\n                  mapOption === 'confirmed'\r\n                    ? '#ff073a'\r\n                    : mapOption === 'active'\r\n                    ? '#007bff'\r\n                    : mapOption === 'recovered'\r\n                    ? '#28a745'\r\n                    : mapOption === 'deceased'\r\n                    ? '#6c757d'\r\n                    : ''\r\n                }`\r\n              : null;\r\n          }\r\n        })\r\n        .transition()\r\n        .attr('pointer-events', 'all');\r\n\r\n      svg\r\n        .transition()\r\n        .duration(mapMeta.mapType === MAP_TYPES.STATE ? 250 : 0)\r\n        .on('end', () =>\r\n          svg.attr(\r\n            'class',\r\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : ''\r\n          )\r\n        );\r\n\r\n      let meshStates = [];\r\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        meshStates = [\r\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\r\n        ];\r\n        meshStates[0].id = mapMeta.graphObjectStates;\r\n      }\r\n      let meshDistricts = [];\r\n      if (currentMap.view === MAP_VIEWS.DISTRICTS) {\r\n        // Add id to mesh\r\n        meshDistricts = [\r\n          topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\r\n        ];\r\n        meshDistricts[0].id = mapMeta.graphObjectDistricts;\r\n      }\r\n      svg\r\n        .select(\r\n          currentMap.view === MAP_VIEWS.STATES\r\n            ? '.state-borders'\r\n            : '.district-borders'\r\n        )\r\n        .selectAll('path')\r\n        .data(\r\n          currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\r\n          (d) => d.id\r\n        )\r\n        .join((enter) =>\r\n          enter\r\n            .append('path')\r\n            .attr('d', path)\r\n            .attr('stroke-width', width / 250)\r\n        )\r\n        .attr('fill', 'none')\r\n        .transition(t)\r\n        .attr('stroke-width', function () {\r\n          return mapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n            currentMap.view === MAP_VIEWS.DISTRICTS\r\n            ? 0\r\n            : width / 250;\r\n        })\r\n        .attr('stroke', function () {\r\n          if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n            return '#00000060';\r\n          } else {\r\n            return `${\r\n              mapOption === 'confirmed'\r\n                ? '#ff073a30'\r\n                : mapOption === 'active'\r\n                ? '#007bff30'\r\n                : mapOption === 'recovered'\r\n                ? '#28a74530'\r\n                : mapOption === 'deceased'\r\n                ? '#6c757d30'\r\n                : ''\r\n            }`;\r\n          }\r\n        });\r\n\r\n      svg\r\n        .select(currentMap.view === MAP_VIEWS.STATES ? '.districts' : '.states')\r\n        .selectAll('path')\r\n        .data(\r\n          currentMap.view === MAP_VIEWS.STATES\r\n            ? featureDistricts\r\n            : featureStates,\r\n          (d) => d.id\r\n        )\r\n        .join((enter) => enter.append('path').attr('d', path))\r\n        .attr('class', 'path-region')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', 'none')\r\n        .attr('pointer-events', 'none');\r\n\r\n      svg\r\n        .select(\r\n          currentMap.view === MAP_VIEWS.STATES\r\n            ? '.district-borders'\r\n            : '.state-borders'\r\n        )\r\n        .selectAll('path')\r\n        .data(\r\n          currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\r\n          (d) => d.id\r\n        )\r\n        .join((enter) => enter.append('path').attr('d', path))\r\n        .attr('fill', 'none')\r\n        .transition(t)\r\n        .attr('stroke-width', width / 250)\r\n        .attr('stroke', '#343a4099');\r\n\r\n      function handleClick(d) {\r\n        d3.event.stopPropagation();\r\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\r\n        // Disable pointer events till the new map is rendered\r\n        svg.attr('pointer-events', 'none');\r\n        svg.selectAll('.path-region').attr('pointer-events', 'none');\r\n        // Switch map\r\n        changeMap(d.properties.st_nm);\r\n      }\r\n\r\n      // Reset on tapping outside map\r\n      svg.attr('pointer-events', 'auto').on('click', () => {\r\n        if (mapMeta.mapType !== MAP_TYPES.STATE) {\r\n          setRegionHighlighted({\r\n            state: 'Total',\r\n          });\r\n        }\r\n      });\r\n    },\r\n    [\r\n      mapMeta,\r\n      currentMap.stat,\r\n      currentMap.view,\r\n      statistic,\r\n      mapOption,\r\n      isCountryLoaded,\r\n      mapData,\r\n      setRegionHighlighted,\r\n      changeMap,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await d3.json(mapMeta.geoDataFile);\r\n      if (statistic && choroplethMap.current) {\r\n        ready(data);\r\n      }\r\n    })();\r\n  }, [mapMeta, statistic, ready]);\r\n\r\n  useEffect(() => {\r\n    const highlightRegionInMap = (region) => {\r\n      const paths = d3.selectAll('.path-region');\r\n      paths.attr('stroke', null);\r\n      paths.classed('map-hover', (d, i, nodes) => {\r\n        if (\r\n          region.district === d.properties?.district &&\r\n          region.state === d.properties.st_nm\r\n        ) {\r\n          nodes[i].parentNode.appendChild(nodes[i]);\r\n          d3.select(nodes[i]).attr('stroke', function (d) {\r\n            if (currentMap.stat === MAP_STATISTICS.ZONE) return '#343a40';\r\n            return d3.select(this).classed('confirmed')\r\n              ? '#ff073a'\r\n              : d3.select(this).classed('active')\r\n              ? '#007bff'\r\n              : d3.select(this).classed('recovered')\r\n              ? '#28a745'\r\n              : d3.select(this).classed('deceased')\r\n              ? '#6c757d'\r\n              : null;\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    };\r\n    highlightRegionInMap(regionHighlighted);\r\n  }, [regionHighlighted, currentMap.stat]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\r\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={choroplethMap}>\r\n          <g className=\"states\" />\r\n          <g className=\"districts\" />\r\n          <g className=\"state-borders\" />\r\n          <g className=\"district-borders\" />\r\n        </svg>\r\n        {mapMeta.mapType === MAP_TYPES.STATE &&\r\n        mapData[currentMap.name]?.Unknown &&\r\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\r\n          <div className=\"disclaimer\">\r\n            <Icon.AlertCircle />\r\n            {`District-wise ${mapOption} numbers are under reconciliation`}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"svg-parent legend fadeInUp\"\r\n        style={{animationDelay: '2.5s'}}\r\n      >\r\n        <svg\r\n          id=\"legend\"\r\n          height=\"50\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n          ref={choroplethLegend}\r\n        >\r\n          <image className=\"ramp\" />\r\n          <g className=\"axis\">\r\n            <text className=\"axistext\" />\r\n          </g>\r\n        </svg>\r\n        <canvas\r\n          className=\"color-scale\"\r\n          style={{position: 'absolute', height: 0}}\r\n        />\r\n      </div>\r\n      <svg style={{position: 'absolute', height: 0}}>\r\n        <defs>\r\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\r\n            <feColorMatrix\r\n              type=\"matrix\"\r\n              values=\"0.91372549 0 0 0 0.08627451 0 0.91372549 0 0 0.08627451 0 0 0.854901961 0 0.145098039 0 0 0 1 0\"\r\n            />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n","import ChoroplethMap from './choropleth';\r\nimport {testedToolTip} from './tooltips';\r\n\r\nimport {\r\n  MAP_META,\r\n  MAP_STATISTICS,\r\n  MAP_TYPES,\r\n  MAP_VIEWS,\r\n  STATE_CODES_REVERSE,\r\n  STATE_POPULATIONS,\r\n} from '../constants';\r\nimport {formatDate, formatNumber} from '../utils/commonfunctions';\r\n\r\nimport {formatDistance, format, parse} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.anchor, currProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst getRegionFromState = (state) => {\r\n  if (!state) return;\r\n  const region = {...state};\r\n  return region;\r\n};\r\n\r\nconst getRegionFromDistrict = (districtData, name) => {\r\n  if (!districtData) return;\r\n  const region = {...districtData};\r\n  return region;\r\n};\r\n\r\nfunction MapExplorer({\r\n  mapName,\r\n  states,\r\n  districts,\r\n  zones,\r\n  stateTestData,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  anchor,\r\n  setAnchor,\r\n  mapOption,\r\n  setMapOption,\r\n  isCountryLoaded = true,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [currentMap, setCurrentMap] = useState({\r\n    name: mapName,\r\n    stat: MAP_STATISTICS.TOTAL,\r\n    view:\r\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\r\n        ? MAP_VIEWS.STATES\r\n        : MAP_VIEWS.DISTRICTS,\r\n  });\r\n  const currentMapMeta = MAP_META[currentMap.name];\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    let currentMapData = {};\r\n    let statistic = {};\r\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n      const dataTypes = ['Red', 'Orange', 'Green'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = 0;\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\r\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc2[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc2;\r\n          }, {});\r\n          return acc1;\r\n        }, {});\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const state = currentMap.name;\r\n        currentMapData[state] = Object.keys(zones[state]).reduce(\r\n          (acc, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n      }\r\n    } else {\r\n      const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = {total: 0, max: 0};\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        currentMapData = states.reduce((acc, state) => {\r\n          acc[state.state] = {};\r\n          dataTypes.forEach((dtype) => {\r\n            let typeCount = parseInt(\r\n              state[dtype !== 'deceased' ? dtype : 'deaths']\r\n            );\r\n            if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\r\n              typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\r\n            if (state.state !== 'Total') {\r\n              statistic[dtype].total += typeCount;\r\n              if (typeCount > statistic[dtype].max) {\r\n                statistic[dtype].max = typeCount;\r\n              }\r\n            }\r\n            acc[state.state][dtype] = typeCount;\r\n          });\r\n          return acc;\r\n        }, {});\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const districtWiseData = (\r\n          districts[currentMap.name] || {districtData: {}}\r\n        ).districtData;\r\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\r\n          (acc, district) => {\r\n            acc[district] = {};\r\n            dataTypes.forEach((dtype) => {\r\n              const typeCount = parseInt(districtWiseData[district][dtype]);\r\n              statistic[dtype].total += typeCount;\r\n              if (typeCount > statistic[dtype].max) {\r\n                statistic[dtype].max = typeCount;\r\n              }\r\n              acc[district][dtype] = typeCount;\r\n            });\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n        currentMapData[currentMap.name].Total = states.find(\r\n          (state) => currentMap.name === state.state\r\n        );\r\n      }\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [\r\n    currentMap.name,\r\n    currentMap.stat,\r\n    currentMapMeta.mapType,\r\n    districts,\r\n    zones,\r\n    states,\r\n  ]);\r\n\r\n  const [hoveredRegion, panelRegion] = useMemo(() => {\r\n    if (!regionHighlighted.district) {\r\n      const state = getRegionFromState(\r\n        states.find((state) => regionHighlighted.state === state.state)\r\n      );\r\n      return [state, state];\r\n    } else {\r\n      const stateDistrictObj = districts[regionHighlighted.state] || {\r\n        districtData: {},\r\n      };\r\n      const districtData = stateDistrictObj.districtData[\r\n        regionHighlighted.district\r\n      ] || {\r\n        confirmed: 0,\r\n        active: 0,\r\n        recovered: 0,\r\n        deaths: 0,\r\n      };\r\n      const district = getRegionFromDistrict(\r\n        districtData,\r\n        regionHighlighted.district\r\n      );\r\n      let state = getRegionFromState(\r\n        states.find((state) => state.state === regionHighlighted.state)\r\n      );\r\n      district.district = regionHighlighted.district;\r\n      district.state = state.state;\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n        state = states.find((state) => state.state === 'Total');\r\n      return [district, state];\r\n    }\r\n  }, [states, districts, currentMapMeta.mapType, regionHighlighted]);\r\n\r\n  useEffect(() => {\r\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\r\n\r\n    if ('district' in regionHighlighted) {\r\n      if (\r\n        currentMap.name !== regionHighlighted.state &&\r\n        !(\r\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n          currentMap.view === MAP_VIEWS.DISTRICTS\r\n        )\r\n      ) {\r\n        const state = regionHighlighted.state;\r\n        const newMapMeta = MAP_META[state];\r\n        if (!newMapMeta) {\r\n          return;\r\n        }\r\n        setCurrentMap({\r\n          name: state,\r\n          view: MAP_VIEWS.DISTRICTS,\r\n          stat:\r\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n              ? MAP_STATISTICS.TOTAL\r\n              : currentMap.stat,\r\n        });\r\n      }\r\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n      setCurrentMap({\r\n        name: 'India',\r\n        view:\r\n          currentMap.stat === MAP_STATISTICS.ZONE\r\n            ? MAP_VIEWS.DISTRICTS\r\n            : MAP_VIEWS.STATES,\r\n        stat: currentMap.stat,\r\n      });\r\n    }\r\n  }, [isCountryLoaded, regionHighlighted, currentMap, currentMapMeta.mapType]);\r\n\r\n  const switchMapToState = useCallback(\r\n    (state) => {\r\n      const newMapMeta = MAP_META[state];\r\n      if (!newMapMeta) {\r\n        return;\r\n      }\r\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const {districtData} = districts[state] || {\r\n          districtData: {},\r\n        };\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((state) => state !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setRegionHighlighted({\r\n            district: topDistrict,\r\n            state: state,\r\n          });\r\n          setCurrentMap({\r\n            name: state,\r\n            view: MAP_VIEWS.DISTRICTS,\r\n            stat:\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? MAP_STATISTICS.TOTAL\r\n                : currentMap.stat,\r\n          });\r\n        });\r\n      } else {\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setCurrentMap({\r\n            name: 'India',\r\n            view:\r\n              currentMap.stat === MAP_STATISTICS.ZONE\r\n                ? MAP_VIEWS.DISTRICTS\r\n                : MAP_VIEWS.STATES,\r\n            stat: currentMap.stat,\r\n          });\r\n          setRegionHighlighted({\r\n            state: 'Total',\r\n          });\r\n        });\r\n      }\r\n    },\r\n    [currentMap.stat, districts, setRegionHighlighted]\r\n  );\r\n\r\n  const testObj = useMemo(\r\n    () =>\r\n      stateTestData.find(\r\n        (obj) => obj.state === panelRegion.state && obj.totaltested !== ''\r\n      ),\r\n    [stateTestData, panelRegion]\r\n  );\r\n\r\n  let hoveredRegionCount;\r\n  let hoveredRegionZone;\r\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\r\n    const data =\r\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\r\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\r\n        : hoveredRegion.state !== currentMap.name\r\n        ? currentMapData[hoveredRegion.state]\r\n        : currentMapData[hoveredRegion.state].Total;\r\n    hoveredRegionCount = data\r\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\r\n        : data[mapOption]\r\n      : 0;\r\n  } else {\r\n    hoveredRegionZone =\r\n      zones[hoveredRegion.state] &&\r\n      zones[hoveredRegion.state][hoveredRegion.district]\r\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\r\n        : '';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`MapExplorer fadeInUp ${\r\n        anchor === 'mapexplorer' ? 'stickied' : ''\r\n      }`}\r\n      style={{\r\n        animationDelay: '1.5s',\r\n        display: anchor === 'timeseries' ? 'none' : '',\r\n      }}\r\n    >\r\n      {window.innerWidth > 769 && (\r\n        <div\r\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\r\n          onClick={() => {\r\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\r\n          }}\r\n        >\r\n          <Icon.Anchor />\r\n        </div>\r\n      )}\r\n      <div className=\"header\">\r\n        <h1>\r\n          {t(currentMap.name)} {t('Map')}\r\n        </h1>\r\n        <h6>\r\n          {window.innerWidth <= 769 ? t('Tap') : t('Hover')} over a{' '}\r\n          {currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n            ? t('state/UT')\r\n            : t('district')}{' '}\r\n          {t('for more details')}\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div\r\n          className={`stats fadeInUp ${\r\n            mapOption === 'confirmed' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2s'}}\r\n          onClick={() => setMapOption('confirmed')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Cnfmd') : t('Confirmed')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-blue fadeInUp ${\r\n            mapOption === 'active' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.1s'}}\r\n          onClick={() => setMapOption('active')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Actv') : t('Active')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.active)}</h1>\r\n            <h6>{` `}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-green fadeInUp ${\r\n            mapOption === 'recovered' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.2s'}}\r\n          onClick={() => setMapOption('recovered')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Rcvrd') : t('Recovered')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-gray fadeInUp ${\r\n            mapOption === 'deceased' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.3s'}}\r\n          onClick={() => setMapOption('deceased')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Dcsd') : t('Deceased')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-purple tested fadeInUp\"\r\n          style={{animationDelay: '2.4s'}}\r\n        >\r\n          <h5>{t('Tested')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(testObj?.totaltested)}</h1>\r\n          </div>\r\n          <h6 className=\"timestamp\">\r\n            {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\r\n              ? `${t('As of')} ${format(\r\n                  parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\r\n                  'dd MMM'\r\n                )}`\r\n              : ''}\r\n          </h6>\r\n          {testObj?.totaltested?.length > 1 && (\r\n            <a href={testObj.source} target=\"_noblank\">\r\n              <Icon.Link />\r\n            </a>\r\n          )}\r\n          {panelRegion.state === 'Total' ? testedToolTip : ''}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\r\n        <h2\r\n          className={`${\r\n            currentMap.stat !== MAP_STATISTICS.ZONE\r\n              ? mapOption !== 'confirmed'\r\n                ? mapOption\r\n                : ''\r\n              : hoveredRegionZone\r\n          }`}\r\n        >\r\n          {hoveredRegion.district\r\n            ? t(hoveredRegion.district)\r\n            : t(hoveredRegion.state)}\r\n        </h2>\r\n\r\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\r\n          panelRegion.lastupdatedtime && (\r\n            <div className=\"last-update\">\r\n              <h6>{t('Last updated')}</h6>\r\n              <h3>\r\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\r\n                  ? ''\r\n                  : formatDistance(\r\n                      new Date(formatDate(panelRegion.lastupdatedtime)),\r\n                      new Date()\r\n                    ) +\r\n                    ' ' +\r\n                    t('ago')}\r\n              </h3>\r\n            </div>\r\n          )}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\r\n            <div className=\"button state-page-button\">\r\n              <abbr>{t('Visit state page')}</abbr>\r\n              <Icon.ArrowRightCircle />\r\n            </div>\r\n          </Link>\r\n        ) : null}\r\n\r\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\r\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\r\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) ? (\r\n          <h1\r\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\r\n          >\r\n            {hoveredRegionCount}\r\n            <br />\r\n            <span>\r\n              {mapOption}{' '}\r\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? ` ${t('per million')}`\r\n                : ''}\r\n            </span>\r\n          </h1>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            Back\r\n          </div>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown &&\r\n        currentMapData.Unknown[mapOption] > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\r\n            {t('people')}\r\n          </h4>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div>\r\n        {mapOption && (\r\n          <ChoroplethMap\r\n            statistic={statistic}\r\n            currentMap={currentMap}\r\n            mapData={currentMapData}\r\n            regionHighlighted={regionHighlighted}\r\n            setRegionHighlighted={setRegionHighlighted}\r\n            changeMap={switchMapToState}\r\n            isCountryLoaded={isCountryLoaded}\r\n            mapOption={mapOption}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"tabs-map\">\r\n        <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view:\r\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n                  ? MAP_VIEWS.STATES\r\n                  : MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.TOTAL,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n          }}\r\n        >\r\n          <h4>{t('Total Cases')}</h4>\r\n        </div>\r\n        {isCountryLoaded && (\r\n          <div\r\n            className={`tab ${\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\r\n            }`}\r\n            onClick={() => {\r\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\r\n              setCurrentMap({\r\n                name: currentMap.name,\r\n                view: MAP_VIEWS.STATES,\r\n                stat: MAP_STATISTICS.PER_MILLION,\r\n              });\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n            }}\r\n          >\r\n            <h4>\r\n              {t('Cases per million')}\r\n              <sup>&dagger;</sup>\r\n            </h4>\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view: MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.ZONE,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: 'Total',\r\n              });\r\n          }}\r\n        >\r\n          <h4>Zones</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <h6 className=\"footnote table-fineprint\">\r\n        &dagger; {t('Based on 2019 population projection by NCP') + '('}\r\n        <a\r\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\r\n          target=\"_noblank\"\r\n          style={{color: '#6c757d'}}\r\n        >\r\n          {t('report')}\r\n        </a>\r\n        )\r\n      </h6>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapExplorer, isEqual);\r\n","import {testedToolTip} from './tooltips';\r\n\r\nimport {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\n\r\nimport * as d3 from 'd3';\r\nimport {addDays, subDays, format} from 'date-fns';\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nfunction TimeSeries({timeseriesProp, chartType, mode, logMode, isTotal}) {\r\n  const {t} = useTranslation();\r\n  const [lastDaysCount, setLastDaysCount] = useState(\r\n    window.innerWidth > 512 ? Infinity : 30\r\n  );\r\n  const [timeseries, setTimeseries] = useState({});\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(0);\r\n  const [moving, setMoving] = useState(false);\r\n\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n  const svgRef4 = useRef();\r\n  const svgRef5 = useRef();\r\n\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const transformTimeSeries = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length > 1) {\r\n        const slicedTimeseries = sliceTimeseriesFromEnd(\r\n          timeseries,\r\n          lastDaysCount\r\n        );\r\n        setIndex(slicedTimeseries.length - 1);\r\n        setTimeseries(slicedTimeseries);\r\n      }\r\n    },\r\n    [lastDaysCount]\r\n  );\r\n\r\n  useEffect(() => {\r\n    transformTimeSeries(timeseriesProp);\r\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (!dimensions) return;\r\n      const width = dimensions.width;\r\n      const height = dimensions.height;\r\n\r\n      // Margins\r\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\r\n      const chartRight = width - margin.right;\r\n      const chartBottom = height - margin.bottom;\r\n\r\n      const T = timeseries.length;\r\n      const yBufferTop = 1.2;\r\n      const yBufferBottom = 1.1;\r\n\r\n      setDatapoint(timeseries[T - 1]);\r\n      setIndex(T - 1);\r\n\r\n      const svg1 = d3.select(svgRef1.current);\r\n      const svg2 = d3.select(svgRef2.current);\r\n      const svg3 = d3.select(svgRef3.current);\r\n      const svg4 = d3.select(svgRef4.current);\r\n      const svg5 = d3.select(svgRef5.current);\r\n\r\n      const dateMin = subDays(timeseries[0].date, 1);\r\n      const dateMax = addDays(timeseries[T - 1].date, 1);\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .clamp(true)\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, chartRight]);\r\n\r\n      // Number of x-axis ticks\r\n      const numTicksX = width < 480 ? 4 : 7;\r\n\r\n      const xAxis = (g) =>\r\n        g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX));\r\n\r\n      const xAxis2 = (g, yScale) => {\r\n        g.attr('class', 'x-axis2')\r\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\r\n          .select('.domain')\r\n          .style('transform', `translateY(${yScale(0)}px)`);\r\n\r\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\r\n        else g.select('.domain').attr('opacity', 0);\r\n      };\r\n\r\n      const yAxis = (g, yScale) =>\r\n        g\r\n          .attr('class', 'y-axis')\r\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5));\r\n\r\n      // Arrays of objects\r\n      const plotTotal = chartType === 1;\r\n      const dataTypesTotal = [\r\n        'totalconfirmed',\r\n        'totalactive',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n        'totaltested',\r\n      ];\r\n      const dataTypesDaily = [\r\n        'dailyconfirmed',\r\n        'dailyactive',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n        'dailytested',\r\n      ];\r\n\r\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\r\n\r\n      const svgArray = [svg1, svg2, svg3, svg4, svg5];\r\n\r\n      let yScales;\r\n      if (plotTotal) {\r\n        const uniformScaleMin = d3.min(timeseries, (d) =>\r\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\r\n        );\r\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\r\n        const yScaleUniformLinear = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        const yScaleUniformLog = d3\r\n          .scaleLog()\r\n          .clamp(true)\r\n          .domain([\r\n            Math.max(1, uniformScaleMin),\r\n            Math.max(10, yBufferTop * uniformScaleMax),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesTotal.map((type) => {\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              d3.min(timeseries, (d) => d[type]),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          const yScaleLog = d3\r\n            .scaleLog()\r\n            .clamp(true)\r\n            .domain([\r\n              Math.max(\r\n                1,\r\n                d3.min(timeseries, (d) => d[type])\r\n              ),\r\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          if (mode && type !== 'totaltested')\r\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\r\n          else return logMode ? yScaleLog : yScaleLinear;\r\n        });\r\n      } else {\r\n        const yScaleDailyUniform = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([\r\n            yBufferBottom *\r\n              Math.min(\r\n                0,\r\n                d3.min(timeseries, (d) => d.dailyactive)\r\n              ),\r\n            Math.max(\r\n              1,\r\n              yBufferTop *\r\n                d3.max(timeseries, (d) =>\r\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\r\n                )\r\n            ),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesDaily.map((type) => {\r\n          if (mode && type !== 'dailytested') return yScaleDailyUniform;\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              yBufferBottom *\r\n                Math.min(\r\n                  0,\r\n                  d3.min(timeseries, (d) => d[type])\r\n                ),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          return yScaleLinear;\r\n        });\r\n      }\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((svg, i) => {\r\n        return svg\r\n          .selectAll('.focus')\r\n          .data([timeseries[T - 1]], (d) => d.date)\r\n          .join((enter) =>\r\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'focus')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 4);\r\n      });\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const date = xScale.invert(xm);\r\n        const bisectDate = d3.bisector((d) => d.date).left;\r\n        let i = bisectDate(timeseries, date, 1);\r\n        if (0 <= i && i < T) {\r\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\r\n          setDatapoint(timeseries[i]);\r\n          setIndex(i);\r\n          setMoving(true);\r\n          const d = timeseries[i];\r\n          focus.forEach((f, j) => {\r\n            const yScale = yScales[j];\r\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n            if (!isNaN(d[type]))\r\n              f.attr('cx', xScale(d.date))\r\n                .attr('cy', yScale(d[type]))\r\n                .attr('opacity', 1);\r\n            else f.attr('opacity', 0);\r\n          });\r\n        }\r\n      }\r\n\r\n      function mouseout() {\r\n        setDatapoint(timeseries[T - 1]);\r\n        setIndex(T - 1);\r\n        setMoving(false);\r\n        focus.forEach((f, j) => {\r\n          const yScale = yScales[j];\r\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n          if (!isNaN(timeseries[T - 1][type]))\r\n            f.attr('cx', xScale(timeseries[T - 1].date))\r\n              .attr('cy', yScale(timeseries[T - 1][type]))\r\n              .attr('opacity', 1);\r\n          else f.attr('opacity', 0);\r\n        });\r\n      }\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((svg, i) => {\r\n        // Transition interval\r\n        const t = svg.transition().duration(500);\r\n        const typeTotal = dataTypesTotal[i];\r\n        const typeDaily = dataTypesDaily[i];\r\n        const type = plotTotal ? typeTotal : typeDaily;\r\n\r\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\r\n        const color = colors[i];\r\n        const yScale = yScales[i];\r\n\r\n        /* X axis */\r\n        svg\r\n          .select('.x-axis')\r\n          .style('transform', `translateY(${chartBottom}px)`)\r\n          .transition(t)\r\n          .call(xAxis);\r\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\r\n        /* Y axis */\r\n        svg\r\n          .select('.y-axis')\r\n          .style('transform', `translateX(${chartRight}px)`)\r\n          .transition(t)\r\n          .call(yAxis, yScale);\r\n\r\n        /* Path dots */\r\n        svg\r\n          .selectAll('.dot')\r\n          .data(filteredTimeseries, (d) => d.date)\r\n          .join((enter) =>\r\n            enter\r\n              .append('circle')\r\n              .attr('cy', chartBottom)\r\n              .attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'dot')\r\n          .attr('fill', color)\r\n          .attr('stroke', color)\r\n          .attr('r', 2)\r\n          .transition(t)\r\n          .attr('cx', (d) => xScale(d.date))\r\n          .attr('cy', (d) => yScale(d[type]));\r\n\r\n        if (!isNaN(timeseries[T - 1][type]))\r\n          focus[i]\r\n            .transition(t)\r\n            .attr('cx', (d) => xScale(d.date))\r\n            .attr('cy', (d) => yScale(d[type]))\r\n            .attr('opacity', 1);\r\n        else focus[i].transition(t).attr('opacity', 0);\r\n\r\n        if (plotTotal) {\r\n          /* TOTAL TRENDS */\r\n          svg.selectAll('.stem').remove();\r\n          const path = svg\r\n            .selectAll('.trend')\r\n            .data([[...filteredTimeseries].reverse()])\r\n            .join('path')\r\n            .attr('class', 'trend')\r\n            .attr('fill', 'none')\r\n            .attr('stroke', color + '99')\r\n            .attr('stroke-width', 4);\r\n          // HACK\r\n          // Path interpolation is non-trivial. Ideally, a custom path tween\r\n          // function should be defined which takes care that old path dots\r\n          // transition synchronously along with the path transition. This hack\r\n          // simulates that behaviour.\r\n          if (path.attr('d')) {\r\n            const n = path.node().getTotalLength();\r\n            const p = path.node().getPointAtLength(n);\r\n            // Append points at end of path for better interpolation\r\n            path.attr(\r\n              'd',\r\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\r\n            );\r\n          }\r\n          path\r\n            .transition(t)\r\n            .attr('opacity', plotTotal ? 1 : 0)\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => xScale(d.date))\r\n                .y((d) => yScale(d[typeTotal]))\r\n                .curve(d3.curveMonotoneX)\r\n            );\r\n          // Using d3-interpolate-path\r\n          // .attrTween('d', function (d) {\r\n          //   var previous = path.attr('d');\r\n          //   var current = line(d);\r\n          //   return interpolatePath(previous, current);\r\n          // });\r\n        } else {\r\n          /* DAILY TRENDS */\r\n          svg.selectAll('.trend').remove();\r\n          svg\r\n            .selectAll('.stem')\r\n            .data(filteredTimeseries, (d) => d.date)\r\n            .join((enter) =>\r\n              enter\r\n                .append('line')\r\n                .attr('x1', (d) => xScale(d.date))\r\n                .attr('y1', chartBottom)\r\n                .attr('x2', (d) => xScale(d.date))\r\n                .attr('y2', chartBottom)\r\n            )\r\n            .attr('class', 'stem')\r\n            .style('stroke', color + '99')\r\n            .style('stroke-width', 4)\r\n            .transition(t)\r\n            .attr('x1', (d) => xScale(d.date))\r\n            .attr('y1', yScale(0))\r\n            .attr('x2', (d) => xScale(d.date))\r\n            .attr('y2', (d) => yScale(d[typeDaily]));\r\n        }\r\n\r\n        svg\r\n          .on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n      });\r\n    },\r\n    [chartType, dimensions, logMode, mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  const dateStr = datapoint.date ? format(datapoint.date, 'dd MMMM') : '';\r\n\r\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\r\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\r\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\r\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\r\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested';\r\n\r\n  // Function for calculate increased/decreased count for each type of data\r\n  const currentStatusCount = (chartType) => {\r\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\r\n      return '';\r\n    const currentDiff =\r\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\r\n    const formatedDiff = formatNumber(currentDiff);\r\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\r\n        <div className=\"svg-parent\" ref={wrapperRef}>\r\n          <div className=\"stats\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Confirmed')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\r\n              <h6>{currentStatusCount(chartKey1)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-blue\">\r\n          <div className=\"stats is-blue\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Active')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\r\n              <h6>{currentStatusCount(chartKey2)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Recovered')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\r\n              <h6>{currentStatusCount(chartKey3)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Deceased')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\r\n              <h6>{currentStatusCount(chartKey4)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-purple\">\r\n          <div className=\"stats is-purple\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>\r\n              {t('Tested')} {isTotal ? testedToolTip : ''}\r\n            </h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey5])}</h2>\r\n              <h6>{currentStatusCount(chartKey5)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pills\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(Infinity)}\r\n          className={lastDaysCount === Infinity ? 'selected' : ''}\r\n        >\r\n          {t('Beginning')}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(30)}\r\n          className={lastDaysCount === 30 ? 'selected' : ''}\r\n          aria-label=\"1 month\"\r\n        >\r\n          {`1 ${t('Month')}`}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(14)}\r\n          className={lastDaysCount === 14 ? 'selected' : ''}\r\n          aria-label=\"14 days\"\r\n        >\r\n          {`2 ${t('Weeks')}`}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"alert\">\r\n        <Icon.AlertOctagon />\r\n        <div className=\"alert-right\">\r\n          {t('Tested chart is independent of uniform scaling')}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeries);\r\n","import {ResizeObserver} from '@juggle/resize-observer';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport const useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries, observer) => {\r\n      entries.forEach((entry, index) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n","import TimeSeries from './timeseries';\r\n\r\nimport equal from 'fast-deep-equal';\r\nimport React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!currProps.isIntersecting) return true;\r\n  if (!prevProps.isIntersecting) return false;\r\n  if (!equal(currProps.activeStateCode, prevProps.activeStateCode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.anchor, prevProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction TimeSeriesExplorer({\r\n  timeseries,\r\n  activeStateCode,\r\n  onHighlightState,\r\n  states,\r\n  anchor,\r\n  setAnchor,\r\n  isIntersecting,\r\n}) {\r\n  const [chartType, setChartType] = useLocalStorage('timeseriesChartType', 1);\r\n\r\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\r\n    'timeseriesMode',\r\n    true\r\n  );\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\r\n    'timeseriesLogMode',\r\n    false\r\n  );\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <div\r\n      className={`TimeSeriesExplorer ${\r\n        anchor === 'timeseries' ? 'stickied' : ''\r\n      }`}\r\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\r\n    >\r\n      <div\r\n        className=\"timeseries-header fadeInUp\"\r\n        style={{animationDelay: '2.5s'}}\r\n      >\r\n        {window.innerWidth > 769 && anchor !== undefined && (\r\n          <div\r\n            className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\r\n            onClick={() => {\r\n              setAnchor(anchor === 'timeseries' ? null : 'timeseries');\r\n            }}\r\n          >\r\n            <Icon.Anchor />\r\n          </div>\r\n        )}\r\n\r\n        <h1>{t('Spread Trends')}</h1>\r\n        <div className=\"tabs\">\r\n          <div\r\n            className={`tab ${chartType === 1 ? 'focused' : ''}`}\r\n            onClick={() => {\r\n              setChartType(1);\r\n            }}\r\n          >\r\n            <h4>{t('Cumulative')}</h4>\r\n          </div>\r\n          <div\r\n            className={`tab ${chartType === 2 ? 'focused' : ''}`}\r\n            onClick={() => {\r\n              setChartType(2);\r\n            }}\r\n          >\r\n            <h4>{t('Daily')}</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"scale-modes\">\r\n          <label className=\"main\">{t('Scale Modes')}</label>\r\n          <div className=\"timeseries-mode\">\r\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\r\n            <input\r\n              id=\"timeseries-mode\"\r\n              type=\"checkbox\"\r\n              checked={timeseriesMode}\r\n              className=\"switch\"\r\n              aria-label={t('Checked by default to scale uniformly.')}\r\n              onChange={(event) => {\r\n                setTimeseriesMode(!timeseriesMode);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`timeseries-logmode ${\r\n              chartType !== 1 ? 'disabled' : ''\r\n            }`}\r\n          >\r\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\r\n            <input\r\n              id=\"timeseries-logmode\"\r\n              type=\"checkbox\"\r\n              checked={chartType === 1 && timeseriesLogMode}\r\n              className=\"switch\"\r\n              disabled={chartType !== 1}\r\n              onChange={(event) => {\r\n                setTimeseriesLogMode(!timeseriesLogMode);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {states && (\r\n          <div className=\"trends-state-name\">\r\n            <select\r\n              value={activeStateCode}\r\n              onChange={({target}) => {\r\n                const selectedState = target.selectedOptions[0].getAttribute(\r\n                  'statedata'\r\n                );\r\n                onHighlightState(JSON.parse(selectedState));\r\n              }}\r\n            >\r\n              {states.map((s) => {\r\n                return (\r\n                  <option\r\n                    value={s.statecode}\r\n                    key={s.statecode}\r\n                    statedata={JSON.stringify(s)}\r\n                  >\r\n                    {s.statecode === 'TT' ? t('All States') : t(s.state)}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {timeseries && (\r\n        <TimeSeries\r\n          timeseriesProp={timeseries}\r\n          chartType={chartType}\r\n          mode={timeseriesMode}\r\n          logMode={timeseriesLogMode}\r\n          isTotal={activeStateCode === 'TT'}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeriesExplorer, isEqual);\r\n","export const STATE_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deaths',\r\n];\r\nexport const DISTRICT_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deceased',\r\n];\r\n\r\nexport const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n  DISTRICT: 'district',\r\n};\r\n\r\nexport const MAP_STATISTICS = {\r\n  TOTAL: 0,\r\n  PER_MILLION: 1,\r\n  ZONE: 2,\r\n};\r\n\r\nexport const MAP_VIEWS = {\r\n  STATES: 0,\r\n  DISTRICTS: 1,\r\n};\r\n\r\nexport const MAPS_DIR = '/maps';\r\n\r\nexport const MAP_META = {\r\n  India: {\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectStates: 'india-states',\r\n    graphObjectDistricts: 'india-districts-2019-734',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andhrapradesh_district',\r\n  },\r\n  Assam: {\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'bihar_district',\r\n  },\r\n  Chandigarh: {\r\n    name: 'Chandigarh',\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chandigarh_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chhattisgarh_district',\r\n  },\r\n  'Dadra and Nagar Haveli and Daman and Diu': {\r\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'dnh-and-dd',\r\n  },\r\n  Delhi: {\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'delhi_district',\r\n  },\r\n  Karnataka: {\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'gujarat_district',\r\n  },\r\n  Haryana: {\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'ladakh_district',\r\n  },\r\n  Lakshadweep: {\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'lakshadweep_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'manipur_district',\r\n  },\r\n  Meghalaya: {\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'odisha_district',\r\n  },\r\n  Puducherry: {\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'puducherry_district',\r\n  },\r\n  Punjab: {\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'telangana_district',\r\n  },\r\n  Tripura: {\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'westbengal_district',\r\n  },\r\n};\r\n\r\nexport const STATE_CODES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nconst stateCodes = [];\r\nconst reverseStateCodes = {};\r\nObject.keys(STATE_CODES).map((key, index) => {\r\n  reverseStateCodes[STATE_CODES[key]] = key;\r\n  stateCodes.push({code: key, name: STATE_CODES[key]});\r\n  return null;\r\n});\r\nexport const STATE_CODES_REVERSE = reverseStateCodes;\r\nexport const STATE_CODES_ARRAY = stateCodes;\r\n\r\n// Source: Projected Populations (2019)\r\n// National Commission on Population, \"Population Projections for India and\r\n// States (2011-2036)\", Table-8 (p43), November 2019\r\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\r\nexport const STATE_POPULATIONS = {\r\n  'Andaman and Nicobar Islands': 397000,\r\n  'Andhra Pradesh': 52221000,\r\n  'Arunachal Pradesh': 1504000,\r\n  Assam: 34293000,\r\n  Bihar: 119520000,\r\n  Chandigarh: 1179000,\r\n  Chhattisgarh: 28724000,\r\n  'Dadra and Nagar Haveli and Daman and Diu': 959000,\r\n  Delhi: 19814000,\r\n  Goa: 1540000,\r\n  Gujarat: 67936000,\r\n  Haryana: 28672000,\r\n  'Himachal Pradesh': 7300000,\r\n  'Jammu and Kashmir': 13203000,\r\n  Jharkhand: 37403000,\r\n  Karnataka: 65798000,\r\n  Kerala: 35125000,\r\n  Ladakh: 293000,\r\n  Lakshadweep: 68000,\r\n  'Madhya Pradesh': 82232000,\r\n  Maharashtra: 122153000,\r\n  Manipur: 3103000,\r\n  Meghalaya: 3224000,\r\n  Mizoram: 1192000,\r\n  Nagaland: 2150000,\r\n  Odisha: 43671000,\r\n  Puducherry: 1504000,\r\n  Punjab: 29859000,\r\n  Rajasthan: 77264000,\r\n  Sikkim: 664000,\r\n  'Tamil Nadu': 75695000,\r\n  Telangana: 37220000,\r\n  Tripura: 3992000,\r\n  'Uttar Pradesh': 224979000,\r\n  Uttarakhand: 11141000,\r\n  'West Bengal': 96906000,\r\n  Total: 1332900000,\r\n};\r\n","import {STATE_CODES_ARRAY, STATE_CODES_REVERSE} from '../constants';\r\n\r\nimport Bloodhound from 'corejs-typeahead';\r\nimport React, {useState, useCallback, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDebounce} from 'react-use';\r\n\r\nconst engine = new Bloodhound({\r\n  initialize: true,\r\n  local: STATE_CODES_ARRAY,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\r\n});\r\n\r\nconst districtEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/state_district_wise.json',\r\n    transform: function (response) {\r\n      const districts = [];\r\n      Object.keys(response).map((stateName) => {\r\n        const districtData = response[stateName].districtData;\r\n        Object.keys(districtData).map((districtName) => {\r\n          return districts.push({district: districtName, state: stateName});\r\n        });\r\n        return null;\r\n      });\r\n      return districts;\r\n    },\r\n  },\r\n});\r\n\r\nconst essentialsEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\r\n    'category',\r\n    'city',\r\n    'contact',\r\n    'descriptionandorserviceprovided',\r\n    'nameoftheorganisation',\r\n    'state'\r\n  ),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/resources/resources.json',\r\n    transform: function (response) {\r\n      return response.resources;\r\n    },\r\n  },\r\n});\r\n\r\nlet focused = false;\r\nconst suggestions = [\r\n  'Karnataka',\r\n  'West Bengal',\r\n  'Pune Testing',\r\n  'Mumbai Shelter',\r\n  'Medical',\r\n  'Delhi Police',\r\n];\r\n\r\nfunction Search(props) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [expand, setExpand] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const searchInput = useRef(null);\r\n  const {t} = useTranslation();\r\n\r\n  const handleSearch = useCallback((searchInput) => {\r\n    const results = [];\r\n\r\n    const sync = (datums) => {\r\n      datums.map((result, index) => {\r\n        const stateObj = {\r\n          name: result.name,\r\n          type: 'state',\r\n          route: result.code,\r\n        };\r\n        results.push(stateObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const districtSync = (datums) => {\r\n      datums.slice(0, 3).map((result, index) => {\r\n        const districtObj = {\r\n          name: result.district + ', ' + result.state,\r\n          type: 'state',\r\n          route: STATE_CODES_REVERSE[result.state],\r\n        };\r\n        results.push(districtObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const essentialsSync = (datums) => {\r\n      datums.slice(0, 5).map((result, index) => {\r\n        const essentialsObj = {\r\n          name: result.nameoftheorganisation,\r\n          type: 'essentials',\r\n          category: result.category,\r\n          website: result.contact,\r\n          description: result.descriptionandorserviceprovided,\r\n          city: result.city,\r\n          state: result.state,\r\n          contact: result.phonenumber,\r\n        };\r\n        results.push(essentialsObj);\r\n        return null;\r\n      });\r\n      setResults([...results]);\r\n    };\r\n\r\n    engine.search(searchInput, sync);\r\n    districtEngine.search(searchInput, districtSync);\r\n    essentialsEngine.search(searchInput, essentialsSync);\r\n  }, []);\r\n\r\n  useDebounce(\r\n    () => {\r\n      if (searchValue) {\r\n        handleSearch(searchValue);\r\n      } else {\r\n        setResults([]);\r\n      }\r\n    },\r\n    100,\r\n    [searchValue]\r\n  );\r\n\r\n  function setNativeValue(element, value) {\r\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n    const prototype = Object.getPrototypeOf(element);\r\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\r\n      prototype,\r\n      'value'\r\n    ).set;\r\n\r\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n      prototypeValueSetter.call(element, value);\r\n    } else {\r\n      valueSetter.call(element, value);\r\n    }\r\n  }\r\n\r\n  function fillPlaceholder(target, index, cursorPosition, callback) {\r\n    if (focused) {\r\n      target.textContent = '';\r\n      return true;\r\n    }\r\n    const text = suggestions[index];\r\n    const placeholder = target.textContent;\r\n    target.classList.remove('disappear');\r\n    target.textContent = placeholder + text[cursorPosition];\r\n    if (cursorPosition < text.length - 1) {\r\n      setTimeout(function () {\r\n        fillPlaceholder(target, index, cursorPosition + 1, callback);\r\n      }, 200);\r\n      return true;\r\n    }\r\n    callback();\r\n  }\r\n\r\n  function clearPlaceholder(target, callback) {\r\n    const placeholder = target.textContent;\r\n    target.classList.add('disappear');\r\n    if (placeholder.length > 0) {\r\n      setTimeout(function () {\r\n        target.textContent = '';\r\n        clearPlaceholder(target, callback);\r\n      }, 1000);\r\n      return true;\r\n    }\r\n    callback();\r\n  }\r\n\r\n  function loopThroughSuggestions(target, index) {\r\n    if (focused) {\r\n      target.textContent = '';\r\n      return true;\r\n    }\r\n    fillPlaceholder(target, index, 0, function () {\r\n      setTimeout(function () {\r\n        clearPlaceholder(target, function () {\r\n          loopThroughSuggestions(target, (index + 1) % suggestions.length);\r\n        });\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  const targetInput = document.getElementById('search-placeholder');\r\n  if (targetInput) loopThroughSuggestions(targetInput, 0);\r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <label>{t('Search your city, resources, etc')}</label>\r\n      <div className=\"line\"></div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={searchValue}\r\n        ref={searchInput}\r\n        onFocus={(event) => {\r\n          focused = true;\r\n          setExpand(true);\r\n        }}\r\n        onBlur={() => {\r\n          setExpand(false);\r\n        }}\r\n        onChange={(event) => {\r\n          setSearchValue(event.target.value);\r\n        }}\r\n      />\r\n      <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\r\n\r\n      <div className={`search-button`}>\r\n        <Icon.Search />\r\n      </div>\r\n\r\n      {searchValue.length > 0 && (\r\n        <div\r\n          className={`close-button`}\r\n          onClick={() => {\r\n            setSearchValue('');\r\n            setResults([]);\r\n          }}\r\n        >\r\n          <Icon.X />\r\n        </div>\r\n      )}\r\n\r\n      {results.length > 0 && (\r\n        <div className=\"results\">\r\n          {results.map((result, index) => {\r\n            if (result.type === 'state') {\r\n              return (\r\n                <Link key={index} to={`state/${result.route}`}>\r\n                  <div className=\"result\">\r\n                    <div className=\"result-name\">{result.name}</div>\r\n                    <div className=\"result-type\">\r\n                      Visit {result?.type?.toLowerCase()} page\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <a\r\n                  key={index}\r\n                  href={result.website}\r\n                  target=\"_noblank\"\r\n                  className=\"essential-result\"\r\n                >\r\n                  <div className=\"result-top\">\r\n                    <div className=\"result-top-left\">\r\n                      <div className=\"result-name\">{result.name}</div>\r\n                      <div className=\"result-location\">\r\n                        {result.city}, {result.state}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"result-category\">\r\n                      <div>\r\n                        {result.category.match('Delivery')\r\n                          ? 'Home Delivery'\r\n                          : result.category}\r\n                      </div>\r\n                      <Icon.ExternalLink />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"result-description\">{result.description}</div>\r\n                  <div className=\"result-contact\">\r\n                    <Icon.Phone />\r\n                    <div>{result.contact}</div>\r\n                  </div>\r\n                </a>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {expand && (\r\n        <div className=\"expanded\">\r\n          <div className=\"expanded-left\">\r\n            <h3>{t('Essentials')}</h3>\r\n            <div className=\"suggestions\">\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Testing Pune');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Testing Pune')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Delhi Shelter');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Delhi Shelter')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(\r\n                      searchInput.current,\r\n                      'Community Kitchen in Kerala'\r\n                    );\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Community Kitchen in Kerala')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Groceries Chennai');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Groceries Chennai')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(\r\n                      searchInput.current,\r\n                      'Senior citizen support bangalore'\r\n                    );\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Senior citizen support bangalore')}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"expanded-right\">\r\n            <h3>{t('Locations')}</h3>\r\n            <div className=\"suggestions\">\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Hyderabad');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Hyderabad')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Karnataka');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Karnataka')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Chennai');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Chennai')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Jharkhand');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Jharkhand')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"suggestion\">\r\n                <div>-</div>\r\n                <h4\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                    setNativeValue(searchInput.current, 'Alappuzha');\r\n                    searchInput.current.dispatchEvent(\r\n                      new Event('input', {bubbles: true})\r\n                    );\r\n                  }}\r\n                >\r\n                  {t('Alappuzha')}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n","import {STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatNumber,\r\n  capitalize,\r\n  abbreviate,\r\n} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport {formatDistance} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useHistory} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\r\n\r\nfunction StateCell({state, statistic}) {\r\n  const ArrowUp = useMemo(() => <Icon.ArrowUp />, []);\r\n\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {state[`delta${statistic}`] > 0 && ArrowUp}\r\n        {state[`delta${statistic}`] > 0 && state[`delta${statistic}`]}\r\n      </span>\r\n      <span className=\"total\">\r\n        {state[statistic] === 0 ? '-' : formatNumber(state[statistic])}\r\n      </span>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction DistrictHeaderCell({handleSort, statistic, sortData}) {\r\n  const breakpoint = useBreakpoint();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <td onClick={() => handleSort(statistic)}>\r\n      <div className=\"heading-content\">\r\n        <abbr\r\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\r\n          title={statistic}\r\n        >\r\n          {breakpoint === 'L'\r\n            ? statistic.slice(0)\r\n            : breakpoint === 'S'\r\n            ? capitalize(\r\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\r\n              )\r\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\r\n        </abbr>\r\n        <div\r\n          style={{\r\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\r\n          }}\r\n        >\r\n          {sortData.isAscending ? (\r\n            <div className=\"arrow-up\" />\r\n          ) : (\r\n            <div className=\"arrow-down\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction PureDistrictCell({district, statistic}) {\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {district.delta[statistic] > 0 && <Icon.ArrowUp />}\r\n        {district.delta[statistic] > 0 && district.delta[statistic]}\r\n      </span>\r\n      <span className=\"total\">{formatNumber(district[statistic])}</span>\r\n    </td>\r\n  );\r\n}\r\n\r\nconst DistrictCell = React.memo(PureDistrictCell);\r\n\r\nconst isDistrictRowEqual = (prevProps, currProps) => {\r\n  if (equal(prevProps.regionHighlighted?.district, prevProps.district)) {\r\n    return false;\r\n  }\r\n  if (equal(currProps.regionHighlighted?.district, currProps.district)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction PureDistrictRow({\r\n  regionHighlighted,\r\n  district,\r\n  state,\r\n  zone,\r\n  onHighlightDistrict,\r\n  sortedDistricts,\r\n  districts,\r\n}) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <tr\r\n      key={district.district}\r\n      className={classnames('district', {\r\n        'is-highlighted': regionHighlighted?.district === district,\r\n      })}\r\n      onMouseEnter={() => onHighlightDistrict(district, state)}\r\n    >\r\n      <td className={classnames(`is-${zone?.zone}`)}>\r\n        <div className=\"title-chevron\">\r\n          <span className=\"title-icon\">\r\n            {t(district)}\r\n            <span\r\n              data-for=\"district\"\r\n              data-tip={[[sortedDistricts[district].notes]]}\r\n              data-event=\"touchstart mouseover\"\r\n              data-event-off=\"mouseleave\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {sortedDistricts[district].notes && <Icon.Info />}\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </td>\r\n\r\n      {DISTRICT_ROW_STATISTICS.map((statistic) => (\r\n        <DistrictCell\r\n          key={statistic}\r\n          district={districts[district]}\r\n          statistic={statistic}\r\n        />\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.state.state, currProps.state.state)) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.state,\r\n      currProps.regionHighlighted?.state\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.district,\r\n      currProps.regionHighlighted?.district\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction Row({\r\n  index,\r\n  state,\r\n  districts,\r\n  zones,\r\n  regionHighlighted,\r\n  onHighlightState,\r\n  onHighlightDistrict,\r\n}) {\r\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\r\n  const [showDistricts, setShowDistricts] = useState(false);\r\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n  const {t} = useTranslation();\r\n\r\n  const Chevron = useMemo(\r\n    () => (\r\n      <span\r\n        className={classnames(\r\n          'dropdown',\r\n          {rotateRightDown: showDistricts},\r\n          {rotateDownRight: !showDistricts}\r\n        )}\r\n      >\r\n        <Icon.ChevronDown />\r\n      </span>\r\n    ),\r\n    [showDistricts]\r\n  );\r\n\r\n  const _onHighlightState = useCallback(\r\n    (state) => {\r\n      if (!equal(state.state, regionHighlighted?.state)) {\r\n        onHighlightState(state);\r\n      }\r\n    },\r\n    [onHighlightState, regionHighlighted]\r\n  );\r\n\r\n  const doSort = useCallback(\r\n    (sortData) => {\r\n      const sorted = {};\r\n      Object.keys(sortedDistricts)\r\n        .sort((district1, district2) => {\r\n          if (sortData.sortColumn !== 'district') {\r\n            return sortData.isAscending\r\n              ? parseInt(sortedDistricts[district1][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district2][sortData.sortColumn])\r\n              : parseInt(sortedDistricts[district2][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district1][sortData.sortColumn]);\r\n          } else {\r\n            return sortData.isAscending\r\n              ? district1.localeCompare(district2)\r\n              : district2.localeCompare(district1);\r\n          }\r\n        })\r\n        .forEach((key) => {\r\n          sorted[key] = sortedDistricts[key];\r\n        });\r\n      setSortedDistricts(sorted);\r\n    },\r\n    [sortedDistricts]\r\n  );\r\n\r\n  const handleSort = useCallback(\r\n    (statistic) => {\r\n      const newSortData = {\r\n        isAscending: !sortData.isAscending,\r\n        sortColumn: statistic,\r\n      };\r\n      doSort(newSortData);\r\n      setSortData(Object.assign({}, sortData, newSortData));\r\n    },\r\n    [doSort, setSortData, sortData]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    if (state.statecode !== 'TT') doSort(sortData);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr\r\n        className={classnames(\r\n          'state',\r\n          {'is-total': state.statecode === 'TT'},\r\n          {'is-highlighted': regionHighlighted?.state === state.state},\r\n          {'is-odd': index % 2 === 0}\r\n        )}\r\n        onMouseEnter={() => _onHighlightState(state)}\r\n        onClick={\r\n          state.statecode !== 'TT'\r\n            ? () => {\r\n                setShowDistricts(!showDistricts);\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        <td>\r\n          <div className=\"title-chevron\">\r\n            {state.statecode !== 'TT' && Chevron}\r\n            <span className=\"title-icon\">\r\n              {t(state.state)}\r\n\r\n              <span\r\n                data-tip={[t(`${state.statenotes}`)]}\r\n                data-event=\"touchstart mouseover\"\r\n                data-event-off=\"mouseleave\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {state.statenotes && <Icon.Info />}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </td>\r\n\r\n        {STATE_ROW_STATISTICS.map((statistic, index) => (\r\n          <StateCell key={index} state={state} statistic={statistic} />\r\n        ))}\r\n      </tr>\r\n\r\n      {showDistricts && (\r\n        <React.Fragment>\r\n          <tr className=\"is-spacer\">\r\n            <td colSpan={5}>\r\n              <p />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className={'state-last-update'}>\r\n            <td colSpan={3} style={{paddingBottom: 0}}>\r\n              <p className=\"spacer\"></p>\r\n              <p>\r\n                {isNaN(Date.parse(formatDate(state.lastupdatedtime)))\r\n                  ? ''\r\n                  : `${t('Last updated')} ${formatDistance(\r\n                      new Date(formatDate(state.lastupdatedtime)),\r\n                      new Date()\r\n                    )} ${t('ago')}`}\r\n              </p>\r\n              {sortedDistricts?.Unknown && (\r\n                <div className=\"disclaimer\">\r\n                  <Icon.AlertCircle />\r\n                  {t('District-wise numbers are under reconciliation')}\r\n                </div>\r\n              )}\r\n            </td>\r\n            <td\r\n              align=\"center\"\r\n              className=\"state-page-link\"\r\n              colSpan={2}\r\n              onClick={() => {\r\n                history.push(`state/${state.statecode}`);\r\n              }}\r\n            >{`View ${t(state.state)}'s Page`}</td>\r\n          </tr>\r\n\r\n          <tr className={classnames('district-heading')}>\r\n            <td onClick={() => handleSort('district')}>\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"District\">{t('District')}</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </td>\r\n\r\n            {DISTRICT_ROW_STATISTICS.map((statistic, index) => (\r\n              <DistrictHeaderCell\r\n                key={index}\r\n                handleSort={handleSort}\r\n                statistic={statistic}\r\n                sortData={sortData}\r\n              />\r\n            ))}\r\n          </tr>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {showDistricts &&\r\n        Object.keys(sortedDistricts).map((district, index) => (\r\n          <DistrictRow\r\n            key={district}\r\n            state={state}\r\n            district={district}\r\n            districts={districts}\r\n            zone={zones[district]}\r\n            sortedDistricts={sortedDistricts}\r\n            regionHighlighted={regionHighlighted}\r\n            onHighlightDistrict={onHighlightDistrict}\r\n          />\r\n        ))}\r\n\r\n      {showDistricts && (\r\n        <tr className=\"is-spacer\">\r\n          <td colSpan={5}>\r\n            <p />\r\n            <ReactTooltip\r\n              id=\"district\"\r\n              place=\"right\"\r\n              type=\"dark\"\r\n              effect=\"solid\"\r\n              multiline={true}\r\n              scrollHide={true}\r\n              globalEventOff=\"click\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(Row, isEqual);\r\n","import Row from './row';\r\n\r\nimport {STATE_ROW_STATISTICS} from '../constants';\r\nimport {capitalize, abbreviate} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useMemo, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\r\n\r\nfunction StateHeaderCell({handleSort, sortData, statistic}) {\r\n  const breakpoint = useBreakpoint();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <th onClick={() => handleSort(statistic)}>\r\n      <div className=\"heading-content\">\r\n        <abbr\r\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\r\n          title={statistic}\r\n        >\r\n          {breakpoint === 'L'\r\n            ? statistic.slice(0)\r\n            : breakpoint === 'S'\r\n            ? capitalize(\r\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\r\n              )\r\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\r\n        </abbr>\r\n        <div\r\n          style={{\r\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\r\n          }}\r\n        >\r\n          <div\r\n            className={classnames(\r\n              {'arrow-up': sortData.isAscending},\r\n              {'arrow-down': !sortData.isAscending}\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </th>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  return equal(prevProps.regionHighlighted, currProps.regionHighlighted);\r\n};\r\n\r\nfunction Table({\r\n  states,\r\n  districts,\r\n  zones,\r\n  regionHighlighted,\r\n  onHighlightState,\r\n  onHighlightDistrict,\r\n}) {\r\n  const [sortData, setSortData] = useLocalStorage('sortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n  });\r\n  const {t} = useTranslation();\r\n\r\n  const [sortedStates, setSortedStates] = useState(\r\n    states.filter((state) => state.statecode !== 'TT')\r\n  );\r\n\r\n  const FineprintTop = useMemo(\r\n    () => (\r\n      <React.Fragment>\r\n        <h5\r\n          className=\"table-fineprint fadeInUp\"\r\n          style={{animationDelay: '1.5s'}}\r\n        >\r\n          {t('Compiled from State Govt. numbers')},{' '}\r\n          <Link to=\"/about\" style={{color: '#6c757d'}}>\r\n            {t('know more')}!\r\n          </Link>\r\n        </h5>\r\n        <h5\r\n          className=\"table-fineprint fadeInUp\"\r\n          style={{animationDelay: '1.5s'}}\r\n        >\r\n          District zones as published by MoHFW,{' '}\r\n          <a\r\n            href=\"https://www.facebook.com/airnewsalerts/photos/a.262571017217636/1710062729135117/?type=3&theater\"\r\n            style={{color: '#6c757d'}}\r\n          >\r\n            source\r\n          </a>\r\n        </h5>\r\n      </React.Fragment>\r\n    ),\r\n    [t]\r\n  );\r\n\r\n  const FineprintBottom = useMemo(\r\n    () => (\r\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\r\n        {states.slice(1).filter((s) => s && s.confirmed > 0).length} States/UTS\r\n        Affected\r\n      </h5>\r\n    ),\r\n    [states]\r\n  );\r\n\r\n  const doSort = useCallback(\r\n    (sortData) => {\r\n      const newSortedStates = [...sortedStates].sort((x, y) => {\r\n        if (sortData.sortColumn !== 'state') {\r\n          return sortData.isAscending\r\n            ? parseInt(x[sortData.sortColumn]) -\r\n                parseInt(y[sortData.sortColumn])\r\n            : parseInt(y[sortData.sortColumn]) -\r\n                parseInt(x[sortData.sortColumn]);\r\n        } else {\r\n          return sortData.isAscending\r\n            ? x[sortData.sortColumn].localeCompare(y[sortData.sortColumn])\r\n            : y[sortData.sortColumn].localeCompare(x[sortData.sortColumn]);\r\n        }\r\n      });\r\n      setSortedStates(newSortedStates);\r\n    },\r\n    [sortedStates]\r\n  );\r\n\r\n  const handleSort = useCallback(\r\n    (statistic) => {\r\n      const newSortData = {\r\n        isAscending: !sortData.isAscending,\r\n        sortColumn: statistic,\r\n      };\r\n      doSort(newSortData);\r\n      setSortData(Object.assign({}, sortData, newSortData));\r\n    },\r\n    [doSort, setSortData, sortData]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    doSort(sortData);\r\n  });\r\n\r\n  if (states.length > 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <ReactTooltip\r\n          place=\"right\"\r\n          type=\"dark\"\r\n          effect=\"solid\"\r\n          multiline={true}\r\n          globalEventOff=\"click\"\r\n        />\r\n\r\n        {FineprintTop}\r\n\r\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"state-heading\" onClick={() => handleSort('state')}>\r\n                <div className=\"heading-content\">\r\n                  <abbr title=\"State\">{t('State/UT')}</abbr>\r\n                  <div\r\n                    style={{\r\n                      display:\r\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className={classnames(\r\n                        {'arrow-up': sortData.isAscending},\r\n                        {'arrow-down': !sortData.isAscending}\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              {STATE_ROW_STATISTICS.map((statistic, index) => (\r\n                <StateHeaderCell\r\n                  key={index}\r\n                  handleSort={handleSort}\r\n                  sortData={sortData}\r\n                  statistic={statistic}\r\n                />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n\r\n          {states && (\r\n            <tbody>\r\n              {sortedStates.map((state, index) => {\r\n                if (state.confirmed > 0 && state.statecode !== 'TT') {\r\n                  return (\r\n                    <Row\r\n                      key={state.statecode}\r\n                      state={state}\r\n                      districts={districts[state.state]?.districtData}\r\n                      zones={zones[state.state]}\r\n                      regionHighlighted={\r\n                        equal(regionHighlighted?.state, state.state)\r\n                          ? regionHighlighted\r\n                          : null\r\n                      }\r\n                      onHighlightState={onHighlightState}\r\n                      onHighlightDistrict={onHighlightDistrict}\r\n                    />\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </tbody>\r\n          )}\r\n\r\n          {states && (\r\n            <tbody>\r\n              <Row\r\n                key={0}\r\n                state={states[0]}\r\n                onHighlightState={onHighlightState}\r\n              />\r\n            </tbody>\r\n          )}\r\n        </table>\r\n        {states && FineprintBottom}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <div style={{height: '50rem'}}></div>;\r\n  }\r\n}\r\n\r\nexport default React.memo(Table, isEqual);\r\n","import axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport React, {useState, useLayoutEffect} from 'react';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nconst newDate = new Date();\r\nlet currentDate = newDate;\r\n\r\nfunction Updates(props) {\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        setUpdates(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  // reset the currentDate after rendering is complete\r\n  // in case the currentDate was changed during addHeader\r\n  useLayoutEffect(() => {\r\n    currentDate = newDate;\r\n  });\r\n\r\n  return (\r\n    <div className=\"updates\">\r\n      <div className=\"update\">\r\n        <h5>New!</h5>\r\n        <h4>Added zones to district tables</h4>\r\n      </div>\r\n\r\n      <div className=\"updates-header\">\r\n        <h2>{format(currentDate, 'd MMM')}</h2>\r\n      </div>\r\n\r\n      {updates\r\n        .slice(-5)\r\n        .reverse()\r\n        .map(function (activity, index) {\r\n          activity.update = activity.update.replace('\\n', '<br/>');\r\n          const activityDate = new Date(activity.timestamp * 1000);\r\n          const addHeader = () => {\r\n            currentDate = activityDate;\r\n\r\n            return (\r\n              <React.Fragment>\r\n                {index === 0 ? (\r\n                  <div className=\"update\">\r\n                    <h4>No updates yet!</h4>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <div className=\"updates-header\">\r\n                  <h2>{format(activityDate, 'd MMM')}</h2>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          };\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {activityDate.getDate() !== currentDate.getDate()\r\n                ? addHeader()\r\n                : ' '}\r\n              <div key={index} className=\"update\">\r\n                <h5>\r\n                  {formatDistance(\r\n                    new Date(activity.timestamp * 1000),\r\n                    new Date()\r\n                  ) + ' ago'}\r\n                </h5>\r\n                <h4\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: activity.update,\r\n                  }}\r\n                ></h4>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Updates;\r\n","import Footer from './footer';\r\n// import LanguageSwitcher from './languageswitcher';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport Minigraph from './minigraph';\r\nimport Search from './search';\r\nimport Table from './table';\r\nimport TimeSeriesExplorer from './timeseriesexplorer';\r\nimport Updates from './updates';\r\n\r\nimport {STATE_CODES_REVERSE} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  mergeTimeseries,\r\n  preprocessTimeseries,\r\n  parseStateTimeseries,\r\n  parseStateTestTimeseries,\r\n  parseTotalTestTimeseries,\r\n  parseDistrictZones,\r\n  //  isDevelopmentOrTest,\r\n} from '../utils/commonfunctions';\r\n\r\nimport 'intersection-observer';\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport axios from 'axios';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useEffectOnce, useLocalStorage} from 'react-use';\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState(null);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\r\n  const [districtZones, setDistrictZones] = useState(null);\r\n  const [stateTestData, setStateTestData] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState(null);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState({\r\n    state: 'Total',\r\n  });\r\n  const [showUpdates, setShowUpdates] = useState(false);\r\n  const [anchor, setAnchor] = useState(null);\r\n  const [mapOption, setMapOption] = useState('confirmed');\r\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\r\n    false\r\n  );\r\n\r\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\r\n    'lastViewedLog',\r\n    null\r\n  );\r\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\r\n\r\n  const Bell = useMemo(\r\n    () => (\r\n      <Icon.Bell\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n          setNewUpdate(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setNewUpdate, showUpdates]\r\n  );\r\n\r\n  const BellOff = useMemo(\r\n    () => (\r\n      <Icon.BellOff\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n        }}\r\n      />\r\n    ),\r\n    [showUpdates]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    getStates();\r\n  });\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        const lastTimestamp = response.data\r\n          .slice()\r\n          .reverse()[0]\r\n          .timestamp.toString();\r\n        if (lastTimestamp !== lastViewedLog) {\r\n          setNewUpdate(true);\r\n          setLastViewedLog(lastTimestamp);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        {data: statesDailyResponse},\r\n        {data: zonesResponse},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n        axios.get('https://api.covid19india.org/zones.json'),\r\n      ]);\r\n\r\n      const [\r\n        {data},\r\n        {data: stateDistrictWiseResponse},\r\n        {data: stateTestData},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/state_test_data.json'),\r\n      ]);\r\n\r\n      setStates(data.statewise);\r\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\r\n\r\n      const ts = parseStateTimeseries(statesDailyResponse);\r\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\r\n      // Testing data timeseries\r\n      const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\r\n      testTs['TT'] = parseTotalTestTimeseries(data.tested);\r\n      // Merge\r\n      const tsMerged = mergeTimeseries(ts, testTs);\r\n      setTimeseries(tsMerged);\r\n\r\n      setLastUpdated(data.statewise[0].lastupdatedtime);\r\n\r\n      const testData = [...stateTestData.states_tested_data].reverse();\r\n      const totalTest = data.tested[data.tested.length - 1];\r\n      testData.push({\r\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\r\n        totaltested: totalTest.totalsamplestested,\r\n        source: totalTest.source,\r\n        state: 'Total',\r\n      });\r\n      setStateTestData(testData);\r\n\r\n      setStateDistrictWiseData(stateDistrictWiseResponse);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = useCallback((state) => {\r\n    if (!state) return setRegionHighlighted(null);\r\n    setRegionHighlighted({state: state.state});\r\n  }, []);\r\n\r\n  const onHighlightDistrict = useCallback((district, state) => {\r\n    if (!state && !district) return setRegionHighlighted(null);\r\n    setRegionHighlighted({district, state: state.state});\r\n  }, []);\r\n\r\n  const options = {\r\n    rootMargin: '0px 0px 0px 0px',\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Home\">\r\n        <Helmet>\r\n          <title>Coronavirus Outbreak in India - covid19india.org</title>\r\n          <meta\r\n            name=\"title\"\r\n            content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\r\n          />\r\n        </Helmet>\r\n\r\n        <div className=\"home-left\">\r\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\r\n            {/* <LanguageSwitcher />*/}\r\n            {fetched && <Search />}\r\n\r\n            <div className=\"actions\">\r\n              <h5>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : formatDateAbsolute(lastUpdated)}\r\n              </h5>\r\n              {fetched && !showUpdates && (\r\n                <div className=\"bell-icon\">\r\n                  {fetched && Bell}\r\n                  {newUpdate && <div className=\"indicator\"></div>}\r\n                </div>\r\n              )}\r\n              {fetched && showUpdates && BellOff}\r\n            </div>\r\n          </div>\r\n\r\n          {showUpdates && <Updates />}\r\n\r\n          {states && <Level data={states[0]} />}\r\n          {timeseries && <Minigraph timeseries={timeseries['TT']} />}\r\n          {stateDistrictWiseData && (\r\n            <Table\r\n              states={states}\r\n              summary={false}\r\n              districts={stateDistrictWiseData}\r\n              zones={districtZones}\r\n              regionHighlighted={regionHighlighted}\r\n              setRegionHighlighted={setRegionHighlighted}\r\n              onHighlightState={onHighlightState}\r\n              onHighlightDistrict={onHighlightDistrict}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"home-right\">\r\n          <React.Fragment>\r\n            {fetched && (\r\n              <MapExplorer\r\n                mapName={'India'}\r\n                states={states}\r\n                districts={stateDistrictWiseData}\r\n                zones={districtZones}\r\n                stateTestData={stateTestData}\r\n                regionHighlighted={regionHighlighted}\r\n                setRegionHighlighted={setRegionHighlighted}\r\n                anchor={anchor}\r\n                setAnchor={setAnchor}\r\n                mapOption={mapOption}\r\n                setMapOption={setMapOption}\r\n              />\r\n            )}\r\n\r\n            <Observer\r\n              options={options}\r\n              onChange={({isIntersecting}) =>\r\n                setIsTimeseriesIntersecting(isIntersecting)\r\n              }\r\n            >\r\n              <div>\r\n                {timeseries && (\r\n                  <TimeSeriesExplorer\r\n                    timeseries={\r\n                      timeseries[\r\n                        STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                      ]\r\n                    }\r\n                    activeStateCode={\r\n                      STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                    }\r\n                    onHighlightState={onHighlightState}\r\n                    states={states}\r\n                    anchor={anchor}\r\n                    setAnchor={setAnchor}\r\n                    isIntersecting={isTimeseriesIntersecting}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Observer>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n      {fetched && <Footer />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import anime from 'animejs';\r\nimport React, {useState, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  useEffectOnce,\r\n  useLockBodyScroll,\r\n  useWindowSize,\r\n  useLocalStorage,\r\n} from 'react-use';\r\n\r\nconst navLinkProps = (path, animationDelay) => ({\r\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\r\n  style: {\r\n    animationDelay: `${animationDelay}s`,\r\n  },\r\n});\r\n\r\nconst activeNavIcon = (path) => ({\r\n  style: {\r\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\r\n  },\r\n});\r\n\r\nfunction Navbar({pages, darkMode, setDarkMode}) {\r\n  const [expand, setExpand] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [isThemeSet, setIsThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useLockBodyScroll(expand);\r\n  const windowSize = useWindowSize();\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div\r\n        className=\"navbar-left\"\r\n        onClick={() => {\r\n          setDarkMode((prevMode) => !prevMode);\r\n          setIsThemeSet(true);\r\n        }}\r\n      >\r\n        {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\r\n      </div>\r\n      <div className=\"navbar-middle\">\r\n        <Link\r\n          to=\"/\"\r\n          onClick={() => {\r\n            setExpand(false);\r\n          }}\r\n        >\r\n          Covid19<span>India</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div\r\n        className=\"navbar-right\"\r\n        onClick={() => {\r\n          setExpand(!expand);\r\n        }}\r\n        onMouseEnter={() => {\r\n          if (window.innerWidth > 769) {\r\n            setExpand(true);\r\n            anime({\r\n              targets: '.navbar-right path',\r\n              strokeDashoffset: [anime.setDashoffset, 0],\r\n              easing: 'easeInOutSine',\r\n              duration: 250,\r\n              delay: function (el, i) {\r\n                return i * 250;\r\n              },\r\n              direction: 'alternate',\r\n              loop: false,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        {windowSize.width < 769 && <span>{expand ? 'Close' : 'Menu'}</span>}\r\n        {windowSize.width > 769 && (\r\n          <React.Fragment>\r\n            <span>\r\n              <Link to=\"/\">\r\n                <Icon.Home {...activeNavIcon('/')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/demographics\">\r\n                <Icon.Users {...activeNavIcon('/demographics')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/deepdive\">\r\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/essentials\">\r\n                <Icon.Package {...activeNavIcon('/essentials')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/about\">\r\n                <Icon.HelpCircle {...activeNavIcon('/about')} />\r\n              </Link>\r\n            </span>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n\r\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Expand({expand, pages, setExpand}) {\r\n  const expandElement = useRef(null);\r\n  const {t} = useTranslation();\r\n\r\n  useEffectOnce(() => {\r\n    anime({\r\n      targets: expandElement.current,\r\n      translateX: '10rem',\r\n      easing: 'easeOutExpo',\r\n      duration: 250,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"expand\"\r\n      ref={expandElement}\r\n      onMouseLeave={() => {\r\n        setExpand(false);\r\n      }}\r\n    >\r\n      {pages.map((page, i) => {\r\n        if (page.showInNavbar === true) {\r\n          return (\r\n            <Link\r\n              to={page.pageLink}\r\n              key={i}\r\n              onClick={() => {\r\n                setExpand(false);\r\n              }}\r\n            >\r\n              <span\r\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\r\n              >\r\n                {t(page.displayName)}\r\n              </span>\r\n            </Link>\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n\r\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\r\n        <h5>{t('A crowdsourced initiative.')}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import Home from './components/home';\r\nimport Navbar from './components/navbar';\r\nimport ScrollToTop from './utils/ScrollToTop';\r\n\r\nimport React, {Suspense, lazy} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nimport './App.scss';\r\n\r\nconst DeepDive = lazy(() => import('./components/deepdive'));\r\nconst FAQ = lazy(() => import('./components/faq'));\r\nconst PatientDB = lazy(() => import('./components/patientdb'));\r\nconst Resources = lazy(() => import('./components/resources'));\r\nconst State = lazy(() => import('./components/state'));\r\n\r\nconst schemaMarkup = {\r\n  '@context': 'http://schema.org/',\r\n  '@type': 'NGO',\r\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\r\n  alternateName: 'COVID-19 Tracker',\r\n  url: 'https://www.covid19india.org/',\r\n  image: 'https://www.covid19india.org/thumbnail.png',\r\n};\r\n\r\nfunction App() {\r\n  const {t} = useTranslation();\r\n\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/demographics',\r\n      view: PatientDB,\r\n      displayName: t('Demographics'),\r\n      animationDelayForNavbar: 0.3,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/deepdive',\r\n      view: DeepDive,\r\n      displayName: t('Deep Dive'),\r\n      animationDelayForNavbar: 0.4,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/essentials',\r\n      view: Resources,\r\n      displayName: t('Essentials'),\r\n      animationDelayForNavbar: 0.5,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/about',\r\n      view: FAQ,\r\n      displayName: t('About'),\r\n      animationDelayForNavbar: 0.6,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/state/:stateCode',\r\n      view: State,\r\n      displayName: t('State'),\r\n      animationDelayForNavbar: 0.7,\r\n      showInNavbar: false,\r\n    },\r\n  ];\r\n\r\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\r\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useEffectOnce(() => {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(true);\r\n    } else if (\r\n      window.matchMedia &&\r\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(false);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (darkMode) {\r\n      document.querySelector('body').classList.add('dark-mode');\r\n    } else {\r\n      document.querySelector('body').classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaMarkup)}\r\n        </script>\r\n      </Helmet>\r\n\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Suspense fallback={<div className=\"lazy\"></div>}>\r\n          <Route\r\n            render={({location}) => (\r\n              <div className=\"Almighty-Router\">\r\n                <Navbar\r\n                  pages={pages}\r\n                  darkMode={darkMode}\r\n                  setDarkMode={setDarkMode}\r\n                />\r\n                <Switch location={location}>\r\n                  {pages.map((page, index) => {\r\n                    return (\r\n                      <Route\r\n                        exact\r\n                        path={page.pageLink}\r\n                        render={({match}) => (\r\n                          <page.view key={match.params.stateCode || index} />\r\n                        )}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Redirect to=\"/\" />\r\n                </Switch>\r\n              </div>\r\n            )}\r\n          />\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from './App';\r\nimport './i18n';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={''}>\r\n    <App />\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import {STATE_CODES, STATE_CODES_REVERSE} from '../constants';\r\n\r\nimport {\r\n  parse,\r\n  differenceInDays,\r\n  isBefore,\r\n  isSameDay,\r\n  startOfDay,\r\n} from 'date-fns';\r\nimport {utcToZonedTime} from 'date-fns-tz';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nexport const isDevelopmentOrTest = () => {\r\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return STATE_CODES[code.toUpperCase()];\r\n};\r\n\r\nexport const getIndiaDay = () => {\r\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Kolkata'));\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      // Skip data from the current day\r\n      const today = getIndiaDay();\r\n      const date = parse(d.date, 'dd MMMM', new Date(2020, 0, 1));\r\n      return isBefore(date, today);\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat, index) => ({\r\n    date: parse(stat.date, 'dd MMMM', new Date(2020, 0, 1)),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n    // Active = Confimed - Recovered - Deceased\r\n    totalactive:\r\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\r\n    dailyactive:\r\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = parse(data[i].date, 'dd-MMM-yy', new Date());\r\n    // Skip data from the current day\r\n    if (isBefore(date, today)) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        // Parser\r\n        const dailyconfirmed = +data[i][stateCode] || 0;\r\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\r\n        const dailydeceased = +data[i + 2][stateCode] || 0;\r\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\r\n        const totalrecovered =\r\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\r\n        const totaldeceased =\r\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\r\n        // Push\r\n        v.push({\r\n          date: date,\r\n          dailyconfirmed: dailyconfirmed,\r\n          dailyrecovered: dailyrecovered,\r\n          dailydeceased: dailydeceased,\r\n          totalconfirmed: totalconfirmed,\r\n          totalrecovered: totalrecovered,\r\n          totaldeceased: totaldeceased,\r\n          // Active = Confimed - Recovered - Deceased\r\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\r\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};\r\n\r\nexport const parseStateTestTimeseries = (data) => {\r\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\r\n    ret[sc] = [];\r\n    return ret;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\r\n    const totaltested = +d.totaltested;\r\n    const stateCode = STATE_CODES_REVERSE[d.state];\r\n    if (stateCode && isBefore(date, today) && totaltested) {\r\n      const stateTs = testTimseries[stateCode];\r\n      let dailytested;\r\n      if (stateTs.length) {\r\n        const prev = stateTs[stateTs.length - 1];\r\n        dailytested =\r\n          differenceInDays(date, prev.date) === 1\r\n            ? totaltested - prev.totaltested\r\n            : NaN;\r\n      } else dailytested = NaN;\r\n      stateTs.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const parseTotalTestTimeseries = (data) => {\r\n  const testTimseries = [];\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(\r\n      d.updatetimestamp.split(' ')[0],\r\n      'dd/MM/yyyy',\r\n      new Date()\r\n    );\r\n    const totaltested = +d.totalsamplestested;\r\n    if (isBefore(date, today) && totaltested) {\r\n      let dailytested;\r\n      if (testTimseries.length) {\r\n        const prev = testTimseries[testTimseries.length - 1];\r\n        if (isSameDay(date, prev.date)) {\r\n          prev.dailytested += totaltested - prev.totaltested;\r\n          prev.totaltested = totaltested;\r\n        } else {\r\n          if (differenceInDays(date, prev.date) === 1)\r\n            dailytested = totaltested - prev.totaltested;\r\n          else dailytested = NaN;\r\n        }\r\n      } else dailytested = NaN;\r\n      testTimseries.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const mergeTimeseries = (ts1, ts2) => {\r\n  const tsRet = Object.assign({}, ts1);\r\n  for (const state in ts1) {\r\n    if (ts1.hasOwnProperty(state)) {\r\n      tsRet[state] = ts1[state].map((d1) => {\r\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\r\n        return {\r\n          totaltested: testData?.totaltested,\r\n          dailytested: testData?.dailytested,\r\n          ...d1,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  return tsRet;\r\n};\r\n\r\nexport const capitalize = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const capitalizeAll = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  const str = s.toLowerCase().split(' ');\r\n  for (let i = 0; i < str.length; i++) {\r\n    str[i] = capitalize(str[i]);\r\n  }\r\n  return str.join(' ');\r\n};\r\n\r\nexport const abbreviate = (s) => {\r\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\r\n};\r\n\r\nexport const parseDistrictZones = (data, state) => {\r\n  const zones = data.reduce((ret, d) => {\r\n    ret[d.state] = ret[d.state] || {};\r\n    ret[d.state][d.district] = d;\r\n    return ret;\r\n  }, {});\r\n  Object.values(STATE_CODES).forEach((state) => {\r\n    if (!zones[state]) zones[state] = {};\r\n  });\r\n  return state ? {[state]: zones[state]} : zones;\r\n};\r\n","import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport const testedToolTip = (\r\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\r\n    <Icon.Info\r\n      data-for=\"tested\"\r\n      data-tip=\"Reporting total samples tested from ICMR data\"\r\n      data-event=\"touchstart mouseover\"\r\n      data-event-off=\"mouseleave\"\r\n    />\r\n    <ReactTooltip\r\n      id=\"tested\"\r\n      place=\"top\"\r\n      type=\"dark\"\r\n      effect=\"solid\"\r\n      multiline={true}\r\n      scrollHide={true}\r\n      globalEventOff=\"click\"\r\n    />\r\n  </span>\r\n);\r\n"],"sourceRoot":""}